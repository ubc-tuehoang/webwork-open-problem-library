#Description
#Math for Elementary Education
#End Description

# DBsubject(Transformations)
# DBchapter(Geometry)
# DBsection(Rotation and Reflection)
# Date(2/21/22)
# Institution(SUNY Oneonta)
# Level(2)
# KEYWORDS('rotation','transformation')

###################################

DOCUMENT();
loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"MathObjects.pl",
"PGgraphmacros.pl",
"PGauxiliaryFunctions.pl", #for lcm, gcd,etc
 "extraAnswerEvaluators.pl"
);	

# make sure we're in the context we want
Context("Numeric");

$ax = random(1,3,1);
$ay = random(-3,-2,1);
$bx = random(4,6,1);
$by = $ay;
$cx = $ax;
$cy = random(-5,-6,1);
$px = random(0,1,1);
$py = random(-2,-1,1);


# now initialize the graph
$graph = init_graph(-7,-7, 7,7,axes=>[0,0],grid=>[14,14], size=>[500,500]);
         $label1=  new Label(0 ,2  , '2','black',('bottom','right'));
         $graph -> lb($label1);
         $label2=  new Label(0 ,3  , '3','black',('bottom','right'));
         $graph -> lb($label2);
         $label3=  new Label(2 ,0  , '2','black',('bottom','right'));
         $graph -> lb($label3);
         $label4=  new Label(3 ,0  , '3','black',('bottom','right'));
         $graph -> lb($label4);
         $label5=  new Label(4 ,0  , '4','black',('bottom','right'));
         $graph -> lb($label5);
         $label6=  new Label(0 ,4  , '4','black',('bottom','right'));
         $graph -> lb($label6);
         $label7=  new Label(0 ,-1  , '-1','black',('bottom','right'));
         $graph -> lb($label7);
         $label11=  new Label(0 ,-2  , '-2','black',('bottom','right'));
         $graph -> lb($label11);
         $label12=  new Label(0 ,-3  , '-3','black',('bottom','right'));
         $graph -> lb($label12);
         $label13=  new Label(-2 ,0  , '-2','black',('bottom','right'));
         $graph -> lb($label13);
         $label14=  new Label(-3 ,0  , '-3','black',('bottom','right'));
         $graph -> lb($label14);
         $label15=  new Label(-4 ,0  , '-4','black',('bottom','right'));
         $graph -> lb($label15);
         $label16=  new Label(0 ,-4  , '-4','black',('bottom','right'));
         $graph -> lb($label16);
         $label17=  new Label(0 ,-5  , '-5','black',('bottom','right'));
         $graph -> lb($label17);
         $label21=  new Label(0 ,-6  , '-6','black',('bottom','right'));
         $graph -> lb($label21);
         $label22=  new Label(0 ,3  , '3','black',('bottom','right'));
         $graph -> lb($label22);
         $label23=  new Label(-5 ,0  , '-5','black',('bottom','right'));
         $graph -> lb($label23);
         $label24=  new Label(-6 ,0  , '-6','black',('bottom','right'));
         $graph -> lb($label24);
         $label25=  new Label(5 ,0  , '5','black',('bottom','right'));
         $graph -> lb($label25);
         $label26=  new Label(0 ,5  , '5','black',('bottom','right'));
         $graph -> lb($label26);
         $label27=  new Label(0 ,6  , '6','black',('bottom','right'));
         $graph -> lb($label27);
         $label28=  new Label(6 ,0  , '6','black',('bottom','right'));
         $graph -> lb($label28);
         $label29=  new Label(-1 ,0  , '-1','black',('bottom','right'));
         $graph -> lb($label29);

         $label30=  new Label($ax+.4 ,$ay+.2  , 'A','black',('bottom','right'));
         $label30->font(GD::Font->Giant);
         $graph -> lb($label30);
         $label31=  new Label($cx+.4 ,$cy-.4  , 'C','black',('bottom','right'));
         $label31->font(GD::Font->Giant);
         $graph -> lb($label31);
         $label32=  new Label($bx+.2,$by+.2, 'B','black',('bottom','right'));
         $label32->font(GD::Font->Giant);
         $graph -> lb($label32);
         $label32=  new Label($px+.5,$py-.3, 'P','black',('bottom','right'));
         $label32->font(GD::Font->Giant);
         $graph -> lb($label32);


              $graph->moveTo($ax,$ay);  
              $graph->lineTo($bx,$by ,'black');

              $graph->lineTo($cx,$cy,'black');
              $graph->lineTo($ax,$ay,'black');
 
         $circle_object1 = closed_circle( $ax,$ay,'black' );
         $graph -> stamps($circle_object1);
         $circle_object1 = closed_circle( $bx,$by,'black' );
         $graph -> stamps($circle_object1);
         $circle_object1 = closed_circle( $cx,$cy,'black' );
        $graph -> stamps($circle_object1);
         $circle_object1 = closed_circle( $px,$py,'black' );
        $graph -> stamps($circle_object1);


$ax1=Compute("$ax-2*abs($ax-$px)");
$bx1=Compute("$bx-2*abs($bx-$px)");
$cx1=Compute("$cx-2*abs($cx-$px)");
$ay1=Compute("2*abs($ay-$py)+$ay");
$by1=Compute("2*abs($by-$py)+$by");
$cy1=Compute("2*abs($cy-$py)+$cy");

#NOTE  Actual size of box is in the image below
TEXT(beginproblem());

BEGIN_TEXT

$BR

\{ image( insertGraph($graph), tex_size=>100,
    height=>500, width=>500
    ) \}

$PAR
Find the coordinates of each vertex of \(\bigtriangleup ABC\) after a rotation of \(180^{\circ}\) centered at point \(P\).
$PAR
\(A' = \) \{ans_rule(20)\}  $BR
\(B' = \) \{ans_rule(20)\}  $BR
\(C' = \) \{ans_rule(20)\}  $BR


END_TEXT
ANS(interval_cmp("($ax1,$ay1)", unions=>'no'));
ANS(interval_cmp("($bx1,$by1)", unions=>'no'));
ANS(interval_cmp("($cx1,$cy1)", unions=>'no'));


COMMENT('MathObject version');
ENDDOCUMENT();


## DBsubject('NECAP')
## DBchapter('Grade 8')
## DBsection('2008')


## DESCRIPTION
## Formula answer template
## ENDDESCRIPTION
## DBsubject(WeBWorK)
## DBchapter(Consumer_Math)
## DBsection(Fort Lewis tutorial 2011)
## Date(06/28/2018)
## Institution(SUNY Oneonta)
## Author(Christopher Smith)
## MO(1)
## KEYWORDS('gcd','lcm','Euclidean algorithm','linear combination')

###########################
#  Initialization

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "PGML.pl",
  "MathObjects.pl",
  "parserMultiAnswer.pl",
  "scaffold.pl",
  "PGcourse.pl",
  "niceTables.pl",
  "unionTables.pl",
  "parserPopUp.pl",
"weightedGrader.pl",
"answerHints.pl",
);
TEXT(beginproblem());


###########################
#  Setup

Context("Numeric");
$GCD = random(1, 15); # Greatest common divisor for the 2 values

$Quo04 = random(2, 5); # Begin quotients for each step, working backwards
$Quo03 = random(1, 5); 
$Quo02 = random(1, 5); 
$Quo01 = random(1, 5);

$Num04 = ($Quo04 * $GCD); # + 0, this is the final step of the Euclidean algorithm working backwards  
$Num03 = ($Quo03 * $Num04) + $GCD;
$Num02 = ($Quo02 * $Num03) + $Num04;
$Num01 = ($Quo01 * $Num02) + $Num03;

$UpFromN = "n+1";

Context("LimitedNumeric");
$Ans = Compute($GCD);

# Find the least common multiple of the two series
$LCM = Compute(($Num01 * $Num02) / $GCD); # This is it
 
BEGIN_PGML
[@ $PAR @]*
Consider the numbers [$Num01] and [$Num02]. Find the GCD of [$Num01] and [$Num02] using the Euclidean Algorithm.
[@ $PAR @]*
END_PGML

BEGIN_TEXT
$PAR
$BCENTER
$BBOLD Euclidean Algorithm Process $EBOLD
$BR
\{ begintable(4) \}
\{ row( " ", " Quotient ", "Remainder", "Formula" ) \}
\{ row( "$SPACE Step 1 $SPACE", "$SPACE \( q_1  = \frac{a}{b}  \) $SPACE" ,  "$SPACE \( r_1  = a - bq_1  \) $SPACE" , "$SPACE \( a  = bq_1 + r_1  \) $SPACE"  ) \}
\{ row( "$SPACE Step 2 $SPACE", "$SPACE \( q_2  = \frac{b}{r_1}  \) $SPACE" ,  "$SPACE \( r_2  = b - q_2r_1  \) $SPACE", "$SPACE \( b  = q_2r_1 + r_2  \) $SPACE"   ) \}
\{ row( "$SPACE Step 3 $SPACE", "$SPACE \( q_3  = \frac{b}{r_1}  \) $SPACE" ,  "$SPACE \( r_3  = r_1 - q_3r_2  \) $SPACE", "$SPACE \( r_1  = q_3r_2 + r_3  \) $SPACE"   ) \}
\{ row( "$SPACE Step 4 $SPACE", "$SPACE \( q_4  = \frac{b}{r_1}  \) $SPACE" ,  "$SPACE \( r_4  = r_2 - q_4r_3  \) $SPACE", "$SPACE \( r_2  = q_4r_3 + r_4  \) $SPACE"   ) \}
\{ row( "$SPACE Step \(n\) $SPACE", "$SPACE \( q_n  = \frac{b}{r_1}  \) $SPACE" ,  "$SPACE \( r_n  = r_{n-2} - q_nr_{n-1}  \) $SPACE" , "$SPACE \( r_{n-2}  = q_nr_{n-1} + r_n  \) $SPACE"   ) \}
\{ endtable() \}
$BR 
$BR
\{ begintable(5) \}
\{ row( " ", "Dividend", "Divisor", "Quotient", "Remainder" ) \}
\{ row( "$SPACE Step 1 $SPACE", ans_rule(10) ,  ans_rule(10) ,  ans_rule(10) ,  ans_rule(10)  ) \}
\{ row( "$SPACE Step 2 $SPACE", ans_rule(10) ,  ans_rule(10) ,  ans_rule(10) ,  ans_rule(10)  ) \}
\{ row( "$SPACE Step 3 $SPACE", ans_rule(10) ,  ans_rule(10) ,  ans_rule(10) ,  ans_rule(10)  ) \}
\{ row( "$SPACE Step 4 $SPACE", ans_rule(10) ,  ans_rule(10) ,  ans_rule(10) ,  ans_rule(10)  ) \}
\{ endtable() \}
$ECENTER
$BR
$BR
Write the GCD as a linear integral combination of $Num01 and $Num02: $BCENTER $Num01 \(\bullet\) \{ans_rule(10)\} + $Num02 \(\bullet\) \{ans_rule(10)\} $ECENTER
$BR
Find the LCM of $Num01 and $Num02: \{ans_rule(10)\}
$BR
$BR
END_TEXT

############################
#  Answer evaluation

$showPartialCorrectAnswers = 1;

# Step 1
ANS(Compute($Num01)->cmp()); # Dividend
ANS(Compute($Num02)->cmp()); # Divisor
ANS(Compute($Quo01)->cmp()); # Quotient
ANS(Compute($Num03)->cmp()); # Remainder

# Step 2
ANS(Compute($Num02)->cmp()); # Dividend
ANS(Compute($Num03)->cmp()); # Divisor
ANS(Compute($Quo02)->cmp()); # Quotient
ANS(Compute($Num04)->cmp()); # Remainder

# Step 3
ANS(Compute($Num03)->cmp()); # Dividend
ANS(Compute($Num04)->cmp()); # Divisor
ANS(Compute($Quo03)->cmp()); # Quotient
ANS(Compute($GCD)->cmp()); # Remainder

# Step 4
ANS(Compute($Num04)->cmp()); # Dividend
ANS(Compute($GCD)->cmp()); # Divisor
ANS(Compute($Quo04)->cmp()); # Quotient
ANS(Compute(0)->cmp()); # Remainder

# Greatest common divisor
ANS(Compute($Ans)->cmp()); # GCD
ANS(Compute($Ans)->cmp()); # GCD
ANS(Compute($LCM)->cmp()); # GCD


ENDDOCUMENT();
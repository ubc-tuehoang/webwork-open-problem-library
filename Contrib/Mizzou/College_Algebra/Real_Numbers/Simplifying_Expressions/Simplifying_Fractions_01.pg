# DESCRIPTION
# Asks to simplify an expression with fractions in it
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Algebraic Fractions')
## KEYWORDS('algebraic fractions', 'fractions')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "contextFraction.pl",
  "PGcourse.pl"
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Fraction-NoDecimals");
$a = random(4,7);
$sign = random(-1,1,1); # subtract or add
if ($sign == 0) {
  $pm = "-";
} else {
  $pm = "+";
}
do {$d1 = random(2,6)} until ($d1 != $a);
do {$d2 = random(2,6)} until ($d2 != $d1);
do {$n1 = random(2,9)} until ($n1 != $d1);
do {$n2 = random(2,9)} until ($n2 != $d2);
$ans = Fraction($a*$n1*$d2 + $sign*$n2*$d1,$d1*$d2);
$dispexpn = "$a \cdot \frac{$n1}{$d1} $pm \frac{$n2}{$d2}";
Context()->operators->undefine("+","-","*","^");


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Perform the following operations and simplify.
$PAR
\[
$dispexpn
\]
$PAR
Answer: \{ans_rule(20)\}
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS(Compute($ans)->cmp(studentsMustReduceFractions=>1));


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} \($ans\)
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 

COMMENT('Features Periodic Rerandomization');
ENDDOCUMENT();

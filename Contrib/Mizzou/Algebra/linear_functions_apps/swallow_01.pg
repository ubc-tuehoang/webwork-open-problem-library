# DESCRIPTION
# Determine the airspeed of the swallow.
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Functions')
## DBsection('Modeling with Functions')
## KEYWORDS('functions', 'algebra, application of linear equations')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGcourse.pl"
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Numeric");
@words = ("one eighth", "one quarter", "three eighths", "one half", "five eights", "three quarters", "seven eighths");
@n = (1/8,2/8,3/8,4/8,5/8,6/8,7/8);

do {
  $k = random(1,5,2);
  $d = $n[$k];
  do {
    $t1 = random(2,12)/60;
    $r1 = $d/$t1;
  } until (floor($r1) == $r1);
  $r2 = $r1 + random(4,12,2);
  $t2 = $d/$r2;
  $t = $t1 + $t2;
  $tm = $t*60;
  $r = ($r1+$r2)/2;
  $w = $r2 - $r;
} until ($tm == floor($tm) && $w > 2);
$word = $words[$k];


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
One day, Donnie observes that the wind is blowing at $w miles per hour. An unladen swallow nesting near Donnie's house flies $word of a mile down the road (in the direction of the wind), turns around, and returns exactly $tm minutes later. What is the airspeed of the unladen swallow? (Here, $LQ airspeed $RQ is the speed that the swallow can fly in still air.)
$PAR
Answer: \{ans_rule(10)\} miles per hour
END_TEXT
Context()->normalStrings;


###########################################################################
# check the answer  
###########################################################################
ANS(Compute($r)->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
Context()->texStrings;
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} $r miles per hour
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 


ENDDOCUMENT();

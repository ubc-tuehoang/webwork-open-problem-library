# DESCRIPTION
# Gives a function and asks to find F(x+p), F(x) + p, F(x) + F(p), for some p with p nonzero.
# The function types are: ax + b, b - ax, b - ax^2, ax^2 + bx + c (necessary to force reduction).
# Randomly chooses the order of F(x+p), F(x) + p, F(x) + F(p).
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Functions')
## DBsection('Evaluation and Solving')
## KEYWORDS('functions', 'function notation', 'function operations', 'function evaluation')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGchoicemacros.pl",
  "contextLimitedPolynomial.pl",
  "PGcourse.pl"
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("LimitedPolynomial-Strict");
Context()->flags->set(reduceConstantFunctions=>0);
Context()->variables->are(x=>"Real", X=>"Real", f=>"Real", F=>"Real");

$a = random(-1,1,2)*random(2,7);
$b = random(-1,1,2)*random(2,7);
$c = non_zero_random(-7,7);
$p = random(-1,1,2)*non_zero_random(2,9);
@funs = ("$a x + $c", "$c - $a x", "$c - $a x^2", "$a x^2 + $b x + $c");
@simp = ("F(x+$p)", "F(x) + $p", "F(x) + F($p)");

$case1 = random(0,3);
$dfun = $funs[$case1];

if ($case1 == 0) {
  $c0 = $c+$a*$p;
  $c1 = $a;
  $answer[0] = ($c0 == 0) ? Formula("$c1 x")->reduce : Formula("$c1 x + $c0")->reduce;
  
  $d0 = $c+$p;
  $d1 = $a;
  $answer[1] = ($d0 == 0) ? Formula("$d1 x")->reduce : Formula("$d1 x + $d0")->reduce;

  $e0 = 2*$c + $a*$p;
  $e1 = $a;
  $answer[2] = ($e0 == 0) ? Formula("$e1 x")->reduce : Formula("$e1 x + $e0")->reduce;
} elsif ($case1 == 1) {
  $c0 = $c-$a*$p;
  $c1 = -$a;
  $answer[0] = ($c0 == 0) ? Formula("$c1 x")->reduce : Formula("$c1 x + $c0")->reduce;
  
  $d0 = $c+$p;
  $d1 = -$a;
  $answer[1] = ($d0 == 0) ? Formula("$d1 x")->reduce : Formula("$d1 x + $d0")->reduce;

  $e0 = 2*$c - $a*$p;
  $e1 = -$a;
  $answer[2] = ($e0 == 0) ? Formula("$e1 x")->reduce : Formula("$e1 x + $e0")->reduce;
} elsif ($case1 == 2) {
  $c0 = $c - $a*(($p)**2);
  $c1 = -2*$a*$p;
  $c2 = -$a;
  $answer[0] = ($c0 == 0) ? Formula("$c2 x^2 + $c1 x")->reduce : Formula("$c2 x^2 + $c1 x + $c0")->reduce;

  $d0 = $c+$p;
  $d1 = -$a;
  $answer[1] = ($d0 == 0) ? Formula("$d1 x^2")->reduce : Formula("$d1 x^2 + $d0")->reduce;
  
  $e0 = 2*$c - $a*(($p)**2);
  $e1 = -$a;
  $answer[2] = ($e0 == 0) ? Formula("$e1 x^2")->reduce : Formula("$e1 x^2 + $e0")->reduce;
} elsif ($case1 == 3) {
  $c0 = $c + $b*$p + $a*(($p)**2);
  $c1 = $b + 2*$a*$p;
  $c2 = $a;
  if ($c0 == 0 && $c1 == 0) {
    $answer[0] = Formula("$c2 x^2")->reduce;
  } elsif ($c0 == 0) {
    $answer[0] = Formula("$c2 x^2 + $c1 x")->reduce;
  } elsif ($c1 == 0) {
    $answer[0] = Formula("$c2 x^2 + $c0")->reduce;
  } else {
    $answer[0] = Formula("$c2 x^2 + $c1 x + $c0")->reduce;
  }

  $d0 = $c + $p;
  $d1 = $b;
  $d2 = $a;
  $answer[1] = ($d0 == 0) ? Formula("$d2 x^2 + $d1 x")->reduce : Formula("$d2 x^2 + $d1 x + $d0")->reduce;

  $e0 = 2*$c + $b*$p + $a*(($p)**2);
  $e1 = $b;
  $e2 = $a;
  $answer[2] = ($e0 == 0) ? Formula("$e2 x^2 + $e1 x")->reduce : Formula("$e2 x^2 + $e1 x + $e0")->reduce;
}

@ch = shuffle(3);


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Given that \(F(x) = $dfun\), find and simplify:
$PAR
$SPACE $SPACE (a) \($simp[$ch[0]] = \) \{ans_rule(20)\}
$BR
$SPACE $SPACE (b) \($simp[$ch[1]] = \) \{ans_rule(20)\}
$BR
$SPACE $SPACE (c) \($simp[$ch[2]] = \) \{ans_rule(20)\}
END_TEXT
Context()->normalStrings;


###########################################################################
# check the answer  
###########################################################################
ANS($answer[$ch[0]]->cmp());
ANS($answer[$ch[1]]->cmp());
ANS($answer[$ch[2]]->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
Context()->texStrings;
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} $BR (a) \($simp[$ch[0]] = $answer[$ch[0]]\), $BR (b) \($simp[$ch[1]] = $answer[$ch[1]]\), and $BR (c) \($simp[$ch[2]] = $answer[$ch[2]]\)
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 

COMMENT('Features Periodic Rerandomization. Edited and updated in 2012/2013.
$BR
Desc: Gives a function and asks to find F(x+p), F(x) + p, F(x) + F(p), for some p with p nonzero. The function types are: ax + b, b - ax, b - x^2, ax^2 + bx + c, x/a (necessary to force reduction). Randomly chooses the order of F(x+p), F(x) + p, F(x) + F(p).');
ENDDOCUMENT();

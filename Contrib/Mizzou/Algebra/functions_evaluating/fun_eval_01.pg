# DESCRIPTION
# Gives a function and asks to find F(px) and pF(x), for some p with abs(p) > 1.
# The function types are: ax + b, b - ax, b - ax^n, ax^2 + bx + c (necessary to force reduction).
# Randomly swaps the order of F(px) and pF(x).
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Functions')
## DBsection(''Evaluation and Solving'')
## KEYWORDS('functions', 'function notation', 'function operations', 'function evaluation')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "contextLimitedPolynomial.pl",
  "PGcourse.pl"
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("LimitedPolynomial-Strict");
Context()->flags->set(reduceConstantFunctions=>0);
Context()->variables->are(x=>"Real", X=>"Real", f=>"Real", F=>"Real");


$a = random(-1,1,2)*random(2,7);
$b = random(-1,1,2)*random(2,7);
$c = non_zero_random(-7,7);
$n = random(2,3);
$p = ($n == 3) ? random(-1,1,2)*random(2,5) : random(-1,1,2)*non_zero_random(2,9);
@funs = ("$a x + $c", "$c - $a x", "$c - $a x^{$n}", "$a x^2 + $b x + $c");

$case1 = random(0,3);
$dfun = $funs[$case1];

if ($case1 == 0) {
  $c0 = $c*$p;
  $c1 = $a*$p;
  $answer1 = Formula("$c1 x + $c0")->reduce;
  
  $d0 = $c;
  $d1 = $a*$p;
  $answer2 = Formula("$d1 x + $d0")->reduce;
} elsif ($case1 == 1) {
  $c0 = $c*$p;
  $c1 = -$a*$p;
  $answer1 = Formula("$c1 x + $c0")->reduce;

  $d0 = $c;
  $d1 = -$a*$p;
  $answer2 = Formula("$d1 x + $d0")->reduce;
} elsif ($case1 == 2) {
  $c0 = $c*$p;
  $c1 = -$a*$p;
  $answer1 = Formula("$c1 x^{$n} + $c0")->reduce;

  $d0 = $c;
  $d1 = -$a*(($p)**$n);
  $answer2 = Formula("$d1 x^{$n} + $d0")->reduce;
} elsif ($case1 == 3) {
  $c0 = $c*$p;
  $c1 = $b*$p;
  $c2 = $a*$p;
  $answer1 = Formula("$c2 x^2 + $c1 x + $c0")->reduce;
  
  $d0 = $c;
  $d1 = $b*$p;
  $d2 = $a*(($p)**2);
  $answer2 = Formula("$d2 x^2 + $d1 x + $d0")->reduce;
}

$dsimp1 = "$p F(x)";
$dsimp2 = "F($p x)";
$swap = random(0,1,1);
if ($swap == 1) {
  $tmp = $dsimp1;
  $dsimp1 = $dsimp2;
  $dsimp2 = $tmp;
  $tmp = $answer1;
  $answer1 = $answer2;
  $answer2 = $tmp;
}



###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Given that \(F(x) = $dfun\), find and simplify:
$PAR
$SPACE $SPACE (a) \($dsimp1 = \) \{ans_rule(20)\}
$BR
$SPACE $SPACE (b) \($dsimp2 = \) \{ans_rule(20)\}
END_TEXT
Context()->normalStrings;


###########################################################################
# check the answer  
###########################################################################
ANS($answer1->cmp());
ANS($answer2->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
Context()->texStrings;
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} $BR (a) \($dsimp1 = $answer1\) and $BR (b) \($dsimp2 = $answer2\)
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 

COMMENT('Features Periodic Rerandomization. Edited and updated in 2012/2013.
$BR
Desc: Gives a function and asks to find F(px) or pF(x), for some p with abs(p) > 1. The function types are: ax + b, b - ax, b - x^2, ax^2 + bx + c, x/a (necessary to force reduction). Randomly swaps the order of F(px) and pF(x).');
ENDDOCUMENT();

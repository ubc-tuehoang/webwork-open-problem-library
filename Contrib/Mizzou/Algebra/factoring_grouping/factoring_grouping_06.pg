# DESCRIPTION
# Factor an expression in two variables by grouping where only -1 or 1 can be factored 
# out of last 2 terms.
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Expanding and Factoring')
## KEYWORDS('factoring', 'factor', 'factorization', 'grouping')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "contextLimitedPowers.pl",
  "contextPolynomialFactors.pl",
  "MUHelp.pl",
  "PGcourse.pl"
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
@vars = ("x","y","m","n","s","t","u","v");
$ch = random(0,6,2);
$v1 = $vars[$ch];
$v2 = $vars[$ch+1];

$c = non_zero_random(-7,7,1);
do {$d = non_zero_random(-7,7,1)} until (gcd($c,$d) == 1);
do {
  $k = random(1,6);
  $a = abs($c)*$k;
  $b = sgn($c)*$d*$k;
} until ($a != 1 || abs($b) != 1);

if ($a == 1) {
  $disp = "$v1 $v2";
} else {
  $disp = "$a $v1 $v2";
}

if ($b == 1) {
  $disp = $disp."$v1";
} elsif ($b == -1) {
  $disp = $disp."-$v1";
} else {
  $disp = $disp."+ $b $v1";
}

if ($c == 1) {
  $disp = $disp."+ $v2";
} elsif ($c == -1) {
  $disp = $disp."- $v2";
} else {
  $disp = $disp."+ $c $v2";
}
$disp = $disp."+ $d";

$p1 = sgn($c)*$c;
$p2 = sgn($c)*$d;
$q1 = $k;
$q2 = sgn($c);
$fac1 = "$p1 $v2 +  $p2";
$fac2 = "$q1 $v1 + $q2";

Context("PolynomialFactors-Strict");
LimitedPowers::OnlyPositiveIntegers(minPower=>0, maxPower=>2, message=>"either 0, 1, or 2");
Context()->variables->are($v1=>"Real", $v2=>"Real");
$answer = Compute("($fac1)($fac2)")->reduce;
$texanswer = "\(($fac1)($fac2)\)";


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Factor the expression and simplify your answer as much as possible:
$PAR $BCENTER 
\($disp =\) \{ $answer->ans_rule(30) \}
$ECENTER
END_TEXT
Context()->normalStrings;


###########################################################################
# check the answer  
###########################################################################
ANS($answer->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
Context()->texStrings;
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} $texanswer
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Help:${EBOLD} \{ MUHelp("factoring") \}
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus();

COMMENT('Features Periodic Rerandomization. Edited and updated in 2012/2013.
$BR
Desc: Factor an expression in two variables by grouping where only -1 or 1 can be factored out of last 2 terms.');
ENDDOCUMENT();

# DESCRIPTION
# Find all the listed information for the given graph.
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Functions')
## DBsection('Graphs of Functions')
## KEYWORDS('graphs', 'equations', 'inequalities', 'zeros', 'intercepts')
## Author('Patrick Spencer')
## Institution('University of Missouri-Columbia')


# Initialize {{{
# =========================================================
DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGgraphmacros.pl",
  "parserPopUp.pl",
  "PGcourse.pl"
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;
$refreshCachedImages = 1;
# }}}======================================================

# Pick good points {{{
# =========================================================
# Context("Numeric")->strings->add(none=>{}, "does not exist"=>{});
# sline = straight line
$sline_middle_x = random(-1,1);
$sline_left_x = random(-9,-7);
$sline_left_y = random(-5,-3);
$sline_slope = $sline_left_y / ($sline_left_x - $sline_midde_x);
$sline_right_x = -$sline_left_x;
$sline_right_y = -$sline_left_y;

# pfunc = piecewise function
$pfunc_1_x = random(-6,-4);
$mountain_top_x = random(-3,-2);

$pfunc_2_x = random(4, 6);
$valley_x = random(2,-3);
# }}}======================================================

# Construct Cartesian plane {{{
# =========================================================
# $sqr = max(abs($a),abs($b),abs($c))+1;
$sqr=10;
($maxx, $maxy, $minx, $miny, $gsize, $tickx, $ticky) = ($sqr, $sqr, -$sqr, -$sqr, 600, 1, 1);
if ($sqr > 6) {$tickx = 2; $ticky = 2};
$graph = init_graph($minx, $miny, $maxx, $maxy, size=>[$gsize,$gsize]);
for ($i = $minx; $i <= $maxx; $i++) {
  $graph->moveTo($i,$miny);
  $graph->lineTo($i,$maxy,'gray',1);
}
for ($i = $miny; $i <= $maxy; $i++) {
  $graph->moveTo($minx,$i);
  $graph->lineTo($maxx,$i,'gray',1);
}
$graph->moveTo($minx, 0);
$graph->arrowTo($maxx, 0, 'black', 2);
$graph->arrowTo($minx, 0, 'black', 2);
$graph->moveTo(0, $miny);
$graph->arrowTo(0, $maxy, 'black', 2);
$graph->arrowTo(0, $miny, 'black', 2);
$graph->lb(new Label($maxx-0.1, 0.4, 'x', 'black', 'bottom', 'right'));
$graph->lb(new Label(0.4, $maxy-0.1, 'y', 'black', 'top', 'left'));

for ($i = $minx+1; $i < $maxx; $i++) {
  if (($i != 0 && $i % $tickx == 0) || $i == 1) {
    $graph->lb(new Label($i,-0.1,$i, 'black', 'top','center'));
  }
}

for ($i = $miny+1; $i < $maxy; $i++) {
  if (($i != 0 && $i % $ticky == 0) || $i == 1) {
    $graph->lb(new Label(-0.1,$i,$i, 'black', 'middle', 'right'));
  }
}
# }}}======================================================

# Plot points {{{
# =========================================================
$graph->stamps(new Circle($sline_middle_x,0,4,'blue','blue'));
$graph->stamps(new Circle($sline_left_x,$sline_left_y,4,'blue','blue'));
$graph->stamps(new Circle($sline_right_x,$sline_right_y,4,'blue','blue'));
$graph->stamps(new Circle($pfunc_1_x,0,4,'blue','blue'));
$graph->stamps(new Circle($mountain_top_x,0,4,'blue','blue'));
$graph->stamps(new Circle($pfunc_2_x,0,4,'blue','blue'));
$graph->stamps(new Circle($valley_x,0,4,'blue','blue'));
# }}}======================================================

# Define Functions {{{
# =========================================================
# the strightline 'g' which we compare to the other func 'f'
$straight_line = sub {
  my $x = shift();
  return $sline_left_y + $sline_slope*($x-$sline_left_x);
};

# Draw a line between most left 2 points
$line1 = sub {
  my $x = shift();
  return
  $sline_left_y+((-$sline_left_y)/($pfunc_1_x-$sline_left_x))*($x - $sline_left_x);
};
$line1f = new Fun($line1, $graph);
$line1f->domain($sline_left_x,$pfunc_1_x);
$line1f->steps(500);
$line1f->weight(2);

# }}}======================================================

# Draw function on cartesian plane {{{
# =========================================================
$singf = new Fun($straight_line,$graph);
$singf->domain(-$c,$c);
$singf->steps(500);
$singf->weight(2);
$singf->color(green);

# $singh = new Fun($sinh,$graph);
# $singh->domain(-$c,$c);
# $singh->steps(500);
# $singh->weight(2);
# $singh->color(green);
# }}}======================================================

$scale = 0.8;
$fig = image(insertGraph($graph), width=>$gsize*$scale, height=>$gsize*$scale, tex_size=>250);

# State the problem {{{
# =========================================================
Context()->texStrings;
BEGIN_TEXT
Given the graph of \(y = f(x)\) below, answer all of the following questions.
$PAR
$BCENTER
\{ $fig \}
$BR
$ECENTER
$PAR
x value of middle point on straight line (\$sline_middle_x) is: \( $sline_middle_x \) $BR
x value of left point on straight line (\$sline_left_x )is: \( $sline_left_x \) $BR
\$pfunc_1_x is: $pfunc_1_x $BR
\$pfunc_2_x is: $pfunc_2_x $BR
slope of straight line is: $sline_slope $BR $BR
(a) Solve \(f(x)\): \{ans_rule(35)\} $BR
END_TEXT
Context()->normalStrings;
# }}}======================================================

# Check the answer {{{
# =========================================================
ANS(Compute("$yfill")->cmp());
# }}}======================================================

# use PeriodicRerandomization to write the answer and {{{
# generate a new version of the problem
# =========================================================
Context()->texStrings;

COMMENT('Features Periodic Rerandomization. Created in 2013.
$BR
Desc: Find all the listed information for the given graph.');
# }}}======================================================

ENDDOCUMENT();

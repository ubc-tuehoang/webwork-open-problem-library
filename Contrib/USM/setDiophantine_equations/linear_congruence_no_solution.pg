##DESCRIPTION
##  Number theory: simple linear congruence with no solution
##ENDDESCRIPTION

##KEYWORDS('number theory', 'linear', 'congruence')

## DBsubject('Number Theory')
## DBchapter('Diophantine equations')
## DBsection('Solving linear congruence')
## Date('07/15/2018')
## Author('John Perry')
## Institution('University of Southern Mississippi')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "parserPopUp.pl",
   "PGchoicemacros.pl",
   "scaffold.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#

$has_solution = PopUp( [ "?", "yes", "no" ], "no" );

@primes = ( 7, 11, 13, 17 );
$d = @primes[ random(0,3,1) ];
$a = $d * random(2,6);
$b = $a;
while ( $a == $b || ($a % $b == 0) || ($b % $a == 0) ) {
  $b = $d * random(2,6);
}
$x0 = random(-9,-6,1);
$y0 = random(6,9,1);
$c = $d - 1;
$mc = new_multiple_choice();
$mc->qa(
  "Why is there no solution?",
  "\(\gcd($a,$b)\) does not divide $c"
);
$mc->makeLast(
  "$a and $b are relatively prime",
  "$a and $c are relatively prime",
  "\(\gcd($a,$b)\) divides $c",
  "\(\gcd($a,$c)\) divides $b",
  "\(\gcd($a,$b)\) does not divide $c",
  "\(\gcd($a,$c)\) does not divide $b",
  "dude, just accept it and move on!"
);

$x_d = $b/$d;
$y_d = $a/$d;

##############################################################
#
#  Text
#
#

Context()->texStrings;
BEGIN_TEXT

<b>This is a three-part problem. Once you answer the first part correct, a second part will appear. Once you answer that correctly, a third part will appear.</b>
$PAR
Consider the linear congruence \[ $c \equiv $a x \pmod{$b} . \]

END_TEXT
Context()->normalStrings;

Scaffold::Begin();
Section::Begin("Part 1");

Context()->texStrings;
BEGIN_TEXT

Does this linear congruence have integer solutions?
\{ $has_solution->menu() \}

END_TEXT
Context()->normalStrings;

ANS( $has_solution->cmp() );

Section::End();

Section::Begin("Part 2");

Context()->texStrings;
BEGIN_TEXT
Good! \{ $mc->print_q() \}
\{ $mc->print_a() \}

END_TEXT
Context()->normalStrings;

ANS( radio_cmp( $mc->correct_ans() ) );

Section::End();

Section::Begin("Part 3");

Context()->texStrings;

BEGIN_TEXT
$PAR
Suppose there had been an integer solution. What is the <b>smallest</b> positive integer I should add or subtract to the solution we've already found to obtain another integer solution?
$PAR
Add (or subtract) \{ ans_rule(5) \} to \(x\).

END_TEXT
Context()->normalStrings;

ANS( Compute($x_d)->cmp() );

Section::End();

Scaffold::End();

ENDDOCUMENT();

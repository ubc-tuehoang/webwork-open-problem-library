##DESCRIPTION
##  Number theory: which ones are primitive roots?
##ENDDESCRIPTION

##KEYWORDS('number theory', 'congruences', 'primitive roots')

## DBsubject('Number Theory')
## DBchapter('Congruences')
## DBsection('Primitive elements')
## Author('John Perry')
## Institution('University of Southern Mississippi')
## Date('7/6/2018')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGchoicemacros.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

##############################################################
#
#  Setup
#
#
Context("Numeric");

$mc=new_checkbox_multiple_choice();
$mc->qa(
"For which of the following values of \(n\) does this procedure generate all the <b>non-zero</b> canonical residues \(1,2,3,\ldots,n-1\)?",
"3", "5"
);
$mc->makeLast("3", "4", "5", "6", "7");

##############################################################
#
#  Text
#
#

Context()->texStrings;
BEGIN_TEXT

Let's try the following experiment. Take the number 2, double it, then double the result, the double that new result, and so forth &mdash; only, each time you double the result, you then reduce to the canonical residue modulo \(n\). For instance, if \(n=21\) you would generate the sequence of numbers\[2,4,8,16,11,1,2,4,8,16,11,1,\ldots,\]whereas if \(n=19\) you would generate the sequence of numbers\[2,4,8,16,13,7,14,9,18,17,15,11,3,6,12,5,10,1,2,4,8,16,13,\ldots.\]
Notice something interesting here. When \(n=19\), this procedure generated all the non-zero canonical residues \(1,2,3,\ldots,18\). But when \(n=21\), it only generated \(2, 4, 8, 16, 11\), only a quarter of all the residues.
$PAR
Isn't that weird?
$PAR
\{ $mc->print_q() \}
\{ $mc->print_a() \}
$PAR
Can you find a rule that guides which ones work, and which ones don't? We'll discuss it in class tomorrow.
END_TEXT
Context()->normalStrings;

##############################################################
#
#  Answers
#
#

install_problem_grader(~~&std_problem_grader);

$showPartialCorrectAnswers = 0;

ANS( checkbox_cmp( $mc->correct_ans() ) );

ENDDOCUMENT();        

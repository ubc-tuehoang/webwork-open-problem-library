## DESCRIPTION
## Combining 3D affine transformations with conjugacy
## ENDDESCRIPTION

## DBsubject(Geometry)
## DBchapter(Transformations)
## DBsection(Rotation and reflection)
## Date(01/31/2018)
## Institution(Bentley University)
## Author(Nathan Carter)
## TitleText1('Introduction to the Mathematics of Computer Graphics')
## AuthorText1('Nathan Carter')
## EditionText1('1')
## Section1('4')
## Problem1('11')
## KEYWORDS('transformations')

DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PGcourse.pl",
);

Context("Numeric");
$scaleFactor = random(2,9);
$x = non_zero_random(-9,9);
$y = random(-9,9);
$z = non_zero_random(-9,9);

TEXT(beginproblem());
BEGIN_PGML
Determine what formula you would use to scale a figure by a factor of [$scaleFactor] about the point [`([$x],[$y],[$z])`].  That is, how would you create a scaling transformation that leaves the point [`([$x],[$y],[$z])`] unmoved, and scales the rest of the plane around it, to [$scaleFactor] times its original size?

The answer is of the form [`T_{a,b,c}S_{d,e,f}T_{g,h,i}`].  What are the values of the variables?

[`a=`][_____]{$x}

[`b=`][_____]{$y}

[`c=`][_____]{$z}

[`d=`][_____]{$scaleFactor}

[`e=`][_____]{$scaleFactor}

[`f=`][_____]{$scaleFactor}

[`g=`][_____]{-$x}

[`h=`][_____]{-$y}

[`i=`][_____]{-$z}
END_PGML

BEGIN_PGML_SOLUTION
Rationale for the above answers:

[`T_{-[$x],-[$y],-[$z]}`] moves [`([$x],[$y],[$z])`] to the origin.

[`S_{[$scaleFactor],[$scaleFactor],[$scaleFactor]}`] scales about the origin, which now contains the center about which we want to scale.

[`T_{[$x],[$y],[$z]}`] moves [`([$x],[$y],[$z])`] back to its original location.
END_PGML_SOLUTION

ENDDOCUMENT();

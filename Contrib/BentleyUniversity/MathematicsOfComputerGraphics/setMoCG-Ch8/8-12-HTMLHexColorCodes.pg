## DESCRIPTION
## Understanding hexadecimal notation in HTML color codes
## ENDDESCRIPTION

## DBsubject(Arithmetic)
## DBchapter(Other bases)
## DBsection(Converting)
## Date(02/25/2018)
## Institution(Bentley University)
## Author(Nathan Carter)
## TitleText1('Introduction to the Mathematics of Computer Graphics')
## AuthorText1('Nathan Carter')
## EditionText1('1')
## Section1('8')
## Problem1('12')
## KEYWORDS('color vectors','HTML','hexadecimal')

DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PGcourse.pl",
  "PGessaymacros.pl",
);

Context("Matrix");
$showPartialCorrectAnswers = 1;
Context()->variables->add(t => 'Real');
$dec1 = random( 1, 15 ) * 16 + random( 10, 15 );
$dec2 = random( 50, 250 );
$dec3 = random( 50, 250 );
$dec4 = random( 50, 250 );
$hex1 = sprintf( "%X", $dec1 );
$hex1a = substr($hex1,0,1);
$hex1b = substr($hex1,1,1);
$dec1a = hex($hex1a);
$dec1b = hex($hex1b);
$hex2 = sprintf( "%X", $dec2 );
$hex3 = sprintf( "%X", $dec3 );
$hex4 = sprintf( "%X", $dec4 );
$pct1 = random( 20, 80, 20 );
$pct1ashex = sprintf( "%X", $pct1*255/100 );
$hex2a = substr($pct1ashex,0,1);
$hex2b = substr($pct1ashex,1,1);
$dec2a = hex($hex2a);
$dec2b = hex($hex2b);
@names = ( 'one-quarter', 'half', 'three-quarters' );
@descs = ( 'dark', 'medium', 'light' );
@pcts = ( 25, 50, 75 );
$index = random( 0, 2 );
$rounded = round($pcts[$index]*255/100);
$grayashex = sprintf( "%X", $rounded );

TEXT(beginproblem());
BEGIN_PGML
HTML, the markup language of the web, specifies colors using the RGB model. It uses a two-digit hexadecimal (that is, base 16) representation for each component of the vector, and concatenates the three numbers together to form one large, six-digit number. For instance, the HTML color code #80FF3B has red component 80, green component FF, and blue component 3B.

In hexadecimal, the digits 0 through 9 have their usual meanings, but the letters A through F also function as digits, and have the meanings 10 through 15, respectively. Because hexadecimal means base 16, a two-digit number such as 3B thus has the meaning [`16 \cdot 3 + 11 = 59`]. The 16 is used because the 3 is in the 16s place, and the 11 is the meaning of the digit B. (If you found this introduction to hexadecimal notation too brief, consult the web for more details.)

What is the maximum number representable with two hexadecimal digits?

Answer: [______]{255}

If your answer to the previous part represents 100% (full intensity), then what percentage does the number [$hex1] represent?

Answer: [______]{$dec1*100/255}%

What hexadecimal number represents [$pct1]%?

Answer: [______]{str_cmp($pct1ashex)}

What RGB color vector does the HTML color vector [$hex2][$hex3][$hex4] represent?

Answer: [`\langle`][_____]{$dec2/255},[_____]{$dec3/255},[_____]{$dec4/255}[`\rangle`]

What HTML color vector represents [$names[$index]]-intensity white light (a [$descs[$index]] gray)?  (You may need to round off to the nearest whole number.)

Answer: [______]{str_cmp("$grayashex$grayashex$grayashex")}
END_PGML

BEGIN_PGML_SOLUTION
The maximum would be FF, which is 15(16)+15=255.

[$hex1] is [$hex1a] in the 16s place and [$hex1b] in the 1s place.  This represents [$dec1a](16)+[$dec1b]=[$dec1].  Considering that as a percentage of 255 yields [$dec1*100/255]%.

[$pct1]% of 255 is [$pct1*255/100].  Converting this to hexadecimal requires finding [`a`] and [`b`] such that [`16a+b=[$pct1*255/100]`].  Since they must be whole numbers less than 16, we can use plain old division with remainders to find [$dec2a] and [$dec2b].  In hexadecimal, we write [$pct1ashex].

Repeating the conversion from hexadecimal described two paragraphs above, this time separately on [$hex2], [$hex3], and [$hex4], gives [$dec2], [$dec3], and [$dec4], respectively.  Each of these should be seen as a portion of 255, giving decimals [$dec2/255], [$dec3/255], and [$dec4/255].

[$pcts[$index]]% of 255 is [$pcts[$index]*255/100], which we round to [$rounded].  Converting that to hex gives us [$grayashex], which is the value of each of the three components (red, green, and blue).  So we can just repeat it three times, yielding [$grayashex][$grayashex][$grayashex].
END_PGML_SOLUTION

ENDDOCUMENT();

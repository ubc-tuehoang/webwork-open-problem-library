## DESCRIPTION
## Conjugating 2D affine transformations
## ENDDESCRIPTION

## DBsubject(Geometry)
## DBchapter(Transformations)
## DBsection(Rotation and reflection)
## Date(01/16/2018)
## Institution(Bentley University)
## Author(Nathan Carter)
## TitleText1('Introduction to the Mathematics of Computer Graphics')
## AuthorText1('Nathan Carter')
## EditionText1('1')
## Section1('3')
## Problem1('8')
## KEYWORDS('transformations')

DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PGcourse.pl",
  "PGessaymacros.pl",
);

Context("Numeric");
$x = non_zero_random(-9,9);
$y = non_zero_random(-9,9);
$deg = list_random(-90,-60,-45,-30,30,45,60,90,150,180,270);

TEXT(beginproblem());
BEGIN_PGML
To rotate a figure around some point other than the origin we can combine a sequence of affine transformations.  For instance, to rotate [`[$deg]^\circ`] around the point [`([$x],[$y])`], the sequence [`T_{[$x],[$y]}R_{[$deg]^\circ}T_{[$x*-1],[$y*-1]}`] could be employed.

Explain why the transformation accomplishes a rotation about the point [`([$x],[$y])`].

[@ ANS(essay_cmp); essay_box(4,50) @]*
END_PGML

BEGIN_PGML_SOLUTION
The first step [`T_{[$x*-1],[$y*-1]}`] moves the point about which we want to rotate to the origin.

The second step [`R_{[$deg]^\circ}`] rotates about the origin, which now contains the part of our figure about which we want to rotate.

The third step [`T_{[$x],[$y]}`] puts the figure back to its original location, now rotated.
END_PGML_SOLUTION

ENDDOCUMENT();

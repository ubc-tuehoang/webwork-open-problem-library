##DESCRIPTION
## Given one cubic Bezier curve, compute control points starting the next scene
##ENDDESCRIPTION

## DBsubject('Calculus - multivariable')
## DBchapter('Calculus of vector valued functions')
## DBsection('Parameterized curves')
## Date('03/26/2018')
## Author('Nathan Carter')
## Institution('Bentley University')
## TitleText1('Introduction to the Mathematics of Computer Graphics')
## EditionText1('1')
## AuthorText1('Nathan Carter')
## Section1('11')
## Problem1('8')
##KEYWORDS('Bezier curves','position','velocity','continuity')

########################################################################

DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PGcourse.pl",
);

Context("Numeric");
Context()->variables->add(t=>Real);
$showPartialCorrectAnswers = 1;
$p1x = 0;
$p1y = 0;
$p1z = 0;
$v1x = random(3,6,3)*random(-1,1,2);
$v1y = 0;
$v1z = 0;
$p2x = non_zero_random( -10, 10 );
$p2y = non_zero_random( -10, 10 );
$p2z = non_zero_random( -10, 10 );
$v2x = 0;
$v2y = 0;
$v2z = 0;
$which = random( 1, 3 );
if ( $which == 1 ) { $v2x = random(3,6,3)*random(-1,1,2); }
if ( $which == 2 ) { $v2y = random(3,6,3)*random(-1,1,2); }
if ( $which == 3 ) { $v2z = random(3,6,3)*random(-1,1,2); }
$t = random( 0.1, 0.9, 0.1 );

$C1x = $p1x;
$C1y = $p1y;
$C1z = $p1z;
$C2x = $p1x+$v1x/3;
$C2y = $p1y+$v1y/3;
$C2z = $p1z+$v1z/3;
$C3x = $p2x-$v2x/3;
$C3y = $p2y-$v2y/3;
$C3z = $p2z-$v2z/3;
$C4x = $p2x;
$C4y = $p2y;
$C4z = $p2z;

$Ax = 3*$C2x-3*$C1x;
$Bx = 2*(3*$C3x-6*$C2x+3*$C1x);
$Cx = 3*($C4x-3*$C3x+3*$C2x-$C1x);
$Ay = 3*$C2y-3*$C1y;
$By = 2*(3*$C3y-6*$C2y+3*$C1y);
$Cy = 3*($C4y-3*$C3y+3*$C2y-$C1y);
$Az = 3*$C2z-3*$C1z;
$Bz = 2*(3*$C3z-6*$C2z+3*$C1z);
$Cz = 3*($C4z-3*$C3z+3*$C2z-$C1z);

$velx = $Ax = $Bx*$t + $Cx*$t**2;
$vely = $Ay = $By*$t + $Cy*$t**2;
$velz = $Az = $Bz*$t + $Cz*$t**2;

$e = "&eacute;";

TEXT(beginproblem());
BEGIN_PGML
Assume we have an object whose path of motion is given by the following cubic B[$e]*zier curve.

>> [`\vec f(t)=(1-t)^3([$C1x],[$C1y],[$C1z])
              +3t(1-t)^2([$C2x],[$C2y],[$C2z])
              +3t^2(1-t)([$C3x],[$C3y],[$C3z])
              +t^3([$C4x],[$C4y],[$C4z])`] <<

Now imagine we animate an object along that path, and then need to make it connect smoothly to the next scene.

What must the object's initial position be for the second scene?

Answer: ([__________]{$C4x},[__________]{$C4y},[__________]{$C4z})

What must its initial velocity be for the second scene?

Answer: [`\langle`][__________]{$v2x},[__________]{$v2y},[_________]{$v2z}[`\rangle`]

If the second scene is also animated along a cubic B[$e]*zier curve, what will [`C_1`] and [`C_2`] be in the second scene?

Second scene [`C_1=`]([__________]{$C4x},[__________]{$C4y},[__________]{$C4z})

Second scene [`C_2=`]([__________]{$C4x+$v2x/3},[__________]{$C4y+$v2y/3},[_________]{$C4z+$v2z/3})
END_PGML

BEGIN_PGML_SOLUTION
The initial position for the second scene is the final position for the first scene, which is the fourth control point, [`([$C4x],[$C4y],[$C4z])`].

The initial velocity fo the second scene is the final velocity for the first scene, which we can compute from the last two control points of the first scene.  They are [`C_3=([$C3x],[$C3y],[$C3z])`] and [`C_4=([$C4x],[$C4y],[$C4z])`].  Recall that [`C_3=C_4-\frac13\vec v_2`], so [`v_2=3(C_4-C_3)=3(([$C4x],[$C4y],[$C4z])-([$C3x],[$C3y],[$C3z]))=\langle [$v2x],[$v2y],[$v3z] \rangle`].

In the second scene, the first control point is the initial position, [`([$C4x],[$C4y],[$C4z])`].

The second control point can be computed from the initial position and velocity.  [`C_2=P_1+\frac13\vec v_1=([$C4x],[$C4y],[$C4z])+\frac13\langle [$v2x],[$v2y],[$v2z] \rangle=([$C4x+$v2x/3],[$C4y+$v2y/3],[$C4z+$v2z/3])`]
END_PGML_SOLUTION

ENDDOCUMENT();

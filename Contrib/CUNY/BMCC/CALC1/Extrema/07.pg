DOCUMENT();  
loadMacros(
	"PGstandard.pl",
	"MathObjects.pl",
	"PGinfo.pl",
	"AppletObjects.pl",
    #"source.pl",
	"PGcourse.pl",
        "contextFraction.pl",
"PGgraphmacros.pl",
"parserRadioButtons.pl"
);
TEXT(beginproblem());

$showPartialCorrectAnswers = 1;

Context("Numeric");

$ans1=List(-0.63,-0.36,0,0.5,1,1.36,1.63);


######################################
# Create  link to applet:
###################################
# You can name your applet (anything reasonable :-) )
# Adjust the height and width as desired
# Paste the geogebra parameters in at the bottom of the page just above the 
# command end command
# so that they don't get in the way
###################################


$appletName = "ggbfoo";
$applet =  GeogebraWebApplet(
   code       => "geogebra.GeoGebraApplet",
   archive    => "geogebra.jar",
   codebase                 => findAppletCodebase("geogebra.jar"),                           
   appletName              => $appletName,
   appletId                    => $appletName,
   submitActionAlias     => 'getAppletValues',  # default actionAlias
   initializeActionAlias   => '',  # default actionAlias
   setStateAlias             => 'setXML',
   getStateAlias             => 'getXML',
   setConfigAlias           => '',
   getConfigAlias           => '',
   returnFieldName       => '',
   width                 => 400,              # may want to modify width
   height                => 300,              # may want to modify height 
  # mayscript             => "true",
   debugMode             => 0,   # set debugMode to 0 for no debug
                                              # to 1 to make xml representation visible
                                              # to 2 to add alerts detailing progression
                                              # through the applet
   onInit                => 'ggbOnInit',
   type                  => 'geogebraweb',
  
   selfLoading           => 1,
   params     => GEOGEBRA_PARAMS(),# paste parameters in 
 
);


##################################
# Setup GeogebraWebApplet -- 
###################################

HEADER_TEXT( MODES(TeX=>'', HTML=><<END_SCRIPT ) );
<script language="javascript">
function ggbOnInit(param) {
   var applet = document.$appletName; 
		if (param == "$appletName") {
 			applet_loaded(param,1);  // report that applet is ready. 
 			ww_applet_list[param].safe_applet_initialize(2);
 			ww_applet_list[param].object = param;
 			console.log("ggbOnInit: ww_applet_list["+param+"].object = ", ww_applet_list[param].object );


 		}

}
</script>
END_SCRIPT
HEADER_TEXT( MODES(TeX=>'', HTML=><<END_SCRIPT ) );
<script language="javascript">
function setConfig() {
  var appletState = getQE('${appletName}_state').value;
 //console.log("appletState =" + appletState);
 //console.log( "foobar " +ww_applet_list['$appletName'].object);
       if  (ww_applet_list['$appletName'].object == undefined )  {
                setTimeout("setConfig()", 5000); 
                console.log("waiting");
       } else {
        //console.log("run setConfig");
        //console.log("object is " +ww_applet_list['ggbfoo'].object);
        var applet=$appletName;
     
      }
   
}
</script>
END_SCRIPT



HEADER_TEXT( MODES(TeX=>'', HTML=><<END_SCRIPT ) );

<script language="javascript">
function getAppletValues() {
    console.log("getAppletValues() entered");
	// get a handle for the applet object
	var applet = $appletName;

        ; 
}
 </script>
END_SCRIPT
###################################
#insert applet into body  -- this does not need to be changed
# except to adjust the insertion of the reinitialize_button or 
# a hidden AnswerBox
###################################
 TEXT($PAR,  MODES(TeX=>'geogebraweb code', 
                      HTML=>$applet->insertAll(
                                debug =>0, 
                                reinitialize_button => 1, 
                                includeAnswerBox=>0,
 )));

#######################################
# TEXT
#######################################
Context()->texStrings;
BEGIN_TEXT
$BR
$BR
Consider the applet above. 
$BR
$BR
The graph shown is a continuous function on the interval [-1,2].
$BR
$BR
Move the point along the graph to find all the critical numbers. 
$BR
$BR
List all the critical numbers:\{ans_rule(40)\}
$BR $BR
END_TEXT

#TEXT($PAR, "foostate |", $inputs_ref->{ "${appletName}_state"}, "|");

TEXT( "run SetConfig", q!<script language="javascript">setConfig()</script> !) if $inputs_ref->{ "${appletName}_state"} =~ "restart_applet";

#########################################
# ANSWER section
#########################################

ANS($ans1->cmp(tolerance => .1));


sub GEOGEBRA_PARAMS {
    my $result = {
showResetIcon=>"false" ,
enableRightClick=>"false" ,
enableLabelDrags=>"false", 
showMenuBar=>"false" ,
showToolBar=>"false", 
showAlgebraInput=>"false", 
useBrowserForJS=>"true", 
ggbbase64=>"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"};
$result;
}
ENDDOCUMENT();
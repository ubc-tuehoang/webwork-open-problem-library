DOCUMENT();  
loadMacros(
	"PGstandard.pl",
	"MathObjects.pl",
	"PGinfo.pl",
	"AppletObjects.pl",
    #"source.pl",
	"PGcourse.pl",
        "contextFraction.pl",
"PGgraphmacros.pl",
"parserRadioButtons.pl"
);
TEXT(beginproblem());

$showPartialCorrectAnswers = 1;

Context("Numeric");
Context()->variables->add(C => 'Real');

$a=non_zero_random(-4,4);

$F=Formula("ln(abs(x-$a))+C")->reduce;
$G=Formula("1/(x-$a)")->reduce;

$ans1=Compute("$F");

######################################
# Create  link to applet:
###################################
# You can name your applet (anything reasonable :-) )
# Adjust the height and width as desired
# Paste the geogebra parameters in at the bottom of the page just above the 
# command end command
# so that they don't get in the way
###################################


$appletName = "ggbfoo";
$applet =  GeogebraWebApplet(
   code       => "geogebra.GeoGebraApplet",
   archive    => "geogebra.jar",
   codebase                 => findAppletCodebase("geogebra.jar"),                           
   appletName              => $appletName,
   appletId                    => $appletName,
   submitActionAlias     => 'getAppletValues',  # default actionAlias
   initializeActionAlias   => '',  # default actionAlias
   setStateAlias             => 'setXML',
   getStateAlias             => 'getXML',
   setConfigAlias           => '',
   getConfigAlias           => '',
   returnFieldName       => '',
   width                 => 350,              # may want to modify width
   height                => 750,              # may want to modify height 
  # mayscript             => "true",
   debugMode             => 0,   # set debugMode to 0 for no debug
                                              # to 1 to make xml representation visible
                                              # to 2 to add alerts detailing progression
                                              # through the applet
   onInit                => 'ggbOnInit',
   type                  => 'geogebraweb',
  
   selfLoading           => 1,
   params     => GEOGEBRA_PARAMS(),# paste parameters in 
 
);


##################################
# Setup GeogebraWebApplet -- 
###################################

HEADER_TEXT( MODES(TeX=>'', HTML=><<END_SCRIPT ) );
<script language="javascript">
function ggbOnInit(param) {
   var applet = document.$appletName; 
		if (param == "$appletName") {
 			applet_loaded(param,1);  // report that applet is ready. 
 			ww_applet_list[param].safe_applet_initialize(2);
 			ww_applet_list[param].object = param;
 			console.log("ggbOnInit: ww_applet_list["+param+"].object = ", ww_applet_list[param].object );
applet.evalCommand("a=$a");  

 		}

}
</script>
END_SCRIPT
HEADER_TEXT( MODES(TeX=>'', HTML=><<END_SCRIPT ) );
<script language="javascript">
function setConfig() {
  var appletState = getQE('${appletName}_state').value;
 //console.log("appletState =" + appletState);
 //console.log( "foobar " +ww_applet_list['$appletName'].object);
       if  (ww_applet_list['$appletName'].object == undefined )  {
                setTimeout("setConfig()", 5000); 
                console.log("waiting");
       } else {
        //console.log("run setConfig");
        //console.log("object is " +ww_applet_list['ggbfoo'].object);
        var applet=$appletName;
     
      }

}
</script>
END_SCRIPT



HEADER_TEXT( MODES(TeX=>'', HTML=><<END_SCRIPT ) );

<script language="javascript">
function getAppletValues() {
    console.log("getAppletValues() entered");
	// get a handle for the applet object
	var applet = $appletName;

      
}
 </script>
END_SCRIPT
###################################
#insert applet into body  -- this does not need to be changed
# except to adjust the insertion of the reinitialize_button or 
# a hidden AnswerBox
###################################
 TEXT($PAR,  MODES(TeX=>'geogebraweb code', 
                      HTML=>$applet->insertAll(
                                debug =>0, 
                                reinitialize_button => 1, 
                                includeAnswerBox=>0,
 )));

#######################################
# TEXT
#######################################
Context()->texStrings;
BEGIN_TEXT
$BR
$BR
Consider the applet above. 
$BR
$BR
The graph in red is \(\displaystyle y=$G\).
$BR
$BR
The upper window shows the slope field generated by \(\displaystyle $G\).
$BR
$BR
Move the point to construct a graph that matches the slope field.
$BR
$BR
Find the integral.
\(\displaystyle\int $G dx=\)\{ans_rule(40)\}
$BR $BR
END_TEXT

#TEXT($PAR, "foostate |", $inputs_ref->{ "${appletName}_state"}, "|");

TEXT( "run SetConfig", q!<script language="javascript">setConfig()</script> !) if $inputs_ref->{ "${appletName}_state"} =~ "restart_applet";

#########################################
# ANSWER section
#########################################

ANS($ans1->cmp(tolerance => .1));

sub GEOGEBRA_PARAMS {
    my $result = {
showResetIcon=>"false" ,
enableRightClick=>"false" ,
enableLabelDrags=>"false", 
showMenuBar=>"false" ,
showToolBar=>"false", 
showAlgebraInput=>"false", 
useBrowserForJS=>"true", 
ggbbase64=>"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"};
$result;
}
ENDDOCUMENT();
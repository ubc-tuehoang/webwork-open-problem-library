DOCUMENT();  
loadMacros(
	"PGstandard.pl",
	"MathObjects.pl",
	"PGinfo.pl",
	"AppletObjects.pl",
    #"source.pl",
	"PGcourse.pl",
        "contextFraction.pl",
"PGgraphmacros.pl",
"parserRadioButtons.pl"
);
TEXT(beginproblem());

$showPartialCorrectAnswers = 1;

Context("Numeric");

$ans1=List("-pi/2","pi/2");


######################################
# Create  link to applet:
###################################
# You can name your applet (anything reasonable :-) )
# Adjust the height and width as desired
# Paste the geogebra parameters in at the bottom of the page just above the 
# command end command
# so that they don't get in the way
###################################


$appletName = "ggbfoo";
$applet =  GeogebraWebApplet(
   code       => "geogebra.GeoGebraApplet",
   archive    => "geogebra.jar",
   codebase                 => findAppletCodebase("geogebra.jar"),                           
   appletName              => $appletName,
   appletId                    => $appletName,
   submitActionAlias     => 'getAppletValues',  # default actionAlias
   initializeActionAlias   => '',  # default actionAlias
   setStateAlias             => 'setXML',
   getStateAlias             => 'getXML',
   setConfigAlias           => '',
   getConfigAlias           => '',
   returnFieldName       => '',
   width                 => 370,              # may want to modify width
   height                => 350,              # may want to modify height 
  # mayscript             => "true",
   debugMode             => 0,   # set debugMode to 0 for no debug
                                              # to 1 to make xml representation visible
                                              # to 2 to add alerts detailing progression
                                              # through the applet
   onInit                => 'ggbOnInit',
   type                  => 'geogebraweb',
  
   selfLoading           => 1,
   params     => GEOGEBRA_PARAMS(),# paste parameters in 
 
);


##################################
# Setup GeogebraWebApplet -- 
###################################

HEADER_TEXT( MODES(TeX=>'', HTML=><<END_SCRIPT ) );
<script language="javascript">
function ggbOnInit(param) {
   var applet = document.$appletName; 
		if (param == "$appletName") {
 			applet_loaded(param,1);  // report that applet is ready. 
 			ww_applet_list[param].safe_applet_initialize(2);
 			ww_applet_list[param].object = param;
 			console.log("ggbOnInit: ww_applet_list["+param+"].object = ", ww_applet_list[param].object );


 		}

}
</script>
END_SCRIPT
HEADER_TEXT( MODES(TeX=>'', HTML=><<END_SCRIPT ) );
<script language="javascript">
function setConfig() {
  var appletState = getQE('${appletName}_state').value;
 //console.log("appletState =" + appletState);
 //console.log( "foobar " +ww_applet_list['$appletName'].object);
       if  (ww_applet_list['$appletName'].object == undefined )  {
                setTimeout("setConfig()", 5000); 
                console.log("waiting");
       } else {
        //console.log("run setConfig");
        //console.log("object is " +ww_applet_list['ggbfoo'].object);
        var applet=$appletName;
     
      }
   
}
</script>
END_SCRIPT



HEADER_TEXT( MODES(TeX=>'', HTML=><<END_SCRIPT ) );

<script language="javascript">
function getAppletValues() {
    console.log("getAppletValues() entered");
	// get a handle for the applet object
	var applet = $appletName;

        ; 
}
 </script>
END_SCRIPT
###################################
#insert applet into body  -- this does not need to be changed
# except to adjust the insertion of the reinitialize_button or 
# a hidden AnswerBox
###################################
 TEXT($PAR,  MODES(TeX=>'geogebraweb code', 
                      HTML=>$applet->insertAll(
                                debug =>0, 
                                reinitialize_button => 1, 
                                includeAnswerBox=>0,
 )));

#######################################
# TEXT
#######################################
Context()->texStrings;
BEGIN_TEXT
$BR
$BR
Consider the applet above. 
$BR
$BR
The blue graph shows the function \(f\) that is continuous on \([-\pi, \pi]\)
$BR
and differentiable on \( (-\pi, \pi)\).
$BR
$BR
Let \(a=-\pi\) and \(b=\pi\). 
$BR
$BR
Move the point along the graph to find
$BR
all the numbers \(c\) between \(a\) and \(b\) so that
$BR
$BR
\(\displaystyle f^\prime(c)=\frac{f(b)-f(a)}{b-a}\)
$BR $BR
List your answers:\{ans_rule(40)\}
$BR $BR
END_TEXT

#TEXT($PAR, "foostate |", $inputs_ref->{ "${appletName}_state"}, "|");

TEXT( "run SetConfig", q!<script language="javascript">setConfig()</script> !) if $inputs_ref->{ "${appletName}_state"} =~ "restart_applet";

#########################################
# ANSWER section
#########################################

ANS($ans1->cmp(tolerance => .1));

sub GEOGEBRA_PARAMS {
    my $result = {
showResetIcon=>"false" ,
enableRightClick=>"false" ,
enableLabelDrags=>"false", 
showMenuBar=>"false" ,
showToolBar=>"false", 
showAlgebraInput=>"false", 
useBrowserForJS=>"true", 
ggbbase64=>"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"};
$result;
}
ENDDOCUMENT();
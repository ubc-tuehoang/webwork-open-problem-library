DOCUMENT();  
loadMacros(
	"PGstandard.pl",
	"MathObjects.pl",
	"PGinfo.pl",
	"AppletObjects.pl",
    #"source.pl",
	"PGcourse.pl",
        "contextFraction.pl",
"PGgraphmacros.pl",
"parserRadioButtons.pl"
);
TEXT(beginproblem());

$showPartialCorrectAnswers = 1;

Context("Numeric");
Context()->variables->add(C => 'Real');

$ans1=Compute("atan(x)+C");
$ans2=Compute("(1/sqrt(2))*atan(x/sqrt(2))+C");
$ans3=Compute("(1/sqrt(3))*atan(x/sqrt(3))+C");
$ans4=Compute("(1/sqrt(4))*atan(x/sqrt(4))+C");

######################################
# Create  link to applet:
###################################
# You can name your applet (anything reasonable :-) )
# Adjust the height and width as desired
# Paste the geogebra parameters in at the bottom of the page just above the 
# command end command
# so that they don't get in the way
###################################


$appletName = "ggbfoo";
$applet =  GeogebraWebApplet(
   code       => "geogebra.GeoGebraApplet",
   archive    => "geogebra.jar",
   codebase                 => findAppletCodebase("geogebra.jar"),                           
   appletName              => $appletName,
   appletId                    => $appletName,
   submitActionAlias     => 'getAppletValues',  # default actionAlias
   initializeActionAlias   => '',  # default actionAlias
   setStateAlias             => 'setXML',
   getStateAlias             => 'getXML',
   setConfigAlias           => '',
   getConfigAlias           => '',
   returnFieldName       => '',
   width                 => 500,              # may want to modify width
   height                => 400,              # may want to modify height 
  # mayscript             => "true",
   debugMode             => 0,   # set debugMode to 0 for no debug
                                              # to 1 to make xml representation visible
                                              # to 2 to add alerts detailing progression
                                              # through the applet
   onInit                => 'ggbOnInit',
   type                  => 'geogebraweb',
  
   selfLoading           => 1,
   params     => GEOGEBRA_PARAMS(),# paste parameters in 
 
);


##################################
# Setup GeogebraWebApplet -- 
###################################

HEADER_TEXT( MODES(TeX=>'', HTML=><<END_SCRIPT ) );
<script language="javascript">
function ggbOnInit(param) {
   var applet = document.$appletName; 
		if (param == "$appletName") {
 			applet_loaded(param,1);  // report that applet is ready. 
 			ww_applet_list[param].safe_applet_initialize(2);
 			ww_applet_list[param].object = param;
 			console.log("ggbOnInit: ww_applet_list["+param+"].object = ", ww_applet_list[param].object );


 		}

}
</script>
END_SCRIPT
HEADER_TEXT( MODES(TeX=>'', HTML=><<END_SCRIPT ) );
<script language="javascript">
function setConfig() {
  var appletState = getQE('${appletName}_state').value;
 //console.log("appletState =" + appletState);
 //console.log( "foobar " +ww_applet_list['$appletName'].object);
       if  (ww_applet_list['$appletName'].object == undefined )  {
                setTimeout("setConfig()", 5000); 
                console.log("waiting");
       } else {
        //console.log("run setConfig");
        //console.log("object is " +ww_applet_list['ggbfoo'].object);
        var applet=$appletName;
     
      }
   
}
</script>
END_SCRIPT



HEADER_TEXT( MODES(TeX=>'', HTML=><<END_SCRIPT ) );

<script language="javascript">
function getAppletValues() {
    console.log("getAppletValues() entered");
	// get a handle for the applet object
	var applet = $appletName;

        ; 
}
 </script>
END_SCRIPT
###################################
#insert applet into body  -- this does not need to be changed
# except to adjust the insertion of the reinitialize_button or 
# a hidden AnswerBox
###################################
 TEXT($PAR,  MODES(TeX=>'geogebraweb code', 
                      HTML=>$applet->insertAll(
                                debug =>0, 
                                reinitialize_button => 1, 
                                includeAnswerBox=>0,
 )));

#######################################
# TEXT
#######################################
Context()->texStrings;
BEGIN_TEXT
$BR
$BR
Consider the function of the form
$BR
$BR
\(\displaystyle f(x)=\frac{1}{a+x^2}\)
$BR
$BR
where \(a\) is  1, 2, 3, or 4.
$BR
$BR
Use the slider at the top of the applet window above to vary \(a\).
$BR $BR
The red graph is \(y=f(x)\). The slope field generated by \(f\) is shown.
$BR
$BR
Move the point along the \(y\)-axis to construct the blue graph \(y=F(x)\)
$BR
so that \(F^\prime(x)=f(x)\).
$BR
$BR
Find the integrals.
$BR
$BR
\(\displaystyle \int\frac{1}{1+x^2}dx=\)\{ans_rule(40)\}
$BR $BR
\(\displaystyle \int\frac{1}{2+x^2}dx=\)\{ans_rule(40)\}
$BR $BR
\(\displaystyle \int\frac{1}{3+x^2}dx=\)\{ans_rule(40)\}
$BR $BR
\(\displaystyle \int\frac{1}{4+x^2}dx=\)\{ans_rule(40)\}
$BR $BR
END_TEXT

#TEXT($PAR, "foostate |", $inputs_ref->{ "${appletName}_state"}, "|");

TEXT( "run SetConfig", q!<script language="javascript">setConfig()</script> !) if $inputs_ref->{ "${appletName}_state"} =~ "restart_applet";

#########################################
# ANSWER section
#########################################

ANS($ans1->cmp(tolerance => .1));
ANS($ans2->cmp(tolerance => .1));
ANS($ans3->cmp(tolerance => .1));
ANS($ans4->cmp(tolerance => .1));

sub GEOGEBRA_PARAMS {
    my $result = {
showResetIcon=>"false" ,
enableRightClick=>"false" ,
enableLabelDrags=>"false", 
showMenuBar=>"false" ,
showToolBar=>"false", 
showAlgebraInput=>"false", 
useBrowserForJS=>"true", 
ggbbase64=>"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"};
$result;
}
ENDDOCUMENT();
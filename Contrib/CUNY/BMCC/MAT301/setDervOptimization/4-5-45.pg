## DESCRIPTION
## Calculus
## ENDDESCRIPTION

## Tagged by tda2d

## DBsubject(Calculus - single variable)
## DBchapter(Applications of differentiation)
## DBsection(Optimization - general)
## Date(5/29/2005)
## Institution(ASU)
## Author(Jeff Holt)
## MLT(Optimization_Box_SquareCut)
## MLTleader(1)
## Level(5)
## MO(1)
## TitleText1('Calculus: Early Transcendentals')
## AuthorText1('Stewart')
## EditionText1('5')
## Section1('4.7')
## Problem1('')
## TitleText2('Calculus: Early Transcendentals')
## AuthorText2('Stewart')
## EditionText2('6')
## Section2('4.7')
## Problem2('')
## KEYWORDS('derivative' 'extrema' 'optimization','Optimization Problems','Optimization' 'Maximum' 'Minimum')



DOCUMENT();        # This should be the first executable line in the problem.


loadMacros(
                "PG.pl",
                "PGgraphmacros.pl",
                "freemanMacros.pl",
                "PGbasicmacros.pl",
                "PGchoicemacros.pl",
                "PGanswermacros.pl",
                "PGauxiliaryFunctions.pl",
                "MathObjects.pl",
                "PGunion.pl",            # Union College utilities
                "parserMultiAnswer.pl",
                "PGcourse.pl",           # Customization file for the course
                "PGstandard.pl",
                "scaffold.pl"
               );

## Show partial correct answers
TEXT(beginproblem());
$showPartialCorrectAnswers = 1;



###########################################
#
#  The scaffold
#

Scaffold::Begin(
      can_open => "when_previous_correct", 
      is_open  => "always" ,
      instructor_can_open => "always", 
      after_AnswerDate_can_open => "when_previous_correct", 
      hardcopy_is_open  => "always",
    );

Context ("Numeric");
Context() -> variables -> add(y => 'Real');

# Setup

$a = random(6,12,2);
$b = random(14,20,2);
$c = (($a + $b)-sqrt(($a+$b)**2 - 3*$a*$b))/6;
$v= Formula("($a-2*x)*($b-2*x)*x");
$dv=$v->D('x');

$length = $b - 2*$c;
$width = $a - 2*$c;

$ma = MultiAnswer(Real($length),Real($width))->with(
  singleResult => 1, separator => " x ", tex_separator => '\times',
  checker => sub {
    my $correct = shift; my $student = shift;
    my ($a,$b) = @{$correct}; my ($A,$B) = @{$student};
    return ($a == $A && $b == $B) || ($a == $B && $b == $A);
  }
);



TEXT(EV2(<<EOT));
An open box is to be made out of a $a-inch by $b-inch piece of
cardboard by cutting out squares of equal size from the four corners
and bending up the sides.  Find the dimensions of the resulting box
that has the largest volume.
$PAR
EOT


BEGIN_HINT
Use this image to build and find the dimensions of this open box that maximize the volume of the open box.
$PAR \{ image( "P3.png", width=>400, height=>400) \} $BR
END_HINT


####################################################
Section::Begin("Part 1: Find the volume of the open box as a function of x, where x represents the height of the open box.");

BEGIN_TEXT
$BR
\(V(x) =\) \{ans_rule(20)\}
END_TEXT

ANS($v -> cmp );

Section::End();



####################################################
Section::Begin("Part 2: Find the first derivative of the open box, with respect to x.");

BEGIN_TEXT

$BR
 \(V'(x) =\) \{ans_rule(20)\}
END_TEXT

ANS($dv-> cmp );

Section::End();



####################################################
Section::Begin("Part 3: Find the dimensions of the resulting box
that has the largest volume.");

BEGIN_TEXT

$BR
Dimensions of the bottom of the box: \{$ma->ans_rule(10)\} x \{$ma->ans_rule(10)\}$BR
Height of the box: \{ans_rule(10)\}
END_TEXT

$showPartialCorrectAnswers = 1;

ANS($ma->cmp);
ANS(Real($c)->cmp);

Section::End();

Scaffold::End();

ENDDOCUMENT();  # This should be the last executable line in the problem.

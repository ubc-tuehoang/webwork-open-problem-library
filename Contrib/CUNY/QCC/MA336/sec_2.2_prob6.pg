## subject('Statistics')
## Date('2/28/2012')
## Author('Bianca Sosnovski')
## Institution('QCC')
## TitleText1('Understanding Basic Statistics')
## EditionText1('5')
## AuthorText1('Brase/Brase')
## Section1('2.2')
## Problem1('')

########################################################################


DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGnumericalmacros.pl",
"PGstatisticsmacros.pl",
"PGauxiliaryFunctions.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;
#install_problem_grader(~~&std_problem_grader);

# stems
$stem1 = random(15,19,1);
$stem2 = $stem1+1;
$stem3 = $stem2+1;
$stem4 = $stem3+1;
$stem5 = $stem4+1;
$stem6 = $stem5+1;

# Data values for stem 1 (5 values)
$min1 = 10*$stem1;
$max1 = $min1+9;
do{$data[0] = random ($min1,$max1,1);
$data[1] = random ($min1,$max1,1);
$data[2] = random ($min1,$max1,1);}while($data[0] == $data[1] || $data[0] == $data[2] || $data[1] == $data[2]);
$data[3] = $data[0];
$data[4] = $data[2];

@list1 = ($data[0], $data[1], $data[2], $data[3], $data[4]);
@sorted1 = num_sort(@list1);
for($i=0; $i<5; $i++){
    $digits1[$i]  = $sorted1[$i]-int($sorted1[$i]/10)*10;};
    $ans1 =  "$digits1[0]"."$digits1[1]"."$digits1[2]"."$digits1[3]"."$digits1[4]";

# Data values for stem 2 (6 values)
$min2 = 10*$stem2;
$max2 = $min2+9;
do{$data[5] = random ($min2,$max2,1);
$data[6] = random ($min2,$max2,1);
$data[7] = random ($min2,$max2,1);}while($data[5] == $data[6] || $data[5] == $data[7] || $data[6] == $data[7]);
$data[8] = $data[6];
$data[9] = $data[7];
$data[10] = $data[7];

@list2 = ($data[5], $data[6], $data[7], $data[8], $data[9], , $data[10]);
@sorted2 = num_sort(@list2);
for($i=0; $i<6; $i++){
    $digits2[$i]  = $sorted2[$i]-int($sorted2[$i]/10)*10;};
    $ans2 =  "$digits2[0]"."$digits2[1]"."$digits2[2]"."$digits2[3]"."$digits2[4]"."$digits2[5]";

# Data values for stem  4 (3 values)
$min4 = 10*$stem4;
$max4 = $min4+9;
do{$data[11] = random($min4,$max4,1);
$data[12] = random($min4,$max4,1);}while($data[11] == $data[12]);
$data[13] = $data[12];

@list4 = ($data[11], $data[12], $data[13]);
@sorted4 = num_sort(@list4);
for($i=0; $i<3; $i++){
    $digits4[$i]  = $sorted4[$i]-int($sorted4[$i]/10)*10;};
    $ans4 = "$digits4[0]"."$digits4[1]"."$digits4[2]";

# Data values for stem 5 (4 values)
$min5 = 10*$stem5;
$max5 = $min5+9;
do{$data[14] = random ($min5,$max5,1);
$data[15] = random ($min5,$max5,1);}while($data[14] == $data[15]);
$data[16] = $data[14];
$data[17] = $data[14];

@list5 = ($data[14], $data[15], $data[16], $data[17]);
@sorted5 = num_sort(@list5);
for($i=0; $i<4; $i++){
    $digits5[$i]  = $sorted5[$i]-int($sorted5[$i]/10)*10;};
    $ans5 = "$digits5[0]"."$digits5[1]"."$digits5[2]"."$digits5[3]";


# the following randomized the occurancy of no leaf for stem 3 or stem 6.
$j = random(0,1);

if($j==0){
# stem 3
$ans3 = "X"; # stem with no leaf

# Data values for stem 6 ( 4 values)
$min6 = 10*$stem6;
$max6 = $min6+9;
do{$data[18] = random ($min6,$max6,1);
$data[19] = random ($min6,$max6,1);
$data[20] = random ($min6,$max6,1);
$data[21] = random ($min6,$max6,1);}while($data[18] == $data[19] || $data[18] == $data[20] || $data[18] == $data[21] || $data[19] == $data[20] || $data[19] == $data[21] || $data[20] == $data[21]);

@list6 = ($data[18], $data[19], $data[20], $data[21]);
@sorted6 = num_sort(@list6);
for($i=0; $i<4; $i++){
    $digits6[$i]  = $sorted6[$i]-int($sorted6[$i]/10)*10;};
    $ans6 = "$digits6[0]"."$digits6[1]"."$digits6[2]"."$digits6[3]";
};

if($j==1){
# stem 6
$ans6 = "X"; # stem with no leaf

# Data values for stem 3 ( 4 values)
$min3 = 10*$stem3;
$max3 = $min3+9;
do{$data[18] = random ($min3,$max3,1);
$data[19] = random ($min3,$max3,1);
$data[20] = random ($min3,$max3,1);
$data[21] = random ($min3,$max3,1);}while($data[18] == $data[19] || $data[18] == $data[20] || $data[18] == $data[21] || $data[19] == $data[20] || $data[19] == $data[21] || $data[20] == $data[21]);

@list3 = ($data[18], $data[19], $data[20], $data[21]);
@sorted3 = num_sort(@list3);
for($i=0; $i<4; $i++){
    $digits3[$i]  = $sorted3[$i]-int($sorted3[$i]/10)*10;};
    $ans3 = "$digits3[0]"."$digits3[1]"."$digits3[2]"."$digits3[3]";
};

# shuffle the data values
@slice = NchooseK(22,22);
@a = @data[@slice];

BEGIN_TEXT
Consider the following data set:
$PAR
\[
\begin{array}{ccccccccccc} 
$a[0] & $a[1] & $a[2] & $a[3] & $a[4] & $a[5] & $a[6] & $a[7] & $a[8]& $a[9] & $a[10] \\
$a[11] & $a[12] & $a[13] & $a[14] & $a[15] & $a[16] & $a[17] & $a[18] & $a[19] & $a[20] & $a[21] 
\end{array}
\]
$BR
Below is a partially completed stem-and-leaf diagram for this data set:

$PAR
$BCENTER
\{begintable(2)\}
\{row($stem1, ans_rule(20))\}
\{row($stem2, ans_rule(20))\}
\{row(ans_rule(3), ans_rule(20))\}
\{row($stem4, ans_rule(20))\}
\{row(ans_rule(3), ans_rule(20))\}
\{row(ans_rule(3), ans_rule(20))\}
\{endtable()\}
$ECENTER
$PAR

$BBOLD Determine the correct values for the missing entries, and fill them in.$BR
If no value is needed for a given entry, then enter X.$EBOLD
$PAR

END_TEXT


ANS(str_cmp($ans1));
ANS(str_cmp($ans2));
ANS(num_cmp($stem3));
ANS(str_cmp($ans3));
ANS(str_cmp($ans4));
ANS(num_cmp($stem5));
ANS(str_cmp($ans5));
ANS(num_cmp($stem6));
ANS(str_cmp($ans6));

ENDDOCUMENT();       # This should be the last executable line in the problem.

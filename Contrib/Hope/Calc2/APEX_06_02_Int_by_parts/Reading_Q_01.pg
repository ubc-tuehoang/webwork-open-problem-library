## DBsubject(Calculus - single variable)
## DBchapter(Techniques of integration)
## DBsection(Integration by parts (without trigonometric functions))
## MLT(notrig_04)
## MLTleader(1)
## Institution(Hope College)
## Author(Paul Pearson)
## Level(3)
## MO(1)
## TitleText1('APEX Calculus')
## AuthorText1('Hartman')
## EditionText1('3.0')
## Section1('6.2')
## Problem1('')

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "parserWordCompletion.pl",
  "scaffold.pl",
  "PGcourse.pl"
);
TEXT(beginproblem());

Context("Numeric");
Context()->variables->{namePattern} = qr/[a-z][a-z0-9_]*'*/i;
Context()->variables->are(
"u"   => "Real",
"v"  => "Real",
"u'" => "Real",
"v'"   => "Real",
"du" => "Real",
"dv" => "Real",
);

$ans1 = Compute(" u' v + u v' ");
$ans2 = WordCompletion(['Fundamental Theorem of Calculus', 'product rule', 'quotient rule', 'chain rule'], 'Fundamental Theorem of Calculus');
$ans3 = Compute("v du");

BEGIN_PGML
## Reading questions on integration by parts
[@ $PAR @]*
END_PGML

Scaffold::Begin('is_open' => 'correct_or_first_incorrect');

Section::Begin("Part 1: Recall the product rule");
BEGIN_PGML
The product rule for derivatives says that if [`u`] and [`v`] are two differentiable functions of [`x`], then [` (uv)' = `] [__________]{$ans1}
END_PGML
Section::End();
    
Section::Begin("Part 2: Integrating the product rule");
BEGIN_PGML
Integrating both sides of [` (uv)' = u'v + uv' `] with respect to [`x`] gives  
>> [`` \int (uv)' \, dx = \int (u'v + uv') \, dx. ``] <<  
By the [@ ANS($ans2->cmp); $ans2->ans_rule(60) @]*, the left side integrates to [`uv`], and thus  
>> [`` uv = \int u'v \, dx + \int uv' \, dx. ``] <<
END_PGML
Section::End();

Section::Begin("Part 3: Solving for the integral of u dv");
BEGIN_PGML
Using differential notation, we can write [` du = u'(x) \, dx `] and [` dv = v'(x) \, dx `], and the expression above can be written as  
>> [`` uv = \int ``] [_________]{$ans3} [`` + \int u \, dv. ``] <<
Therefore,  
>> [`` \int u \, dv = uv - \int v \, du. ``] <<
END_PGML
Section::End();


Scaffold::End();

ENDDOCUMENT();

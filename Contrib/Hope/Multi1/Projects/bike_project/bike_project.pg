## DESCRIPTION
## The geometry of vectors in R^n
## ENDDESCRIPTION

## KEYWORDS('vectors','vector operations')

## DBsubject('Linear Algebra')
## DBchapter('Geometry of Real n-Space')
## DBsection('Points and Vectors')
## Date('December 2015')
## Author('Paul Pearson')
## Institution('Hope College')
## MO(1)

DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGchoicemacros.pl",
  "MatrixReduce.pl",
  "PGML.pl",
  "scaffold.pl",
  "answerHints.pl",
  "unionTables.pl",
  "parserMultiAnswer.pl",
  "PGcourse.pl"
);
$showPartialCorrectAnswers = 1;
$refreshCachedImages = 1;
TEXT(beginproblem()); 

Context('Matrix');
Context()->constants->remove(i,j,k);
Context()->flags->set(
  tolerance => 0.00151,
  tolType => "absolute",
);

$A = Matrix([
[0.07, 0.30, 0.06],
[0.15, 0.10, 0.05],
[0.78, 0.60, 0.89]
])->with(tolType=>'absolute',tolerance=>0.001);
$Ainv = $A->inverse;

$P = Matrix([
[0.87, 0.06, 0.12],
[0.03, 0.92, 0.10],
[0.10, 0.02, 0.78]
])->with(tolType=>'absolute',tolerance=>0.001);
$Pinv = $P->inverse;

$D = ($P * $A)->with(tolType=>'absolute',tolerance=>0.00001);
$Dincorrect = $A * $P;

# D^1000
#$D1000 = Matrix([
#[0.18990, 0.18990, 0.18990],
#[0.15601, 0.15601, 0.15601],
#[0.65409, 0.65409, 0.65409]
#]);

$x1000 = Matrix([ 
[0.18990], 
[0.15601], 
[0.65409] 
]);

$Xstable = Compute("6141 * $x1000")->with(tolType=>'absolute', tolerance=>0.51);
$Xstable2 = Compute("6141 * $x1000")->with(tolType=>'absolute', tolerance=>0.51);

$Id = Matrix([
[1,0,0],
[0,1,0],
[0,0,1]
]);

$M = $D - $Id;
$rrefM = rref($M);

$k1 = -1 * $rrefM->element(1,3);
$k2 = -1 * $rrefM->element(2,3);
$k3 = Real(1);

$xhomog = Matrix([
[$k1],
[$k2],
[$k3]
])->with(tolType=>'absolute',tolerance=>0.0001);

$k = Compute("1 / ($k1 + $k2 + $k3)")->with(tolType=>'absolute',tolerance=>0.0001);

$x0 = Matrix([
[1728],
[926],
[3487]
]);



########################################
$x1 = $D * $x0;
$x2 = $D * $x1;
$x3 = $D * $x2;
$x4 = $D * $x3;
$x5 = $D * $x4;

$ma1 = MultiAnswer(
  $x1->element(1,1)->with(tolType=>'absolute',tolerance=>0.51), 
  $x1->element(2,1)->with(tolType=>'absolute',tolerance=>0.51), 
  $x1->element(3,1)->with(tolType=>'absolute',tolerance=>0.51),
  $x2->element(1,1)->with(tolType=>'absolute',tolerance=>0.51), 
  $x2->element(2,1)->with(tolType=>'absolute',tolerance=>0.51), 
  $x2->element(3,1)->with(tolType=>'absolute',tolerance=>0.51),
  $x3->element(1,1)->with(tolType=>'absolute',tolerance=>0.51), 
  $x3->element(2,1)->with(tolType=>'absolute',tolerance=>0.51), 
  $x3->element(3,1)->with(tolType=>'absolute',tolerance=>0.51),
  $x4->element(1,1)->with(tolType=>'absolute',tolerance=>0.51), 
  $x4->element(2,1)->with(tolType=>'absolute',tolerance=>0.51), 
  $x4->element(3,1)->with(tolType=>'absolute',tolerance=>0.51),
  $x5->element(1,1)->with(tolType=>'absolute',tolerance=>0.51), 
  $x5->element(2,1)->with(tolType=>'absolute',tolerance=>0.51), 
  $x5->element(3,1)->with(tolType=>'absolute',tolerance=>0.51),
)->with(

  singleResult => 1,
  allowBlankAnswers => 1,
  checkTypes => 0,
  format =>  "<table border='0' cellspacing='10'>
  <tr><td> %s </td><td> %s </td><td> %s </td></tr>
  <tr><td> %s </td><td> %s </td><td> %s </td></tr>
  <tr><td> %s </td><td> %s </td><td> %s </td></tr>
  <tr><td> %s </td><td> %s </td><td> %s </td></tr>
  <tr><td> %s </td><td> %s </td><td> %s </td></tr>
  </table>",
  tex_format =>  "\left\lbrack\begin{array}{rr} 
  %s & %s & %s \\
  %s & %s & %s \\
  %s & %s & %s \\
  %s & %s & %s \\
  %s & %s & %s 
  \end{array}\right\rbrack",

  checker => sub {
      my ( $correct, $student, $answerHash ) = @_;
      my @c = @{$correct};
      my @s = @{$student};
      my @score = ();
      foreach my $j (0..14) {
        $score[$j] = 0;
        if ($c[$j]->typeMatch($s[$j]) && $c[$j] == $s[$j]) { $score[$j] = 1; }
      }
      return [ @score ];
  }

);


##################################

$y1 = $Pinv * $x0;
$y2 = $Ainv * $y1;
$y3 = $Pinv * $y2;

$ma2 = MultiAnswer(
  $y1->element(1,1)->with(tolType=>'absolute',tolerance=>0.51), 
  $y1->element(2,1)->with(tolType=>'absolute',tolerance=>0.51), 
  $y1->element(3,1)->with(tolType=>'absolute',tolerance=>0.51),
  $y2->element(1,1)->with(tolType=>'absolute',tolerance=>0.51), 
  $y2->element(2,1)->with(tolType=>'absolute',tolerance=>0.51), 
  $y2->element(3,1)->with(tolType=>'absolute',tolerance=>0.51),
  $y3->element(1,1)->with(tolType=>'absolute',tolerance=>0.51), 
  $y3->element(2,1)->with(tolType=>'absolute',tolerance=>0.51), 
  $y3->element(3,1)->with(tolType=>'absolute',tolerance=>0.51),
)->with(

  singleResult => 1,
  allowBlankAnswers => 1,
  checkTypes => 0,
  format =>  "<table border='0' cellspacing='10'>
  <tr><td> %s </td><td> %s </td><td> %s </td></tr>
  <tr><td> %s </td><td> %s </td><td> %s </td></tr>
  <tr><td> %s </td><td> %s </td><td> %s </td></tr>
  </table>",
  tex_format =>  "\left\lbrack\begin{array}{rr} 
  %s & %s & %s \\
  %s & %s & %s \\
  %s & %s & %s 
  \end{array}\right\rbrack",

  checker => sub {
      my ( $correct, $student, $answerHash ) = @_;
      my @c = @{$correct};
      my @s = @{$student};
      my @score = ();
      foreach my $j (0..8) {
        $score[$j] = 0;
        if ($c[$j]->typeMatch($s[$j]) && $c[$j] == $s[$j]) { $score[$j] = 1; }
      }
      return [ @score ];
  }

);
##################################

$mc = new_multiple_choice();
$mc->qa(
"What is true about the 24-hour transition matrix \( D \) and its inverse?", 
"The transition matrix is \( D = PA \) and its inverse is \( D^{-1} = A^{-1} P^{-1} \)",
);
$mc->extra(
"The transition matrix is \( D = PA \) and its inverse is \( D^{-1} = P^{-1} A^{-1} \)",
"The transition matrix is \( D = AP \) and its inverse is \( D^{-1} = A^{-1} P^{-1} \)",
"The transition matrix is \( D = AP \) and its inverse is \( D^{-1} = P^{-1} A^{-1} \)",
);
#$mc->makeLast("none of the above");


BEGIN_PGML
# Citi Bike Share Program in NYC

The project was inspired by [@ htmlLink("http://toddwschneider.com/posts/a-tale-of-twenty-two-million-citi-bikes-analyzing-the-nyc-bike-share-system/","Schneider's A Tale of Twenty-Two Million Citi Bikes","TARGET='_blank'") @]* and [@ htmlLink("http://www.nytimes.com/2013/08/15/nyregion/the-balancing-act-that-bike-share-riders-just-watch.html?_r=0","Flegenheimer's The Balancing Act That Bike-Share Riders Just Watch","TARGET='_blank'") @]*.

The Citi Bike sharing program in New York City has gathered data on over 22.2 million rides and surpassed 10 million rides in the year 2015 alone (Schneider).  There are 493 Citi Bike stations across NYC where people can check out and return bikes for a fee.  As you might imagine, one of the biggest challenges facing the Citi Bike program is maintaining a good distribution of bikes by preventing stations from running out of bikes or having more bikes than can be stored (Flegenheimer).  The Citi Bike program has vast amounts of data on where bikes are checked out and where they are returned, so that they can prevent shortages or overstocks at stations.

Every weekday morning, Citi Bike commuters flood Midtown Manhattan, often leaving pockets of the East Village and Brooklyn without bikes (Flegenheimer).  As people leave their jobs in Manhattan in the evening, the trend reverses itself.

**For weekday AM hours (from midnight and noon), assume that:**

+ Of the trips that start in Brooklyn, 15% end in the East Village and 78% end in Manhattan; the rest end in Brooklyn.
+ Of the trips that start in the East Village, 30% end in Brooklyn and 60% end in Manhattan; the rest remain in the East Village.
+ Of the trips that start in Manhattan, 6% end in Brooklyn and 5% end in the East Village; the rest end in Manhattan.

**For weekday PM hours (from noon to midnight), assume that:**
+ Of the trips that start in Brooklyn, 3% end in the East Village and 10% end in Manhattan; the rest end in Brooklyn.
+ Of the trips that start in the East Village, 6% end in Brooklyn and 2% end in Manhattan; the rest remain in the East Village.
+ Of the trips that start in Manhattan, 12% end in Brooklyn and 10% end in the East Village; the rest end in Manhattan.
[$PAR]*
END_PGML

Scaffold::Begin(
can_open=>"always",
is_open=>"incorrect",
hardcopy_is_open=>"always"
);
    
Section::Begin("Part 1: Migration diagrams");
BEGIN_PGML
Fill in the migration diagrams for the weekday morning and afternoon data.  (You should be able to do this from a blank migration diagram.)

[@ 
BeginTable().
AlignedRow(["${BBOLD}Weekday AM${EBOLD}","${BBOLD}Weekday PM${EBOLD}"]).
TableSpace(5,0).
AlignedRow([image("bikes_weekday_AM.png",width=>288,height=>312,tex_size=>400), image("bikes_weekday_PM.png",width=>288,height=>312,tex_size=>400)]). 
EndTable();
@]*

a. In the weekday AM diagram, the missing value on the arrow from Manhattan to Brooklyn is [_______]{"0.06"}

b. In the weekday PM diagram, the missing value on the arrow from the East Village to the East Village is [_______]{"0.92"}
END_PGML
Section::End();

Section::Begin("Part 2: Transition matrices");
BEGIN_PGML
Let [`A`] be the transition matrix for weekday AM hours, [`P`] be the transition matrix for weekday PM hours, and [`D`] be the transition matrix for one weekday.  Find these transition matrices.

    [`A =`] [____]*{$A} (accurate to 2 decimal places)

    [`P =`] [____]*{$P} (accurate to 2 decimal places)

    [`D =`] [____]*{$D} (accurate to 4 decimal places)
END_PGML
Section::End();

Section::Begin("Part 3: Future estimates");
BEGIN_PGML
Suppose that one second after midnight on a Monday morning, there are 1728 Citi bikes in Brooklyn, 926 Citi bikes in the East Village, and 3487 Citi Bikes in Manhattan.  How many bikes does your model estimate will be in Brooklyn, the East Village, and Manhattan during the next five days?  Your answers should be entered accurate to 1 decimal place, but you are encouraged not to round or truncate at all on your calculator in order to prevent round-off error from accumulating.

[@
ANS( $ma1->cmp );
BeginTable().
  AlignedRow(["End of day", "Brooklyn", "East Village", "Manhattan"]).
  AlignedRow(["Monday", $ma1->ans_rule(10), $ma1->ans_rule(10), $ma1->ans_rule(10) ]).
  AlignedRow(["Tuesday", $ma1->ans_rule(10), $ma1->ans_rule(10), $ma1->ans_rule(10) ]).
  AlignedRow(["Wednesday", $ma1->ans_rule(10), $ma1->ans_rule(10), $ma1->ans_rule(10) ]).
  AlignedRow(["Thursday", $ma1->ans_rule(10), $ma1->ans_rule(10), $ma1->ans_rule(10) ]).
  AlignedRow(["Friday", $ma1->ans_rule(10), $ma1->ans_rule(10), $ma1->ans_rule(10) ]).
EndTable();
@]*
END_PGML
Section::End();

Section::Begin("Part 4: Stable solution using powers of a matrix");
BEGIN_PGML
Using powers of a matrix, estimate the stable solution to the weekday Citi bike problem if there are 6141 bikes total.

    The model estimates that Brooklyn, the East Village, and Manhattan will have [`\mathbf{X_{st}}=`] [____________]*{$Xstable} bikes (respectively, from top to bottom).  Your answer should be accurate to 1 decimal place.
END_PGML
Section::End();

Section::Begin("Part 5: Stable solution using row reduction");
BEGIN_PGML
Using row reduction, find the stable solution to the weekday Citi bike problem if there are 6141 bikes total.  (That is, solve [` D \mathbf{x} = \mathbf{x}`] by a method that uses matrix algebra and row reduction.)

a. When we row reduce the appropriate matrix, we find that the stable state solution vector always has the form [`k`] [_______]*{$xhomog} (accurate to 4 decimal places) for some real number [`k`].  (Note: the bottom entry of this vector should be 1 since there is a free variable.  If your reduced row echelon form is the identity matrix, you've done something incorrect.)

b. When [`k=`] [_______]{$k}, the stable state solution vector is a probability vector (i.e., it's entries sum to 1), and this probability vector is [`\mathbf{x_{st}}=`] [________]*{$k * $xhomog}.  Your answers should be accurate to 4 decimal places.

c. When we multiply this probability vector by the total number of bikes, our model estimates that the number of bikes in each location once the stable state has been reached is [`\mathbf{X_{st}} =`] [________]*{$Xstable2}.  Your answer should be accurate to 1 decimal place.
END_PGML
Section::End();

Section::Begin("Part 6: Past estimates");
BEGIN_PGML
a. Suppose that one second before midnight on Friday, there are 1728 Citi bikes in Brooklyn, 926 Citi bikes in the East Village, and 3487 Citi Bikes in Manhattan.  How many bikes does your model estimate are in each location during the five previous 12-hour time periods?  If your model predicts negative values, please enter those negative values (not 0).  Your answers should be entered accurate to 1 decimal place, but you are encouraged not to round or truncate at all on your calculator in order to prevent round-off error from accumulating.

[@
ANS( $ma2->cmp );
BeginTable().
  AlignedRow(["Time", "Brooklyn", "East Village", "Manhattan"]).
  AlignedRow(["Friday noon", $ma2->ans_rule(10), $ma2->ans_rule(10), $ma2->ans_rule(10) ]).
  AlignedRow(["Thursday midnight", $ma2->ans_rule(10), $ma2->ans_rule(10), $ma2->ans_rule(10) ]).
  AlignedRow(["Thursday noon", $ma2->ans_rule(10), $ma2->ans_rule(10), $ma2->ans_rule(10) ]).
EndTable();
@]*

b. [@ $mc->print_q() @]***
[@ ANS( radio_cmp( $mc->correct_ans() ) ); $mc->print_a() @]***
END_PGML
Section::End();


Scaffold::End();

ENDDOCUMENT();

##DESCRIPTION
## Classify second order PDE and elliptic, parabolic, or hyperbolic
##ENDDESCRIPTION


## DBsubject(Differential equations)
## DBchapter(Partial differential equations)
## DBsection(Classification)
## MLT(ClassifyPDEorderlinearitytype)
## Author(Jiri Lebl)
## Institution(Oklahoma State University)
## Level(2)
## TitleText1('Partial Differential Equations for Scientists and Engineers')
## AuthorText1('Stanley J. Farlow')
## EditionText1('Dover')
## Section1('Lesson 23')
## Problem1('1')
## TitleText1('Partial Differential Equations for Scientists and Engineers')
## AuthorText1('Stanley J. Farlow')
## EditionText1('Dover')
## Section1('Lesson 1')
## Problem1('')
## KEYWORDS('PDE', 'partial', 'differential', 'equation')


###########################
#  Initialization

DOCUMENT();  

loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"PGcourse.pl",
);

TEXT(beginproblem());


###########################
#  Setup

# Create and use pop up lists 
$pl = new_select_list();
$pl->rf_print_q(~~&pop_up_list_print_q);

# Choices presented to students
$pl->ra_pop_up_list( [ 
"No answer" => "?",
"elliptic" => "elliptic",
"parabolic" => "parabolic",
"hyperbolic" => "hyperbolic",
"not second order" => "not second order",
"somewhere elliptic somewhere hyperbolic" => "somewhere elliptic somewhere hyperbolic",
]);

#
#  Add correct questions and answers
#
$pl->qa(
"\(u_{xx}+u_{xy}+3u_{yy}=0\)", "elliptic",
"\(u_{xx}+u_{xy}+3u_{yy}+10u_x=x^2+y^2\)", "elliptic",
"\(u_{xx}-u_{xy}+3u_{yy}+10u_y=u\)", "elliptic",
"\(u_{xx}+u_{xy}-u_{yy}=0\)", "hyperbolic",
"\(u_{xx}+u_{xy}-(x^2)u_{yy}+10u_x=x^2+y^2\)", "hyperbolic",
"\(u_{xx}+y^2 u_{xy}-3u_{yy}+10u_y=u\)", "hyperbolic",
"\(u_{xy}+xu_{yy}+yu_y=xu\)", "hyperbolic",
"\(u_{xx}+xu_{yy}+10u_y=u\)", "somewhere elliptic somewhere hyperbolic",
"\(u_{xx}+(x^2+y^2)u_{xy}+u_{yy}=u\)", "somewhere elliptic somewhere hyperbolic",
"\(u_{xx}+xu_{yy}+10u_y=u_{xxx}\)", "not second order",
"\(u_{x}+xu_{y}=\sin(x)\)", "not second order",
);
$pl->choose(11);


###########################
#  Main text

BEGIN_TEXT
Classify the as elliptic, hyperbolic, or parabolic as long as they are of second order.
(correct answer is not shown until you get all of them right)
$BR
\{ $pl -> print_q() \}
END_TEXT

############################
#  Answer evaluation

$showPartialCorrectAnswers = 0;

#  All or nothing grader
#  
install_problem_grader(~~&std_problem_grader);

ANS( str_cmp( $pl->ra_correct_ans ) );


############################
#  Solution
#
#BEGIN_SOLUTION
#${PAR}SOLUTION:${PAR}
#{ $pl->print_a \}
#END_SOLUTION

ENDDOCUMENT();

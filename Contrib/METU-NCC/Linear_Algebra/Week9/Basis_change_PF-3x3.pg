## DESCRIPTION
##  Matrix for transformation wrt different bases.
##   Code is basically dimension independent
## ENDDESCRIPTION


## DBsubject(Linear algebra)
## DBchapter(Abstract vector spaces)
## DBsection(Coordinate vectors and change of basis)
## Date(31/03/2020)
## Institution(METU-NCC)
## Author(Benjamin Walter & Satoshi Kondo)
## Level(4)
## Static(0)
## MO(1)




##################################
#  Initialization

DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGmatrixmacros.pl",
"PGchoicemacros.pl",  # needed for shuffle
"MathObjects.pl",
"rand_Array.pl"       # local library file
);

COMMENT('Random 3x3 matrix.  Random source/target bases.  Source is polynomials, target is functions.');

TEXT(beginproblem());

Context("Matrix");
Context()->lists->set(Vector=>{open=>"(",close=>")"});
Context()->{cmpDefaults}{Vector} = {promotePoints=>1};

#####################
# from rand_Array.pl:
#
#   rand_Array_2nonzero (n, m, size)    -- 2 nonzero in each row
#   rand_Array_triangle (n, m, size)    -- permuation of triangular
#   rand_Array_En       (n, m, size, k) -- product of k elementary
#   rand_Array_perm     (n, m)          -- permuation
#   ident_Array         (n, m)          -- identity
#   pick                (n, <array>)    -- picks n elements from <array>
#
#####################


my ($n, $m) = (3, 3);    # dim(domain) = m    dim(range) = n
my @T; my @V; my @W; my @E_dom; my @E_ran;

# make transformation and matrix
#
# T : P_(m-1) --> Fun(S)
# T :   p(x) |--> p(x)
#
@S = (random(0,1)==1) ? (0..($n-1)) : (-1..($n-2)); 

my $version = random(0,1);

if ($version==0) {
  foreach my $i (0..($n-1)) {     # Make transformation matrix
    $T[$i][0] = 1;
    foreach my $j (1..($m-1)) {
      $T[$i][$j] = ($S[$i])**($j);
    }
  }
} else {
  foreach my $i (0..($n-1)) {     # Make transformation matrix
    $T[$i][0] = 0;  $T[$i][1] = 1;
    foreach my $j (2..($m-1)) {
      $T[$i][$j] = $j*($S[$i])**($j-1);
    }
  }
}

do {
  @V = rand_Array_2nonzero($m);     #  input basis
} until (Matrix(@V)->det != 0);
@W = rand_Array_triangle($n);       # output basis


$M1 =                       Matrix(@T);
$M2 =                       Matrix(@T) * Matrix(@V);
$M3 = Matrix(@W)->inverse * Matrix(@T);
$M4 = Matrix(@W)->inverse * Matrix(@T) * Matrix(@V);

#######################
#
# Generate T input and output
#          V and W
#
@d = ("","\,'","\,''");
Context()->variables->are(
 x=> ['Real'],
 p=> ['Real',TeX=>"p{\small (x)}"],
 dp=>['Real',TeX=>"p'{\small (x)}"],
 x0=>['Real',TeX=>"\chi_{".$S[0]."}"], 
 x1=>['Real',TeX=>"\chi_{".$S[1]."}"], 
 x2=>['Real',TeX=>"\chi_{".$S[2]."}"], 
);

my @x = (Formula("1"),Formula("x"),Formula("x^2"),Formula("x^3"));
my @chi = (Formula("x0"),Formula("x1"),Formula("x2"));

Context()->texStrings;

##########
#
# T  input and output for display
#
$in = Formula("p");

if ($version == 0) {
  $out = Formula("p");
} else { 
  $out = Formula("dp");
}

$dom = "\mathcal{P}_{".($m-1)."}(\mathbb{R})";
$range = "\mathrm{Fun}(S)";
$S = "$S[0]"; foreach (1..$#S) { $S = $S . "," . $S[$_]; }

##########
#
# V  -- basis of domain
#
foreach my $i (0..($m-1)) {
  my $f = Formula(0);
  foreach my $j (0..($m-1)) {
    $f = $f + Formula("$V[$j][$i] * $x[$j]");
  }
  $f = $f->reduce;
  $V_basis = (defined($V_basis)) ? $V_basis . ",\ $f"     : "$f"; 
  $E_dom_b = (defined($E_dom_b)) ? $E_dom_b . ",\ $x[$i]" : "$x[$i]"; 
}

##########
#
# W  -- basis of range
#
foreach my $i (0..($n-1)) {
  my $f = Formula(0);
  foreach my $j (0..($n-1)) {
    $f = $f + Formula($W[$j][$i] * $chi[$j]);
  }
  $f = $f->reduce;
  $W_basis = (defined($W_basis)) ? $W_basis . ",\ $f"     : "$f"; 
  $E_ran_b = (defined($E_ran_b)) ? $E_ran_b . ",\ $chi[$i]" : "$chi[$i]";  
}
#####################################
#  Main text

BEGIN_TEXT

Let \(S = \lbrace $S \rbrace\) and  \(T:$dom\to $range\) be the transformation $BR
\(\qquad \displaystyle T($in) = $out\)
$PAR
and consider the ordered bases $BR
\(\qquad \displaystyle \phantom{'}{E} = \Bigl\lbrace $E_dom_b\Bigr\rbrace\) the standard basis of \($dom\) $BR
\(\qquad \displaystyle \phantom{'}{F} = \Bigl\lbrace $V_basis\Bigr\rbrace\) a basis of source \($dom\) $BR
\(\qquad \displaystyle {E'}= \Bigl\lbrace $E_ran_b\Bigr\rbrace\) the standard basis of \($range\) $BR
\(\qquad \displaystyle \phantom{'}{G} = \Bigl\lbrace $W_basis\Bigr\rbrace\) a basis of target \($range\) $BR
$PAR
Calculate the matrix \(\mathrm{M}_{{B}}^{{C}}(T)\) representing \(T\) 
relative to input basis \({B}\) and output basis \({C}\) for the bases below:
$PAR

$PAR

\(\quad \mathrm{M}_{{E}}^{{E'}}(T) = \)\{ $M1->ans_array(2); \}


$PAR

\(\quad \mathrm{M}_{{F}}^{{E'}}(T) = \)\{ $M2->ans_array(2); \}


$PAR

\(\quad \phantom{'}\mathrm{M}_{{E}}^{{G}}(T) = \)\{ $M3->ans_array(2); \}


$PAR

\(\quad \phantom{'}\mathrm{M}_{{F}}^{{G}}(T) = \)\{ $M4->ans_array(2); \}




END_TEXT
Context()->normalStrings;

#####################################
#  Answer evaluation


ANS( $M1->cmp() );
ANS( $M2->cmp() );
ANS( $M3->cmp() );
ANS( $M4->cmp() );



COMMENT('');

ENDDOCUMENT(); 

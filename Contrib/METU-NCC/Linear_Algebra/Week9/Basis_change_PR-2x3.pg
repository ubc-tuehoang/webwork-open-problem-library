## DESCRIPTION
##  Matrix for transformation wrt different bases.
##   Code is basically dimension independent
## ENDDESCRIPTION


## DBsubject(Linear algebra)
## DBchapter(Abstract vector spaces)
## DBsection(Coordinate vectors and change of basis)
## Date(31/03/2020)
## Institution(METU-NCC)
## Author(Benjamin Walter & Satoshi Kondo)
## Level(4)
## Static(0)
## MO(1)




##################################
#  Initialization

DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGmatrixmacros.pl",
"PGchoicemacros.pl",  # needed for shuffle
"MathObjects.pl",
"rand_Array.pl"       # local library file
);


TEXT(beginproblem());

COMMENT('Random 2x3 matrix.  Random source/target bases.  Source is polynomials.');


Context("Matrix");
Context()->lists->set(Vector=>{open=>"(",close=>")"});
Context()->{cmpDefaults}{Vector} = {promotePoints=>1};

#####################
# from rand_Array.pl:
#
#   rand_Array_2nonzero (n, m, size)    -- 2 nonzero in each row
#   rand_Array_triangle (n, m, size)    -- permuation of triangular
#   rand_Array_En       (n, m, size, k) -- product of k elementary
#   rand_Array_perm     (n, m)          -- permuation
#   ident_Array         (n, m)          -- identity
#   pick                (n, <array>)    -- picks n elements from <array>
#
#####################


my ($n, $m) = (2, 3);    # dim(domain) = m    dim(range) = n
my @T; my @V; my @W; my @E_dom; my @E_ran;

# make transformation and matrix
#
my @i = pick(3,(0..2)); my @j = pick(3,(-1..1));  # change this if n > 3
# 
# T(p) =  ( p^(i) (j) )
#
my @d = ([1,1,1,1,1],[0,1,2,3,4],[0,0,2,6,12]);   # change this if n > 4
foreach my $k (0..($n-1)) {     # Make transformation matrix

  if ($j[$k] == 0) {
    $T[$k] = [(0)x($m)];  
    $T[$k][$i[$k]] = max(1,$i[$k]);  
  } else  {
    $T[$k] = [ @{$d[$i[$k]]}[0..($m-1)] ]; 
    if ($j[$k] == -1) {
      for (my $t=$i[$k]+1; $t<$m; $t=$t+2) { $T[$k][$t] = -$T[$k][$t]; }  
    }
  }
}

do {
  @V = rand_Array_2nonzero($m);     #  input basis
} until (Matrix(@V)->det != 0);
@W = rand_Array_triangle($n);       # output basis


$M1 =                       Matrix(@T);
$M2 =                       Matrix(@T) * Matrix(@V);
$M3 = Matrix(@W)->inverse * Matrix(@T);
$M4 = Matrix(@W)->inverse * Matrix(@T) * Matrix(@V);

#######################
#
# Generate T input and output
#          V and W
#
@d = ("","\,'","\,''");
Context()->variables->are(
 x=> ['Real'],
 p=> ['Real',TeX=>"p{\small (x)}"],
 p0=>['Real',TeX=>"p".$d[$i[0]]."{\small ($j[0])}"],
 p1=>['Real',TeX=>"p".$d[$i[1]]."{\small ($j[1])}"],
 p2=>['Real',TeX=>"p".$d[$i[2]]."{\small ($j[2])}"],
);

my @x = (Formula("1"),Formula("x"),Formula("x^2"),Formula("x^3"));
my @p = (Formula("p0"),Formula("p1"),Formula("p2"));

Context()->texStrings;

##########
#
# T  input and output for display
#
$in = Formula("p");


foreach (0..($n-1)) {
  $out = (defined($out)) ? $out . ",\;$p[$_]" : "$p[$_]";
}

$dom = "\mathcal{P}_{".($m-1)."}(\mathbb{R})";
$range = "\mathbb{R}^$n";

##########
#
# V  -- basis of domain
#
foreach my $j (0..($m-1)) {
  my $f = Formula(0);
  foreach my $i (0..($m-1)) {
    $f = $f + Formula("$V[$i][$j] * $x[$i]");
  }
  $f = $f->reduce;
  $V_basis = (defined($V_basis)) ? $V_basis . ",\ $f"     : "$f"; 
  $E_dom_b = (defined($E_dom_b)) ? $E_dom_b . ",\ $x[$j]" : "$x[$j]"; 
}

##########
#
# W  -- basis of range
#
$W = Matrix(@W);
$E_ran = Matrix(ident_Array($n));
foreach my $i (0..($n-1)) {
  $W_basis = (defined($W_basis)) ? $W_basis . ",\ " . Vector($W->column($i+1)) : 
                                   Vector($W->column(1)); 
  $E_ran_b = (defined($E_ran_b)) ? $E_ran_b . ",\ " . Vector($E_ran->column($i+1)) : 
                                   Vector($E_ran->column(1)); 
}
#####################################
#  Main text

BEGIN_TEXT

Let \(T:$dom\to $range\) be the transformation $BR
\(\qquad \displaystyle T($in) = \Bigl($out\Bigr)\)
$PAR
and consider the ordered bases $BR
\(\qquad \displaystyle \phantom{'}{E} = \Bigl\lbrace $E_dom_b\Bigr\rbrace\) the standard basis of \($dom\) $BR
\(\qquad \displaystyle \phantom{'}{F} = \Bigl\lbrace $V_basis\Bigr\rbrace\) a basis of source \($dom\) $BR
\(\qquad \displaystyle {E'}= \Bigl\lbrace $E_ran_b\Bigr\rbrace\) the standard basis of \($range\) $BR
\(\qquad \displaystyle \phantom{'}{G} = \Bigl\lbrace $W_basis\Bigr\rbrace\) a basis of target \($range\) $BR
$PAR
Calculate the matrix \(\mathrm{M}_{{B}}^{{C}}(T)\) representing \(T\) 
relative to input basis \({B}\) and output basis \({C}\) for the bases below:
$PAR

$PAR

\(\quad \mathrm{M}_{{E}}^{{E'}}(T) = \)\{ $M1->ans_array(2); \}


$PAR

\(\quad \mathrm{M}_{{F}}^{{E'}}(T) = \)\{ $M2->ans_array(2); \}


$PAR

\(\quad \phantom{'}\mathrm{M}_{{E}}^{{G}}(T) = \)\{ $M3->ans_array(2); \}


$PAR

\(\quad \phantom{'}\mathrm{M}_{{F}}^{{G}}(T) = \)\{ $M4->ans_array(2); \}




END_TEXT
Context()->normalStrings;

#####################################
#  Answer evaluation


ANS( $M1->cmp() );
ANS( $M2->cmp() );
ANS( $M3->cmp() );
ANS( $M4->cmp() );



COMMENT('');

ENDDOCUMENT(); 

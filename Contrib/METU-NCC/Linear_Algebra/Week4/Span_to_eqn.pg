## DESCRIPTION
##  Equation for span of 3 (non-independent) vectors in R^3
## ENDDESCRIPTION

## DBsubject(Linear algebra)
## DBchapter(Euclidean spaces)
## DBsection(Row, column, and null spaces)
## Date(07/03/2020)
## Institution(METU-NCC)
## Author(Benjamin Walter & Satoshi Kondo)
## Level(2)
## Static(0)
## MO(1)

DOCUMENT();
loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"parserImplicitPlane.pl",
"parserVectorUtils.pl",
"PGcourse.pl",
);

sub pick {
  my ($k, @in) = @_;
  my @out = ();
  while (@out < $k) { push( @out, splice(@in, random(0,$#in), 1) ); }
  @out;
}

TEXT(beginproblem());

COMMENT('3 non-independent vectors -- compute nullspace or cross prod');

Context("ImplicitPlane");
Context()->lists->set(Vector=>{open=>"(",close=>")"});
Context()->{cmpDefaults}{Vector} = {promotePoints=>1};
Context()->noreduce('(-x)-y');
Context()->variables->are(x=>"Real",y=>"Real",z=>"Real");

my $n1; my $n2;

foreach (0..2) { $P[$_]=0; } 

$P = Vector(@P);

do { foreach (0..2) {$v[$_]=non_zero_random(-2,2); } }
until (! Vector(@v)->isZero
    && ! Vector(map {abs($_)} @v)->isParallel(Vector(map {1} @v)));
$v = Vector(@v);

if (random(0,1)==0) {
 $n1=Vector($v[1],-$v[0],0);  $n2=Vector($v[2],0,-$v[0]); 
} else {
 $n1=Vector(-$v[1],$v[0],0);  $n2=Vector(0,$v[2],-$v[1]); 
}

my @A;
do { foreach (0..3) {$A[$_] = non_zero_random(-2,2);} }
until ($A[0]*$A[3] != $A[1]*$A[2]);

$w1 = $A[0]*$n1 + $A[1]*$n2;
$w2 = $A[2]*$n1 + $A[3]*$n2;

if (Vector(map {abs($_)} $w1->value)->isParallel(Vector(1,1,1))) 
{ $w1 = $w1 / ($w1.Vector(1,0,0)); }

if (Vector(map {abs($_)} $w2->value)->isParallel(Vector(1,1,1))) 
{ $w2 = $w2 / ($w2.Vector(1,0,0)); }

$u = random(-1,1,2)*random(2,3)*$w1;

Context()->texStrings;
BEGIN_TEXT
Let \(v_1=$w1\), \(v_2=$u\), \(v_3=$w2\) in \(\mathbb{R}^3\).
$PAR
Find an equation describing their span.
$PAR
\(\qquad \mathrm{Span}\bigl\lbrace v_1,v_2,v_3\bigr\rbrace
  = \Bigl\lbrace (x,y,z)\ \Big|\ \)\{ ans_rule(10) \}
\(\Bigr\rbrace\)
$PAR
$SPACE $SPACE $BITALIC
Write you answer in the form \(ax+by+cz=d\)
$EITALIC
END_TEXT
Context()->normalStrings;

$showPartialCorrectAnswers = 1;

ANS( ImplicitPlane($P,$v)->cmp() );

ENDDOCUMENT();

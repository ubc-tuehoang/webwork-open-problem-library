## DESCRIPTION
##  Parameterize a line in R^3
## ENDDESCRIPTION


## DBsubject(Calculus - multivariable)
## DBchapter(Calculus of vector valued functions)
## DBsection(Parameterized curves)
## Date(01/09/2020)
## Institution(METU-NCC)
## Author(Benjamin Walter & Satoshi Kondo)
## Level(4)
## Static(0)
## MO(1)

DOCUMENT();
loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"parserVectorUtils.pl",
"parserParametricLine.pl",
"PGcourse.pl",
);

sub pick {
  my ($k, @in) = @_;
  my @out = ();
  while (@out < $k) { push( @out, splice(@in, random(0,$#in), 1) ); }
  @out;
}

TEXT(beginproblem());


Context("Vector");
Context()->lists->set(Vector=>{open=>"(",close=>")"});
Context()->{cmpDefaults}{Vector} = {promotePoints=>1};
Context()->noreduce('(-x)-y');
Context()->variables->are(t=>"Real",x=>"Real",y=>"Real",z=>"Real");

my @v;

do { $P = Vector(random(-3,3),random(-3,3),random(-3,3)); }
until (! $P->isZero); 

do { @w1 = (random(-2,2),random(-2,2),random(-2,2)); }
until (! Vector(@w1)->isZero
        && ! Vector(map {abs($_)} @w1)->isParallel(Vector(map {1} @w1))
        && ($P . Vector(@w1) != 0) );

do { @w2 = (random(-2,2),random(-2,2),random(-2,2)); }
until (! Vector(@w2)->isZero
        && ! Vector(map {abs($_)} @w2)->isParallel(Vector(map {1} @w2))
        && ($P . Vector(@w2) != 0) 
        && ! Vector(@w1)->isParallel(Vector(@w2)));

$v = Vector(@w1) x Vector(@w2);


$eqn1 = Formula("$w1[0] x + $w1[1] y + $w1[2] z")->reduce;
$eqn1 = $eqn1->TeX . " = " . (Vector(@w1).$P);

$eqn2 = Formula("$w2[0] x + $w2[1] y + $w2[2] z")->reduce;
$eqn2 = $eqn2->TeX . " = " . (Vector(@w2).$P);

Context()->texStrings;
BEGIN_TEXT
Let \(X = \bigl\lbrace(x,y,z)\ \Big|\ \ $eqn1\text{ and }$eqn2\bigr\rbrace \subset \mathbb{R}^3\).
$PAR
Find a parametric expression for \(X\).
$PAR
\(\qquad X = \bigl\lbrace\)\{ ans_rule(15) \}
\(\Big| \ \ t\in \mathbb{R}\bigr\rbrace\)
$PAR
$SPACE $SPACE $BITALIC
Write you answer in the form \(t(a,b,c)+(d,e,f)\)
$EITALIC
END_TEXT
Context()->normalStrings;

$showPartialCorrectAnswers = 1;

ANS( ParametricLine("t * $v + $P")->cmp() );

ENDDOCUMENT();

## DESCRIPTION
##  Select vectors in vector space of functions 
## ENDDESCRIPTION


## DBsubject(Linear algebra)
## DBchapter(Abstract vector spaces)
## DBsection(Definition and properties)
## Date(01/09/2020)
## Institution(METU-NCC)
## Author(Benjamin Walter & Satoshi Kondo)
## Level(2)
## Static(0)
## MO(1)

DOCUMENT();  

loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"MathObjects.pl",
"PGcourse.pl",
);

sub pick {
  my ($k, @in) = @_;
  my @out = ();
  while (@out < $k) { push( @out, splice(@in, random(0,$#in), 1) ); }
  @out;
}

TEXT(beginproblem());

COMMENT('Each possibility is chosen from one of two options (one inside, one outside)$BR For example, either 2^x or ln(x)');

Context("Numeric");
Context()->noreduce('(-x)-y');

my @correct = ("\(\ \ 0\)$PAR");
my @incorrect = ();

my @i; my $sum;
do { $sum=0; foreach (0..3) {$i[$_] = random(0,1); $sum+=$i[$_];} }
until ($sum != 0);

if ($i[0] == 0) { push @correct, "\(\ \ \sqrt[3]{x}\)$PAR"; }
else         { push  @incorrect, "\(\ \ \sqrt{x}\)$PAR";    }

if ($i[1] == 0) { push @correct, "\(\ \ \sin(x)\)$PAR";    }
else         { push  @incorrect, "\(\ \ \tan(x)\)$PAR";    }

if ($i[2] == 0) { push @correct, "\(\ \ 2^x\)$PAR";    }
else         { push  @incorrect, "\(\ \ \ln(x)\)$PAR";    }

if ($i[3] == 0) { push @correct, "\(\ \ \arctan(x)\)$PAR"; }
else         { push  @incorrect, "\(\ \ \arcsin(x)\)$PAR";    }

my $b = random(-1,1);
my $f = Formula("x^3+$b")->reduce->TeX;
push @incorrect, "\(\ \ \frac{1}{$f}\)$PAR";

if (random(0,1)==1) { push @correct, "\(\ \ 1\)$PAR"; } 
else { 
 my @c = pick(3,(-3..-1,1..3)); 
 $f = Formula("x^2 + $c[0] x + $c[1]")->reduce->TeX;
 push @correct, "\(\ \ \bigl($f\bigr)^2\)$PAR";
}

$mc = new_checkbox_multiple_choice();
$mc -> qa (
 "The set \(\mathrm{Fun}(\mathbb{R})\) of all real-valued functions defined
  on \(\mathbb{R}\), together with the standard function addition and 
  scalar multiplication, is a vector space.$BR
  Select all the vectors that belong to \(\mathrm{Fun}(\mathbb{R})\)$PAR",
  @correct 
);
$mc -> extra(
  @incorrect 
);

Context()->texStrings;
BEGIN_TEXT

\{ $mc -> print_q() \}
\{ $mc -> print_a() \}


END_TEXT
Context()->normalStrings;

install_problem_grader(~~&std_problem_grader);

$showPartialCorrectAnswers = 0;

ANS( checkbox_cmp( $mc->correct_ans() ) );


ENDDOCUMENT();

## DESCRIPTION
##  Linear combinations in R^3
## ENDDESCRIPTION


## DBsubject(Linear algebra)
## DBchapter(Abstract vector spaces)
## DBsection(Linear combinations)
## Date(01/09/2020)
## Institution(METU-NCC)
## Author(Benjamin Walter & Satoshi Kondo)
## Level(2)
## Static(0)
## MO(1)




##################################
#  Initialization

DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGmatrixmacros.pl",
"MathObjects.pl",
"contextFraction.pl",
);


TEXT(beginproblem());

COMMENT('coefficients are random single digit numbers so that answer is integer');

#####################################
#  Setup

sub pick {
  my ($k, @in) = @_;
  my @out = ();
  while (@out < $k) { push( @out, splice(@in, random(0,$#in), 1) ); }
  @out;
}

sub maxnorm {
  my @v = map {abs $_} @_;
  $max = $v[0];
  foreach (1..($#v)) { $max=$v[$_] if ($v[$_] > $max);}
  return $max;
}


#######################

Context("Vector");
Context()->lists->set(Vector=>{open=>"(",close=>")"});

$n=3;
@c = (random(-2,2,4),random(-3,3,6),random(1,3,2),random(1,2));

$v[0] = Vector(pick($n,(-3..-1,1..3))); 
do { $v[1] = Vector(pick($n,(-3..-1,1..3))); }
until (! $v[1]->isParallel($v[0]) );

$v[2] = $c[2]*$v[0] + $c[3]*$v[1];
if (maxnorm($v[2]->value) > 9) { 
  $c[2]=1; $c[3]=1; 
  $v[2] = $c[2]*$v[0] + $c[3]*$v[1];
}
$v[0] = $c[0]*$v[0];  $v[1] = $c[1]*$v[1];

@comb = ($c[2]*$c[1],$c[3]*$c[0],-$c[0]*$c[1]);

@i = pick($n,(0..($n-1)));
@v = @v[@i];
@comb = @comb[@i];  

Context("Fraction");
foreach (0..($#comb-1)) { $ans[$_] = Fraction(-$comb[$_], $comb[$#comb]); }

#####################################
#  Main text

Context()->texStrings;
BEGIN_TEXT

Let \(v_1 = $v[0],\ v_2 = $v[1],\ v_3 = $v[2]\).
$PAR
Write \(v_3\) as a linear combination of \(v_1\) and \(v_2\).
$PAR
\(\qquad v_3 = \)\{ans_rule(2);\}\(v_1\ +\ \)\{ans_rule(2);\}\(v_2\)

$PAR $BR $PAR
$BITALIC Answers will not be marked correct unless all coefficients are correct.
$EITALIC

END_TEXT
Context()->normalStrings;

#####################################
#  Answer evaluation

$showPartialCorrectAnswers = 0;

foreach (0..$#ans) { ANS( $ans[$_]->cmp() ); }


ENDDOCUMENT(); 

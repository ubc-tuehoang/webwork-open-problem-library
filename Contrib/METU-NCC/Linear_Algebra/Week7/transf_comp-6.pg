## DESCRIPTION
##  Compute inverse of linear transformation R^3-->Fun{1,2,3} 
## ENDDESCRIPTION


## DBsubject(Linear algebra)
## DBchapter(Linear transformations)
## DBsection(Inverses)
## Date(22/03/2020)
## Institution(METU-NCC)
## Author(Benjamin Walter & Satoshi Kondo)
## Level(3)
## Static(0)
## MO(1)




##################################
#  Initialization

DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGmatrixmacros.pl",
"MathObjects.pl",
"PGchoicemacros.pl",
);


TEXT(beginproblem());

#####################################
#  Setup

Context("Matrix");
Context()->lists->set(Vector=>{open=>"(",close=>")"});
Context()->{cmpDefaults}{Vector} = {promotePoints=>1};
Context()->variables->are(
 x => ['Real', TeX=>"x"],
 y => ['Real', TeX=>"y"],
 z => ['Real', TeX=>"z"],
 a => ['Real', TeX=>"a"],
 b => ['Real', TeX=>"b"],
 c => ['Real', TeX=>"c"]
);
Context()->noreduce('(-x)-y');



my @L = (
  [         1           ,      0              ,       0             ],
  [non_zero_random(-2,2),      1              ,       0             ],
  [non_zero_random(-2,2),non_zero_random(-2,2),       1             ]
);

my @L_inv = (
  [             1               ,    0      ,  0  ],
  [        -$L[1][0]            ,    1      ,  0  ],
  [$L[2][1]*$L[1][0] - $L[2][0] , -$L[2][1] ,  1  ]
); 

my @p = (random(-1,1,2),random(-1,1,2),random(-1,1,2));

my @U = (
  [      $p[0]          ,non_zero_random(-2,2),non_zero_random(-2,2)],
  [        0            ,      $p[1]          ,non_zero_random(-2,2)],
  [        0            ,        0            ,       $p[2]         ]
);

my @s = (-$p[0]*$p[1], -$p[1]*$p[2], -$p[0]*$p[2]);

my @U_inv = (
  [ $p[0],$s[0]*$U[0][1],($U[0][2]-$p[1]*$U[0][1]*$U[1][2])*$s[2] ],
  [   0  , $p[1]        ,      $s[1]*$U[1][2]                     ],
  [   0  ,   0          ,             $p[2]                       ]
);

my $M_mat = Matrix(@L)*Matrix(@U);
my $I_mat = Matrix(@U_inv)*Matrix(@L_inv);

my @M = (
  [$M_mat->element(1,1),$M_mat->element(1,2),$M_mat->element(1,3)],
  [$M_mat->element(2,1),$M_mat->element(2,2),$M_mat->element(2,3)],
  [$M_mat->element(3,1),$M_mat->element(3,2),$M_mat->element(3,3)]
);

my @I = (
  [$I_mat->element(1,1),$I_mat->element(1,2),$I_mat->element(1,3)],
  [$I_mat->element(2,1),$I_mat->element(2,2),$I_mat->element(2,3)],
  [$I_mat->element(3,1),$I_mat->element(3,2),$I_mat->element(3,3)]
);



# Make pretty functions for the problem text
#
$S1 = (Formula("$M[0][0]*x + $M[0][1]*y + $M[0][2]*z")->reduce)->reduce;
$S2 = (Formula("$M[1][0]*x + $M[1][1]*y + $M[1][2]*z")->reduce)->reduce;
$S3 = (Formula("$M[2][0]*x + $M[2][1]*y + $M[2][2]*z")->reduce)->reduce;

$T1 = (Formula("$I[0][0]*a + $I[0][1]*b + $I[0][2]*c")->reduce)->reduce;
$T2 = (Formula("$I[1][0]*a + $I[1][1]*b + $I[1][2]*c")->reduce)->reduce;
$T3 = (Formula("$I[2][0]*a + $I[2][1]*b + $I[2][2]*c")->reduce)->reduce;

Context()->variables->are(
 a => ['Real', TeX=>"a"],
 b => ['Real', TeX=>"b"],
 c => ['Real', TeX=>"c"]
);
$output = Vector($T1,$T2,$T3);


#####################################
#  Main text

Context()->texStrings;
BEGIN_TEXT

Let \(S = \lbrace 1,2,3 \rbrace\) and let 
\({T}:\mathbb{R}^3 \to \mathrm{Fun}(S)\) be 
the linear transformation
$BR 
\(\displaystyle \quad
  {T}(x,y,z) = \bigl($S1\bigr)\,\chi_1 + 
               \bigl($S2\bigr)\,\chi_2 +
               \bigl($S3\bigr)\,\chi_3 
\)
$PAR
Compute the inverse transformation \(T^{-1}\)
$BR
\(\displaystyle \quad
 {T}^{-1}(a\,\chi_1 + b\,\chi_2 + c\,\chi_3) = \) \{ $output->ans_rule(40) \}


END_TEXT
Context()->normalStrings;

#####################################
#  Answer evaluation

$showPartialCorrectAnswers = 0;

ANS( $output->cmp() );



COMMENT('Uses PLU decomposition to generate matrix with det +-1 and inverse.');

ENDDOCUMENT(); 

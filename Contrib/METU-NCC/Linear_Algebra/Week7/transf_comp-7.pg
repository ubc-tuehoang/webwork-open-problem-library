## DESCRIPTION
##  Evaluate inverse of linear transformation R^2-->R^2
## ENDDESCRIPTION


## DBsubject(Linear algebra)
## DBchapter(Linear transformations)
## DBsection(Inverses)
## Date(22/03/2020)
## Institution(METU-NCC)
## Author(Benjamin Walter & Satoshi Kondo)
## Level(4)
## Static(0)
## MO(1)




##################################
#  Initialization

DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGmatrixmacros.pl",
"MathObjects.pl",
"PGchoicemacros.pl",
);


TEXT(beginproblem());

#####################################
#  Setup

Context("Matrix");
Context()->lists->set(Vector=>{open=>"(",close=>")"});
Context()->{cmpDefaults}{Vector} = {promotePoints=>1};
Context()->variables->are(
 x => ['Real', TeX=>"x"],
 y => ['Real', TeX=>"y"],
 a => ['Real', TeX=>"a"],
 b => ['Real', TeX=>"b"]
);
Context()->noreduce('(-x)-y');



my @L = (
  [         1           ,      0    ],
  [non_zero_random(-2,2),      1    ]
);
my @L_inv = (
  [        1            ,    0   ],
  [   -$L[1][0]         ,    1   ]
); 


my @p = (random(-1,1,2),random(-1,1,2));

my @U = (
  [      $p[0]          ,non_zero_random(-2,2)],
  [        0            ,      $p[1]          ]
);
my @U_inv = (
  [ $p[0]  , -$p[0]*$p[1]*$U[0][1]],
  [   0    ,        $p[1]         ]
);

my $M_mat = Matrix(@L)*Matrix(@U);
my $I_mat = Matrix(@U_inv)*Matrix(@L_inv);

my @M = (
  [$M_mat->element(1,1),$M_mat->element(1,2)],
  [$M_mat->element(2,1),$M_mat->element(2,2)]
);



# Make pretty functions for the problem text
#
$S1 = Formula("$M[0][0]*x + $M[0][1]*y")->reduce;
$S2 = Formula("$M[1][0]*x + $M[1][1]*y")->reduce;

$input  = Vector(non_zero_random(-3,3),non_zero_random(-3,3));

Context()->variables->are();

$output = Vector($I_mat*$input);


#####################################
#  Main text

Context()->texStrings;
BEGIN_TEXT

Let 
\({T}:\mathbb{R}^2 \to \mathbb{R}^2\) be 
the linear transformation
$BR 
\(\displaystyle \quad
  {T}(x,y) = \bigl($S1,$S2\bigr)
\)
$PAR
Compute the value of the inverse 
$BR
\(\displaystyle \quad
 {T}^{-1}$input = \) \{ $output->ans_rule(10) \}


END_TEXT
Context()->normalStrings;

#####################################
#  Answer evaluation

$showPartialCorrectAnswers = 0;

ANS( $output->cmp() );



COMMENT('Uses PLU decomposition to generate matrix with det +-1 and inverse.');

ENDDOCUMENT(); 

## DESCRIPTION
##  Select linear transformations that are isomorphisms
## ENDDESCRIPTION


## DBsubject(Linear algebra)
## DBchapter(Linear transformations)
## DBsection(One-to-one and onto)
## Date(22/03/2020)
## Institution(METU-NCC)
## Author(Benjamin Walter & Satoshi Kondo)
## Level(4)
## Static(0)
## MO(1)




##################################
#  Initialization

DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGmatrixmacros.pl",
"PGchoicemacros.pl",
"MatrixUnits.pl",
"MathObjects.pl",
);


TEXT(beginproblem());

#####################################
#  Setup

Context("Numeric");
Context()->variables->are(
   x=>'Real',y=>'Real',z=>'Real',t=>'Real',
   f1=>['Real',TeX=>"f{\small (1)}"], 
   f2=>['Real',TeX=>"f{\small (2)}"],
   f3=>['Real',TeX=>"f{\small (3)}"]
);
Context()->noreduce('(-x)-y');

########
# Identity transform
#
my $n = random(3,4);
@t  = ("\({T}:\mathbb{R}^$n \to \mathbb{R}^$n\) defined by $BR" .
        "\(\qquad{T}(x,y,z" . (($n==3) ? "" : ",t") . 
	") = (x,y,z" . (($n==3) ? "" : ",t") . ")\)$PAR");



########
# Zero transform
#
$n = random(3,4);
@f  = ("\({T}:\mathbb{R}^$n \to \mathbb{R}^$n\) defined by $BR" .
        "\(\qquad{T}(x,y,z" . (($n==3) ? "" : ",t") . 
	") = (0,0,0" . (($n==3) ? "" : ",0") . ")\)$PAR");



########
# Random 3x3 transform 
#
my $tf = random(0,1);
my @mat =  GL3Z_perl();
if ($tf==0) {
  my $p = non_zero_random(-1,1); 
  my $q = -$p*random(1,2);
  my @i = shuffle(3);
  for (my $j=0; $j<3; $j++) {  
    $mat[$i[0]][$j] = $p*$mat[$i[1]][$j] + $q*$mat[$i[2]][$j];
  }   
} 
my @T = (
  Formula("$mat[0][0]*x + $mat[0][1]*y + $mat[0][2]*z")->reduce,
  Formula("$mat[1][0]*x + $mat[1][1]*y + $mat[1][2]*z")->reduce,
  Formula("$mat[2][0]*x + $mat[2][1]*y + $mat[2][2]*z")->reduce
);
Context()->texStrings;
if ($tf==0) {
  push(@f, "\({T}:\mathbb{R}^3\to \mathbb{R}^3\) defined by $BR" .
            "\(\qquad {T}(x,y,z) = \bigl($T[0],\;$T[1],\;$T[2]\bigr)\)$PAR");
} else {
  push(@t, "\({T}:\mathbb{R}^3\to \mathbb{R}^3\) defined by $BR" .
            "\(\qquad {T}(x,y,z) = \bigl($T[0],\;$T[1],\;$T[2]\bigr)\)$PAR");
}
Context()->normalStrings;



########
# Fun to R^3 transform    (idential to previous)
#
my $tf = random(0,1);
my @mat =  GL3Z_perl();
if ($tf==0) {
  my $p = non_zero_random(-1,1); 
  my $q = -$p*random(1,2);
  my @i = shuffle(3);
  for (my $j=0; $j<3; $j++) {  
    $mat[$i[0]][$j] = $p*$mat[$i[1]][$j] + $q*$mat[$i[2]][$j];
  }   
} 
my @T = (
  Formula("$mat[0][0]*f1 + $mat[0][1]*f2 + $mat[0][2]*f3")->reduce,
  Formula("$mat[1][0]*f1 + $mat[1][1]*f2 + $mat[1][2]*f3")->reduce,
  Formula("$mat[2][0]*f1 + $mat[2][1]*f2 + $mat[2][2]*f3")->reduce
);
Context()->texStrings;
if ($tf==0) {
  push(@f, "\({T}:\mathrm{Fun}(\lbrace 1,2,3\rbrace)\to \mathbb{R}^3\) defined by $BR" .
            "\(\qquad{T}\bigl(f{\small (x)}\bigr) = \bigl($T[0],\;$T[1],\;$T[2]\bigr)\)$PAR");
} else {
  push(@t, "\({T}:\mathrm{Fun}(\lbrace 1,2,3\rbrace)\to \mathbb{R}^3\) defined by $BR" .
            "\(\qquad{T}\bigl(f{\small (x)}\bigr) = \bigl($T[0],\;$T[1],\;$T[2]\bigr)\)$PAR");
}
Context()->normalStrings;




########
# Polynom to R^3 transform
#
$n = random(2,3);  
my $j,$k; 
do {
  $j = non_zero_random(-2,2);
  $k = random(-2,2);
} until ($j != 2*$k);
Context()->texStrings;
if ($n==2) {
  push(@t, "\({T}:\mathcal{P}_$n(\mathbb{R})\to \mathbb{R}^3\) defined by $BR" .
            "\(\qquad{T}\bigl(p{\small (x)}\bigr) = \bigl(p{\small (0)},\;p{\small ($j)},\;p'{\small ($k)}\bigr)\)$PAR");
} else {
  push(@f, "\({T}:\mathcal{P}_$n(\mathbb{R})\to \mathbb{R}^3\) defined by $BR" .
            "\(\qquad{T}\bigl(p{\small (x)}\bigr) = \bigl(p{\small (0)},\;p{\small ($j)},\;p'{\small ($k)}\bigr)\)$PAR");
}
Context()->normalStrings;




$choice = new_checkbox_multiple_choice();
$choice->qa("Select all.",@t);
$choice->extra(@f);

#####################################
#  Main text

Context()->texStrings;
BEGIN_TEXT

Select all linear transformations that are isomorphisms.
$BR
\{ $choice->print_a() \}

END_TEXT
Context()->normalStrings;

#####################################
#  Answer evaluation

$showPartialCorrectAnswers = 0;

ANS( checkbox_cmp( $choice->correct_ans() ) );

COMMENT('Identity is always correct. Zero is always incorrect. P_k-->R^3 correct if P_2. R^3-->R^3 and Fun-->R^3 are randomly correct.');

ENDDOCUMENT(); 

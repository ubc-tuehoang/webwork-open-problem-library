## DESCRIPTION
##  Select functions which would extend to basis in  R^3 
## ENDDESCRIPTION

## DBsubject(Linear algebra)
## DBchapter(Abstract vector spaces)
## DBsection(Basis and dimension)
## Date(14/03/2020)
## Institution(METU-NCC)
## Author(Benjamin Walter & Satoshi Kondo)
## Level(2)
## MO(1)
## Static(0)




##################################
#  Initialization

DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGmatrixmacros.pl",
"PGchoicemacros.pl",
"MathObjects.pl",
);


sub pick {
  my ($k, @in) = @_;
  my @out = ();
  while (@out < $k) { push( @out, splice(@in, random(0,$#in), 1) ); }
  @out;
}


TEXT(beginproblem());

COMMENT('two work, three do not');

#####################################
#  Setup

Context("Vector");
Context()->lists->set(Vector=>{open=>"(",close=>")"});

my @v; my @w; my @u; my $u;  my @i;

my @i = pick(2,(0..2));

foreach (0..2) { $v[$_] = non_zero_random(-3,3); } 
$v[$i[0]] = 0;
$v = Vector(@v); 

foreach (0..2) { $w[$_] = non_zero_random(-3,3); } 
$w[$i[1]] = 0;
$w = Vector(@w); 

my $n = $v x $w;    # perpendicular direction 

my @basis = ();     # vectors which make basis 
my @not = ();       # vectors which are in span

##

do { foreach (0..2) { $u[$_] = random(-3,3); } }
until ( !(Vector(@u)->isZero()) 
     && (Vector(@u) . $n != 0) ); 
$u = Vector(@u);
push(@basis,$u);

do { foreach (0..2) { $u[$_] = random(-3,3); } }
until ( !(Vector(@u)->isZero()) 
     && (Vector(@u) . $n != 0) 
     && !(Vector(@u)->isParallel($u))); 
$u = Vector(@u);
push(@basis,$u);

##

if (random(0,1)==1) { push(@not, $v); }
else                { push(@not, $w); }

push(@not, random(-1,1,2)*$v+random(-1,1,2)*$w); 

push(@not, Vector(0,0,0));

##

@basis = map {"\(\displaystyle v_3=" . ($_)->TeX . " \)"} @basis;
@not   = map {"\(\displaystyle v_3=" . ($_)->TeX . " \)"} @not;

$choice = new_checkbox_multiple_choice();
$choice->qa("Select all vectors \(v_3\) such that \(\lbrace v_1,v_2,v_3\rbrace\)
            is a basis of \(\mathbb{R}^3\).",
            @basis);                # correct answers
$choice->extra(@not);               # incorrect answers

#####################################
#  Main text

Context()->texStrings;
BEGIN_TEXT

Let \(v_1 = $v\) and \(v_2 = $w\).
$PAR
\{ $choice->print_q() \}
$BR
\{ $choice->print_a() \}

END_TEXT
Context()->normalStrings;

#####################################
#  Answer evaluation

$showPartialCorrectAnswers = 0;

ANS( checkbox_cmp( $choice->correct_ans() ) );


ENDDOCUMENT(); 

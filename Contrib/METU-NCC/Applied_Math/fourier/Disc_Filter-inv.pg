# DESCRIPTION
# Fourier Series
# ENDDESCRIPTION

## KEYWORDS('integral', 'fourier', 'series')

## DBsubject(Calculus - single variable)
## DBchapter(Infinite sequences and series)
## DBsection('Fourier series')
## Author('Benjamin Walter')
## Institution('METU-NCC')



#################################
#  Initialization

DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGbasicmacros.pl",
"MathObjects.pl",
"unionTables.pl",
"PGunion.pl",
"contextFraction.pl",
"PGcourse.pl"
);

TEXT(beginproblem());


################################
#  Setup

Context("Numeric");
Context()->variables->add(
 'f0'=>['Real',TeX=>"f_0"],
 'f1'=>['Real',TeX=>"f_1"],
 'f2'=>['Real',TeX=>"f_2"],
 'f3'=>['Real',TeX=>"f_3"]
);

# filter multiplies coeff f_k by a_k
#
# a_k = -1,0,1   not all identical

my $a0, $a1, $a2;

do { 
 $a0 = random(-1,1);
 $a1 = random(-1,1);
 $a2 = random(-1,1);
 $a3 = random(-1,1);
} while ( ($a0==$a1) && ($a1==$a2) && ($a2==$a3) ); 
         

$f0 = Formula("$a0*f0")->reduce;
$f1 = Formula("$a1*f1")->reduce;
$f2 = Formula("$a2*f2")->reduce;
$f3 = Formula("$a3*f3")->reduce;

# answer is fourier transform of 
#  ($a0, $a1, $a2, $a3)

Context("Complex");

$d0 = Complex($a0+$a1+$a2+$a3,0)/4;  
$d1 = Complex($a0-$a2,$a3-$a1)/4;  
$d2 = Complex($a0-$a1+$a2-$a3,0)/4;  
$d3 = Complex($a0-$a2,$a1-$a3)/4;  

Context("Numeric");

Context()->functions->disable('Trig');
Context()->flags->set(tolerance=>0.00000000001);

Context()->texStrings;

BEGIN_TEXT
Find a complex vector \(\vec{\mathbf{d}}\) so that if 
\(\mathcal{F}\Bigl\lbrace(f_0,\ f_1,\ f_2\ f_3)\Bigr\rbrace 
  = \vec{\mathbf{c}}\) then 
\(\mathcal{F}\Bigl\lbrace($f0,\ $f1,\ $f2,\ $f3)\Bigr\rbrace
  =  \vec{\mathbf{c}}\circledast\vec{\mathbf{d}}\).
$PAR

\(\vec{\mathbf{d}} = \Bigl( \)
 \{ans_rule(10)\}\(,\ \)
 \{ans_rule(10)\}\(,\ \)
 \{ans_rule(10)\}\(,\ \)
 \{ans_rule(10)\}\( \Bigr) \)


END_TEXT

Context()->normalStrings;

$showPartialCorrectAnswers = 1;

ANS( $d0->cmp() );
ANS( $d1->cmp() );
ANS( $d2->cmp() );
ANS( $d3->cmp() );


COMMENT('MathObject version');
ENDDOCUMENT();

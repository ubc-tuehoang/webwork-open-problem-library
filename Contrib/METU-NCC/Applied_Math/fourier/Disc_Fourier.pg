# DESCRIPTION
# Fourier Series
# ENDDESCRIPTION

## KEYWORDS('integral', 'fourier', 'series')

## DBsubject(Calculus - single variable)
## DBchapter(Infinite sequences and series)
## DBsection('Fourier series')
## Author('Benjamin Walter')
## Institution('METU-NCC')



#################################
#  Initialization

DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGbasicmacros.pl",
"MathObjects.pl",
"unionTables.pl",
"PGunion.pl",
"contextLimitedComplex.pl",
"PGcourse.pl"
);

TEXT(beginproblem());


################################
#  Setup

Context("Numeric");

$f0 = non_zero_random(-5,5,1);  $f1 = random(-5,5,1);
$f2 = random(-5,5,1);           $f3 = non_zero_random(-5,5,1);

$g0 = non_zero_random(-5,5,1);  $g1 = random(-5,5,1);
$g2 = non_zero_random(-5,5,1);

Context("LimitedComplex");
Context()->functions->disable('Trig');

$c0 = Complex(($f0+$f1+$f2+$f3)/4,0);
$c1 = Complex(($f0-$f2)/4,($f3-$f1)/4);
$c2 = Complex(($f0-$f1+$f2-$f3)/4,0);
$c3 = Complex(($f0-$f2)/4,-($f3-$f1)/4);

$d0 = Complex(($g0+$g1+$g2)/3,0);
$d1 = Complex(($g0-($g1+$g2)/2)/3, (($g2-$g1)*sqrt(3)/2)/3);
$d2 = Complex(($g0-($g1+$g2)/2)/3,-(($g2-$g1)*sqrt(3)/2)/3);

#Context("Numeric");
#Context()->variables->are('i'=>"Real");
#Context()->functions->disable('Trig');
#
#$c0 = Formula($c0->string);  $d0 = Formula($d0->string);
#$c1 = Formula($c1->string);  $d1 = Formula($d1->string);
#$c2 = Formula($c2->string);  $d2 = Formula($d2->string);
#$c3 = Formula($c3->string);


Context()->texStrings;

BEGIN_TEXT
In your answers below you may use ${BTT}sqrt()${ETT},
but no trig functions, complex multiplication, or powers.

$PAR


${BBOLD}(A)${EBOLD}  
Compute the discrete Fourier transform of 
\(\vec{\mathbf{f}} = ($f0, $f1, $f2, $f3)\).$PAR

\(\mathcal{F}\Bigl\lbrace \vec{\mathbf{f}} \Bigr\rbrace = \Bigl( \)
 \{ans_rule(10)\}\(,\ \)
 \{ans_rule(10)\}\(,\ \)
 \{ans_rule(10)\}\(,\ \)
 \{ans_rule(10)\}\( \Bigr) \)

$PAR
$HR
$PAR

${BBOLD}(B)${EBOLD}
Compute the discrete Fourier transform of 
\(\vec{\mathbf{g}} = ($g0, $g1, $g2)\).$PAR

\(\mathcal{F}\Bigl\lbrace \vec{\mathbf{g}} \Bigr\rbrace = \Bigl( \)
 \{ans_rule(15)\}\(,\ \)
 \{ans_rule(15)\}\(,\ \)
 \{ans_rule(15)\}\( \Bigr) \)



END_TEXT

Context()->normalStrings;

$showPartialCorrectAnswers = 1;

#
#sub chk {
#  my ($correct,$student,$ansHash) = @_;
#  if (Formula($student->value)->D('i','i') != Formula("0")) {
#    Value->Error("Complex multiplication not allowed in answer!");
#  }
#  return (Formula($student->value) == Formula($correct->value));
#}
#
#ANS($c0->cmp(checker=>~~&chk)); ANS($c1->cmp(checker=>~~&chk)); 
#ANS($c2->cmp(checker=>~~&chk)); ANS($c3->cmp(checker=>~~&chk));
#
#ANS($d0->cmp(checker=>~~&chk)); ANS($d1->cmp(checker=>~~&chk)); 
#ANS($d2->cmp(checker=>~~&chk));
#

ANS($c0->cmp()); ANS($c1->cmp()); 
ANS($c2->cmp()); ANS($c3->cmp());

ANS($d0->cmp()); ANS($d1->cmp()); 
ANS($d2->cmp());



COMMENT('MathObject version');
ENDDOCUMENT();

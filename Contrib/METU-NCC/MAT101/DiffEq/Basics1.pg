## BEGIN_DESCRIPTION
##  plug functions into differential equations and verify initial values
## END_DESCRIPTION
##
##############################################
## DBsubject(Differential equations)
## DBchapter(Introductory concepts)
## DBsection(Verification of solutions)
## Institution(METU-NCC)
## Author(Benjamin Walter)
## MO(1)
## Static(0)
## Level(2)
## Language(en)
###############################################



DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGcourse.pl",
"MathObjects.pl",
);

TEXT(beginproblem());

sub pick {
  my ($k, @in) = @_;
  my @out = ();
  while (@out < $k) { push( @out, splice(@in, random(0,$#in), 1) ); }
  @out;
}


Context("Numeric");
Context()->variables->are(
  x=>'Real',
 x1=>['Real',TeX=>"x\,"],x2=>['Real',TeX=>"x^2\,"],
  y=>'Real',
 yp=>['Real',TeX=>"y'"],
ypp=>['Real',TeX=>"y''"],
);

my $n; my $a; my $b; my $c; my $d; my @n;

##########  y' + a x^n y = b x^n

$n = random(1,3);
$a = ($n+1)*non_zero_random(-2,2);
$b = $a*non_zero_random(-2,2);
$c = non_zero_random(-3,3);
do {$d = non_zero_random(-3,3);} until ($d != $b/$a); 

$ip[0][0] = Formula("yp + $a x^$n y")->reduce;
$ip[0][1] = Formula("$b x^$n")->reduce;

$y[0][0] = Formula("$b/$a + $c e^(-($a/($n+1)) x^($n+1))")->reduce;  # solution
$y[0][1] = Formula("$d    + $c e^(-($a/($n+1)) x^($n+1))")->reduce;  # not solution

$iv[0][0] = 0;  $iv[0][1] = $d+$c; 

$lhs[0][0] = $ip[0][1];
$lhs[0][1] = Formula("$d*$a x^($n)");

$val[0][0] = Real("$b/$a + $c");
$val[0][1] = Real("$d    + $c");

########### x^2 y'' + a x y' + c y = 0

@n = pick(3,(-3,-2,-1,1,2,3));
$a = -($n[0]+$n[1]-1);
$b = $n[0]*$n[1]; 
$c = non_zero_random(-3,3);
do {$d = non_zero_random(-3,3);} until ($d!=$c);

$ip[1][0] = Formula("x2 ypp + $a x1 yp + $b y")->reduce;
$ip[1][1] = Formula("0");

$y[1][0] = Formula("$c x^($n[0])")->reduce;    # solution
$y[1][1] = Formula("$d x^($n[2])")->reduce;    # not solution

$iv[1][0] = 1;  $iv[1][1] = $d;

$lhs[1][0] = Formula("$c*(($n[0])**2+($a-1)*($n[0])+$b) x^($n[0])");
$lhs[1][1] = Formula("$d*(($n[2])**2+($a-1)*($n[2])+$b) x^($n[2])");

$val[1][0] = Real("$c"); 
$val[1][1] = Real("$d");

###########


@p = pick(2,(0,1));
@q = pick(2,(0,1));

Context()->texStrings;

BEGIN_TEXT

In the problems below, you will check solutions to initial value problems.

$PAR$BR$PAR

$BBOLD A. $EBOLD
Consider the initial value problem:
\(\displaystyle \ \ $ip[0][0] = $ip[0][1],
\quad y($iv[0][0]) = $iv[0][1]\)
$PAR
$SPACE $SPACE $BBOLD (i) $EBOLD
And the function: \(\displaystyle\ \  y = $y[0][$p[0]]\). 
$BR
$SPACE $SPACE $SPACE Plugging \(y\) into the left side of the equation yields:
\{ ans_rule(10) \}
$BR
$SPACE $SPACE $SPACE Plugging the initial value into \(y\) yeilds: \(\quad\; y($iv[0][0])=\)
\{ ans_rule(2) \}

$PAR
$SPACE $SPACE $BBOLD (ii) $EBOLD
And the function: \(\displaystyle\ \  y = $y[0][$p[1]]\). 
$BR
$SPACE $SPACE $SPACE Plugging \(y\) into the left side of the equation yields:
\{ ans_rule(10) \}
$BR
$SPACE $SPACE $SPACE Plugging the initial value into \(y\) yeilds: \(\quad\; y($iv[0][0])=\)
\{ ans_rule(2) \}


$PAR$BR$PAR

$BBOLD B. $EBOLD
Consider the initial value problem:
\(\displaystyle \ \ $ip[1][0] = $ip[1][1],
\quad y($iv[1][0]) = $iv[1][1]\)
$PAR
$SPACE $SPACE $BBOLD (i) $EBOLD
And the function: \(\displaystyle\ \  y = $y[1][$q[0]]\). 
$BR
$SPACE $SPACE $SPACE Plugging \(y\) into the left side of the equation yields:
\{ ans_rule(10) \}
$BR
$SPACE $SPACE $SPACE Plugging the initial value into \(y\) yeilds: \(\quad\; y($iv[1][0])=\)
\{ ans_rule(2) \}

$PAR
$SPACE $SPACE $BBOLD (ii) $EBOLD
And the function: \(\displaystyle\ \  y = $y[1][$q[1]]\). 
$BR
$SPACE $SPACE $SPACE Plugging \(y\) into the left side of the equation yields:
\{ ans_rule(10) \}
$BR
$SPACE $SPACE $SPACE Plugging the initial value into \(y\) yeilds: \(\quad\; y($iv[1][0])=\)
\{ ans_rule(2) \}



END_TEXT
Context()->normalStrings;

ANS($lhs[0][$p[0]]->cmp());
ANS($val[0][$p[0]]->cmp());
ANS($lhs[0][$p[1]]->cmp());
ANS($val[0][$p[1]]->cmp());


ANS($lhs[1][$q[0]]->cmp());
ANS($val[1][$q[0]]->cmp());
ANS($lhs[1][$q[1]]->cmp());
ANS($val[1][$q[1]]->cmp());




ENDDOCUMENT();        # This should be the last executable line in the problem.
       

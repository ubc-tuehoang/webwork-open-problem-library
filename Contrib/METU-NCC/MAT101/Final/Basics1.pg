## BEGIN_DESCRIPTION
##  Compute 3 basic derivatives by simplifying and differentiating
## END_DESCRIPTION
##
##############################################
## DBsubject(Calculus - single variable)
## DBchapter(Differentiation)
## DBsection(Derivatives involving multiple rules (no product, quotient, or chain rule))
## Institution(METU-NCC)
## Author(Benjamin Walter)
## Level(2)
## Language(en)
## MO(1)
## Static(0)
###############################################



DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGcourse.pl",
"MathObjects.pl",
"contextFraction.pl"
);

TEXT(beginproblem());

COMMENT('simplify and differentiate$BR online quiz page');

sub pick {
  my ($k, @in) = @_;
  my @out = ();
  while (@out < $k) { push( @out, splice(@in, random(0,$#in), 1) ); }
  @out;
}


Context("Fraction");
Context()->variables->are(
 x=>'Real',
);

my $a; my $b; my $c; my $p; my $q;

($a,$b,$c) = pick(3,2..9);   ($p,$q) = pick(2,(2..7));
$F[0] = Formula("$a / (x^($p)) + $b x^($q) + $c")->reduce;
$f[0] = Formula("-$a*$p / (x^($p+1)) + $b*$q x^($q-1)")->reduce;
$f[0]->{limits} = [1,4];

($a,$b,$c) = pick(3,2..9);    $p = 2*random(1,3)+1;
$F[1] = Formula("sqrt(x^($p)) + e^($a x) + ln ($b x)")->reduce;
$f[1] = Formula("$p/2 sqrt(x^($p-2)) + $a e^($a x) + 1/x")->reduce;
$f[1]->{limits} = [1,4];

$a = random(2,9);  $n = random(1,3); 
do {($p,$q) = pick(2,(2..7));} until ((gcd($p,$q)==1) && ($q != 2));  
if (random(0,1)==1) {
 $f[2] = Formula("$a*($n-$p/$q) x^($n-1-$p/$q)")->reduce;
 $n = "{}" if ($n==1);
 $F[2] = "\frac{$a x^$n}{\sqrt[$q]{x^{$p}}}";
} else { 
 $f[2] = Formula("($p/$q-$n)/$a x^($p/$q-$n-1)")->reduce;
 $n = "{}" if ($n==1);
 $F[2] = "\frac{\sqrt[$q]{x^{$p}}}{$a x^$n}";
}
$f[2]->{limits} = [1,4];


$n=3;

@items = ("(A)","(B)","(C)","(D)","(E)","(F)","(G)","(H)","(I)","(J)","(K)");

Context()->texStrings;

BEGIN_TEXT

In the parts below you must include all basic steps.  
Do not simplify or reduce your answers.
$PAR
END_TEXT
$counter = 0;
do {
BEGIN_TEXT
$BBOLD $items[$counter] $EBOLD
 \(\displaystyle \frac{d}{dx} \left[ $F[$counter] \right] = \) \{ $f[$counter]->ans_rule(20); \}
$PAR
END_TEXT
$counter++;
} while ($counter < $n);

Context()->normalStrings;

foreach my $i (0..($n-1)) {
 ANS( $f[$i]->cmp() );
}


ENDDOCUMENT();        # This should be the last executable line in the problem.
       

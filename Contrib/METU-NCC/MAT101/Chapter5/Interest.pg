## DBsubject(Financial mathematics)
## DBchapter(Interest)
## DBsection(Compound interest)
## Level(2)
## Author(Benjamin Walter)
## Institution(METU-NCC)
## Language(en)
## MO(1)
## Static(0)

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "PGcourse.pl",
  "MathObjects.pl",
  "contextFraction.pl"
);

sub pick {
  my ($k, @in) = @_;
  my @out = ();
  while (@out < $k) { push( @out, splice(@in, random(0,$#in), 1) ); }
  @out; 
};

TEXT(beginproblem());
Context("Fraction");
Context()->variables->are(x=>"Real");
Context()->flags->set(reduceConstants=>0);

$word = ("annual", "nominal")[random(0,1)];

my $i = random(0,2);
$k      = (12,4,2)[$i];
$k_word = ("monthly","quarterly","bi-annually")[$i]; 

$r = random(3,12);  $rd = $r/100;
$n = random(3,6);
$P = random(1000,1500,100);
$S = random(2000,2500,100);


$ans[0] = Formula("$rd/$k");
$ans[1] = Formula("$k*$n");
$ans[2] = Formula("$P*(1+$rd/$k)^( $k*$n)");
$ans[3] = Formula("$S*(1+$rd/$k)^(-$k*$n)");
$ans[4] = Formula("1/$k * ln($S/$P) / ln(1+$rd/$k)");

@index = ("A","B","C","D","E","F","G","H","I","J","K","L","M","N","O");

Context()->texStrings;
BEGIN_TEXT

Write formulas for the following, assuming a $word interest rate of 
\($r \%\) compounded $k_word.

$PAR

$BBOLD (A) $EBOLD $SPACE $SPACE
The periodic interest rate (as a decimal).$BR
\(\quad\) periodic rate \( = \)\{ans_rule(2)\}

$PAR

$BBOLD (B) $EBOLD $SPACE $SPACE
The number of compounding periods in $n years. $BR
\(\quad \#\mathrm{periods} = \)\{ans_rule(2)\}

$PAR

$BBOLD (C) $EBOLD $SPACE $SPACE
The amount resulting from investing $P after $n years. $BR
\(\quad \mathrm{amount} = \)\{ans_rule(22)\}

$PAR

$BBOLD (D) $EBOLD $SPACE $SPACE
The amount needed to yield $S in $n years. $BR
\(\quad \mathrm{amount} = \)\{ans_rule(22)\}


$PAR

$BBOLD (E) $EBOLD $SPACE $SPACE
The number of years required for $P to increase to $S. $BR
\(\quad \#\mathrm{years} = \)\{ans_rule(32)\}


END_TEXT

Context()->normalStrings;

$showPartialCorrectAnswers = 1;

for ($i=0;$i<=$#ans;$i++) {
  if ($i==4) { ANS( $ans[$i]->cmp(tolType=>'absolute',tolerance=>1) ); }  
  else       { ANS( $ans[$i]->cmp() ); }
}


ENDDOCUMENT();        # This should be the last executable line in the problem.


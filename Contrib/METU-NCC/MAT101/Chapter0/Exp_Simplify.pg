## DBsubject(Algebra)
## DBchapter(Properties of exponents, rational exponents and radicals)
## DBsection(Properties of rational exponents and radicals)
## Level(2)
## Author(Benjamin Walter)
## Institution(METU-NCC)
## Language(en)
## MO(1)
## Static(0)
DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "PGchoicemacros.pl",
  "PGcourse.pl",
  "MathObjects.pl",
  "contextFraction.pl"
);

sub pick {
  my ($k, @in) = @_;
  my @out = ();
  while (@out < $k) { push( @out, splice(@in, random(0,$#in), 1) ); }
  @out; 
}

TEXT(beginproblem());
Context("Fraction");
Context()->variables->are(x=>"Real",y=>"Real");

my $a; my $b; my $c; my $d; my $ab;

($a,$b) = (random(2,4),random(2,4)); 
$c = $a*$b+1;

$expr[0] = "x^$a x^{1/$b}";      $ans[0] = Formula("x^($c/$b)");
$ans[0]->{limits} = [1,3];

#########

$a = random(2,3); $b = $a*random(2,3);
$ab = $b/$a;

$expr[1] = "\sqrt[$b]{x^{$a}\,}";  $ans[1] = Formula("x^(1/$ab)");
$ans[1]->{limits} = [1,3];


#########

$a = random(2,3); $b = $a*random(2,3);
$ab = $b/$a;

$expr[2] = "\sqrt[$b]{x^{-$a}\,}"; $ans[2] = Formula("1/(x^(1/$ab))");
$ans[2]->{limits} = [1,3];

#########

($a,$b) = ("x","y")[pick(2,(0,1))];
$c = random(1,3);

$expr[3] = (random(0,1)==1) 
         ? "$a^{-$c}\;\sqrt{$b\,}" 
         : "\sqrt{$b\,}\; $a^{-$c}";

$ans[3] = Formula("$b^(1/2) / $a^$c");
$ans[3]->{limits} = [[1,3],[1,3]];

#########

($a,$b,$c) = (random(3,4),pick(2,(2,6)));
$d = 2**$a;

$expr[4] = "\sqrt[$a]{$d x^$b y^$c\,}";
$ans[4]  = Formula("2 x^($b/$a) y^($c/$a)");
$ans[4]->{limits} = [[1,3],[1,3]];

@index = ("A","B","C","D","E","F","G","H","I","J","K","L","M","N","O");

Context()->texStrings;
BEGIN_TEXT

Write the expressions below in terms of positive (simplifed) exponents.

END_TEXT
for ($i=0;$i<=$#expr;$i++) {

BEGIN_TEXT
$PAR
$BBOLD ($index[$i]) $EBOLD 
 \(\quad \displaystyle $expr[$i] = \) \{ans_rule(10);\}
END_TEXT

}
Context()->normalStrings;

$showPartialCorrectAnswers = 1;

$check = sub {
 my ($c, $s, $ansHash) = @_;

 my $pow = $ansHash->{pow} // 1;

 Value->Error("Simplify further") if (($s->{string} =~ tr/\^//) > $pow);
 Value->Error("Simplify further") if (($s->{string} =~ tr/x//) > 1);
 Value->Error("Simplify further") if (($s->{string} =~ tr/y//) > 1);
 Value->Error("No negative powers") if (($s->{string} =~ tr/\-//) > 0);

 return ($c == $s);
};

for ($i=0;$i<3;$i++) {
  ANS( $ans[$i]->cmp(checker=>$check,bypass_equivalence_test=>1) );
}

ANS( $ans[3]->cmp(checker=>$check,pow=>2,bypass_equivalence_test=>1));
ANS( $ans[4]->cmp(checker=>$check,pow=>2,bypass_equivalence_test=>1));


ENDDOCUMENT();        # This should be the last executable line in the problem.


## BEGIN_DESCRIPTION
##  Compute tangent line to function at given point 
##   (use chain or quotient rule)
## END_DESCRIPTION
##
##############################################
## DBsubject(Calculus - single variable)
## DBchapter(Applications of differentiation)
## DBsection(Linear approximation and differentials)
## Institution(METU-NCC)
## Author(Benjamin Walter)
## MO(1)
## Static(0)
## Level(2)
## Language(en)
###############################################



DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGcourse.pl",
"MathObjects.pl",
"contextFraction.pl"
);

TEXT(beginproblem());

Context("Numeric");
Context()->variables->are(x=>'Real');

my @c; my @p;
my $y; my $m;

@c = (
  [random(1,3),non_zero_random(-3,3)],
  [random(1,3),non_zero_random(-3,3)]
);  
do { @p = (random(1,3), random(1,3)); } until ($p[0] != $p[1]);
$a1 = non_zero_random(-1,1);  
$f1 = Formula("($c[0][0]*x^$p[0] + $c[0][1])($c[1][0]*x^$p[1] + $c[1][1])")->reduce;
$y  = $f1->eval(x=>$a1);
$m  = $f1->D('x')->eval(x=>$a1);
$y1 = Formula("$y + $m*(x-$a1)")->reduce;


do { @p = (random(1,3), random(1,3)); } until ($p[0] != $p[1]);
$a2 = non_zero_random(-1,1);  
do {
  @c = (
    [random(1,3),non_zero_random(-3,3)],
    [random(1,3),non_zero_random(-3,3)]
  );
} until (($c[1][0]*$a2**$p[1] + $c[1][1]) != 0);
$f2 = Formula("($c[0][0]*x^$p[0] + $c[0][1])/($c[1][0]*x^$p[1] + $c[1][1])")->reduce;
$y  = $f2->eval(x=>$a2);
$m  = $f2->D('x')->eval(x=>$a2);
$y2 = Formula("$y + $m*(x-$a2)")->reduce;

Context()->texStrings;

BEGIN_TEXT

Find the tangent line to the given function at the given point.
$PAR
$BBOLD A.$EBOLD \(\quad \displaystyle f(x) = $f1\) at \(x=$a1\)
$PAR
\(\qquad y = \) \{ $y1->ans_rule(); \}
$PAR
$BR

$BBOLD B.$EBOLD \(\quad \displaystyle f(x) = $f2\) at \(x=$a2\)
$PAR
\(\qquad y = \) \{ $y2->ans_rule(); \}

END_TEXT
Context()->normalStrings;

ANS( $y1->cmp() );
ANS( $y2->cmp() );


ENDDOCUMENT();        # This should be the last executable line in the problem.
       

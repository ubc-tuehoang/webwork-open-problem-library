## BEGIN_DESCRIPTION
##  Complete sign table for f
## END_DESCRIPTION
##
##############################################
## DBsubject(Algebra)
## DBchapter(Polynomial equations and functions)
## DBsection(Graphs of polynomials)
## Institution(METU-NCC)
## Author(Benjamin Walter)
## MO(1)
## Static(0)
## Level(2)
## Language(en)
###############################################



DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGcourse.pl",
"MathObjects.pl",
"parserPopUp.pl",
"niceTables.pl"
);

TEXT(beginproblem());

Context("Numeric");
Context()->noreduce('(-x)-y','(-x)+y');

$dne = "~~x{2205}";
#$dne = "X";

@popPN = (PopUp([" ","+","-"],"+"), 
          PopUp([" ","+","-"],"-")); 
$popZer = PopUp([" ","0","$dne"],"0"); 


@c = ([random(1,3),          random(-3,-1)],
      [non_zero_random(-3,3),non_zero_random(-3,3)]);
do {$c[0][1] =         random(-3,-1);} while (abs($c[0][0])==abs($c[0][1]));
do {$c[1][1] = non_zero_random(-3,3);} while (abs($c[1][0])==abs($c[1][1]));

my @S;
$S[0] = non_zero_random(-1,1);
$S[1] = ($S[0]==1) ? -1 : 1;

@f = (Formula("$S[0]*x^5 - $S[0]*($c[0][0]+$c[0][1])*x^3 + $S[0]*$c[0][0]*$c[0][1]*x")->reduce,
      Formula("$S[1]*x^4 - $S[1]*($c[1][0]+$c[1][1])*x^3 + $S[1]*$c[1][0]*$c[1][1]*x^2")->reduce);

@c = ([PGsort(sub{$_[0] < $_[1]}, (-sqrt($c[0][0]),0,sqrt($c[0][0])))],
      [PGsort(sub{$_[0] < $_[1]}, ($c[1][0],$c[1][1],0))]);

foreach my $i (0..1) {
  $s[$i][3] = ($S[$i]==1) ? 0 : 1;
}
foreach my $j (1..3) {
# $s[0][3-$j] = ($c[0][3-$j]==0) ? ($s[0][4-$j]+1)%2 : $s[0][4-$j];
  $s[0][3-$j] = ($s[0][4-$j]+1)%2;
  $s[1][3-$j] = ($c[1][3-$j]!=0) ? ($s[1][4-$j]+1)%2 : $s[1][4-$j];
}


foreach my $i (0..1) {
  foreach my $j (0..3) {
    $pop_f[$i][$j] = @popPN[$s[$i][$j]];
  }
}

$p[0] = random(0,1);  $p[1] = ($p[0]+1)%2;

$br = "border-right: 3px solid;";
$bb = "border-bottom: 3px solid; height: 2px;";
$ht = "height:2px;";

Context()->texStrings;
BEGIN_TEXT

Fill in the sign tables for the functions below.
$PAR
$BBOLD (A) $EBOLD \(\ \ f(x) = $f[$p[0]]\).

$PAR
\{DataTable(
[
  ["\(x\)","",
    [ans_rule(2),colspan=>2],"",
    [ans_rule(2),colspan=>2],"",
    [ans_rule(2),colspan=>2],"" ],
  [ ["",cellcss=>$bb],["",cellcss=>$bb],["",cellcss=>$bb.$br],
    ["",cellcss=>$bb],["",cellcss=>$bb],["",cellcss=>$bb.$br],
    ["",cellcss=>$bb],["",cellcss=>$bb],["",cellcss=>$bb.$br],
    ["",cellcss=>$bb],["",cellcss=>$bb] ],
  [ ["",cellcss=>$ht],["",cellcss=>$ht],["",cellcss=>$ht.$br],
    ["",cellcss=>$ht],["",cellcss=>$ht],["",cellcss=>$ht.$br],
    ["",cellcss=>$ht],["",cellcss=>$ht],["",cellcss=>$ht.$br],
    ["",cellcss=>$ht],["",cellcss=>$ht] ],
  ["\(f\)",$pop_f[$p[0]][0]->menu(),[$popZer->menu(),colspan=>2],
           $pop_f[$p[0]][1]->menu(),[$popZer->menu(),colspan=>2],
           $pop_f[$p[0]][2]->menu(),[$popZer->menu(),colspan=>2],
	   $pop_f[$p[0]][3]->menu() ]
], 'align =>ccc|ccc|ccc|cc', midrules=>1
);\}
$PAR$BR$PAR
$BBOLD (B) $EBOLD \(\ \ g(x) = $f[$p[1]]\).

$PAR
\{DataTable(
[
  ["\(x\)","",
    [ans_rule(2),colspan=>2],"",
    [ans_rule(2),colspan=>2],"",
    [ans_rule(2),colspan=>2],"" ],
  [ ["",cellcss=>$bb],["",cellcss=>$bb],["",cellcss=>$bb.$br],
    ["",cellcss=>$bb],["",cellcss=>$bb],["",cellcss=>$bb.$br],
    ["",cellcss=>$bb],["",cellcss=>$bb],["",cellcss=>$bb.$br],
    ["",cellcss=>$bb],["",cellcss=>$bb] ],
  [ ["",cellcss=>$ht],["",cellcss=>$ht],["",cellcss=>$ht.$br],
    ["",cellcss=>$ht],["",cellcss=>$ht],["",cellcss=>$ht.$br],
    ["",cellcss=>$ht],["",cellcss=>$ht],["",cellcss=>$ht.$br],
    ["",cellcss=>$ht],["",cellcss=>$ht] ],
  ["\(g\)",$pop_f[$p[1]][0]->menu(),[$popZer->menu(),colspan=>2],
           $pop_f[$p[1]][1]->menu(),[$popZer->menu(),colspan=>2],
           $pop_f[$p[1]][2]->menu(),[$popZer->menu(),colspan=>2],
	   $pop_f[$p[1]][3]->menu() ]
], 'align =>ccc|ccc|ccc|cc', midrules=>1
);\}
$PAR
In the row for \(x\):
$BR\(\quad \bullet\ \) 
fill in \(x\)-values on number line where \(f\) is zero or does not exist.
$BR
In the row for \(f\):
$BR\(\quad \bullet\ \) 
mark ${BBOLD}intervals${EBOLD} as "\(+\)" or "\(-\)" 
  to indicate \(f\) is ${BBOLD}positive${EBOLD} or ${BBOLD}negative${EBOLD}; and
$BR\(\quad \bullet\ \) 
mark ${BBOLD}points${EBOLD} as "\(0\)" or "${BTT}$dne${ETT}" 
  to indicate \(f\) is ${BBOLD}zero${EBOLD} or does ${BBOLD}not exist${EBOLD}.




END_TEXT
Context()->normalStrings;

ANS( Real($c[$p[0]][0])->cmp() );
ANS( Real($c[$p[0]][1])->cmp() );
ANS( Real($c[$p[0]][2])->cmp() );

ANS( $pop_f[$p[0]][0]->cmp() ); ANS( $popZer->cmp() ); 
ANS( $pop_f[$p[0]][1]->cmp() ); ANS( $popZer->cmp() ); 
ANS( $pop_f[$p[0]][2]->cmp() ); ANS( $popZer->cmp() ); 
ANS( $pop_f[$p[0]][3]->cmp() ); 


ANS( Real($c[$p[1]][0])->cmp() );
ANS( Real($c[$p[1]][1])->cmp() );
ANS( Real($c[$p[1]][2])->cmp() );

ANS( $pop_f[$p[1]][0]->cmp() ); ANS( $popZer->cmp() ); 
ANS( $pop_f[$p[1]][1]->cmp() ); ANS( $popZer->cmp() ); 
ANS( $pop_f[$p[1]][2]->cmp() ); ANS( $popZer->cmp() ); 
ANS( $pop_f[$p[1]][3]->cmp() ); 



ENDDOCUMENT();        # This should be the last executable line in the problem.
       

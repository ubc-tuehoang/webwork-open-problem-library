## BEGIN_DESCRIPTION
##  Use implicit derivative to get tangent line
## END_DESCRIPTION
##
##############################################
## DBsubject(Calculus - single variable)
## DBchapter(Differentiation)
## DBsection(Implicit differentiation)
## Institution(METU-NCC)
## Author(Benjamin Walter)
## MO(1)
## Static(0)
## Level(2)
## Language(en)
###############################################



DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGcourse.pl",
"MathObjects.pl",
"PGchoicemacros.pl",
"contextFraction.pl"
);

TEXT(beginproblem());

Context("Fraction-NoDecimals");
Context()->variables->{namePattern} = qr/[a-z][a-z0-9_]*'*/i;
Context()->variables->are(
    x=>"Real",
    y=>"Real"
);


my @c = (non_zero_random(-3,3),non_zero_random(-3,3),non_zero_random(-1,1));
my @f = (Formula("x+$c[0]"),Formula("y+$c[1]"),Formula("x+$c[2]*y"));
@i = shuffle(3);
$f = Formula("($f[$i[0]])*($f[$i[1]])*($f[$i[2]])")->reduce;
do {
  ($x,$y) = (non_zero_random(-4,4),non_zero_random(-4,4));
  $k = $f->eval(x=>$x,y=>$y);
  $dy = $f->D('y')->eval(x=>$x,y=>$y);
} until (($k != 0) && ($dy != 0));
my $yp = Fraction(-$f->D('x')->eval(x=>$x,y=>$y),$dy)->reduce;
$tangent = Formula("$y + $yp*(x-$x)")->reduce; 


Context()->texStrings;

BEGIN_TEXT

Use implicit differentiation and the product rule to compute 
the formula for the tangent
line to \[$f = $k\] at the point \(($x,$y)\).
$PAR
$BR
\(\qquad y = \) \{ $tangent->ans_rule(); \}





END_TEXT
Context()->normalStrings;

ANS( $tangent->cmp() );


ENDDOCUMENT();        # This should be the last executable line in the problem.
       

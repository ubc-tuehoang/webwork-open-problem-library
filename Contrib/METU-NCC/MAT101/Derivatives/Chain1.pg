## BEGIN_DESCRIPTION
##  Compute derivatives using simple chain rule 
## END_DESCRIPTION
##
##############################################
## DBsubject(Calculus - single variable)
## DBchapter(Differentiation)
## DBsection(Chain rule (without trigonometric functions))
## Institution(METU-NCC)
## Author(Benjamin Walter)
## MO(1)
## Static(0)
## Level(2)
## Language(en)
###############################################



DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGcourse.pl",
"MathObjects.pl",
"PGchoicemacros.pl",
"contextFraction.pl"
);

TEXT(beginproblem());

Context("Fraction");
Context()->variables->are(x=>'Real');

my @c; my @p; my $p;

@c = (non_zero_random(0,3),non_zero_random(-2,3));
@p = PGsort(sub{$_[0] < $_[1]}, (map {$_ + 1 } shuffle(5))[0,1]); 
$p = random(3,6);
$f[0] = Formula("($c[0]*x^$p[0] + $c[1]*x^$p[1])^$p")->reduce;
$f_text[0] = $f[0];

@c = (non_zero_random(0,3),non_zero_random(-2,3));
@p = PGsort(sub{$_[0] < $_[1]}, (map {$_ + 1 } shuffle(5))[0,1]); 
$p = random(3,6);
$f[1] = Formula("1/($c[0]*x^$p[0] + $c[1]*x^$p[1])^$p")->reduce;
$f_text[1] = $f[1];

@c = (non_zero_random(0,3),non_zero_random(-2,3));
@p = PGsort(sub{$_[0] < $_[1]}, (map {$_ + 1 } shuffle(5))[0,1]); 
$f[2] = Formula("$c[0]*x^$p[0] + $c[1]*x^$p[1]")->reduce;
Context()->texStrings;
$f_text[2] = "\sqrt{$f[2]}";
Context()->normalStrings;
$f[2] = Formula("($f[2])^(1/2)")->D('x');
$f[2]->{limits} = [0.01,0.5];

@c = (non_zero_random(0,3),non_zero_random(0,3));
@p = PGsort(sub{$_[0] < $_[1]}, (map {$_ + 1 } shuffle(5))[0,1]); 
$f[3] = Formula("$c[0]*x^$p[0] + $c[1]*x^$p[1]")->reduce;
do { @p = PGsort(sub{$_[0] > $_[1]}, (map {$_ + 2 } shuffle(5))[0,1]); }
until (gcd($p[0],$p[1]) == 1);
$p = $p[0]/$p[1];
Context()->texStrings;
$p[1] = ($p[1]==2) ? "" : $p[1];
$f_text[3] = "\sqrt[$p[1]]{($f[3])^$p[0]}"; 
Context()->normalStrings; 
$f[3] = Formula("$p*($f[3])^($p-1)")*$f[3]->D('x');
$f[3]->{limits} = [0.01,0.5];

Context()->texStrings;

BEGIN_TEXT

Compute derivatives of the following functions (be careful about parenthesis!):
$PAR
$BBOLD A.$EBOLD \(\quad \displaystyle f(x) = $f_text[0]\)
$BR
\(\quad f'(x) = \) \{ ans_rule(40); \}
$PAR

$BBOLD B.$EBOLD \(\quad \displaystyle f(x) = $f_text[1]\)
$BR
\(\quad f'(x) = \) \{ ans_rule(40); \}
$PAR

$BBOLD C.$EBOLD \(\quad \displaystyle f(x) = $f_text[2]\)
$BR
\(\quad f'(x) = \) \{ ans_rule(40); \}
$PAR

$BBOLD D.$EBOLD \(\quad \displaystyle f(x) = $f_text[3]\)
$BR
\(\quad f'(x) = \) \{ ans_rule(40); \}
$PAR



END_TEXT
Context()->normalStrings;

ANS( $f[0]->D('x')->cmp() );
ANS( $f[1]->D('x')->cmp() );
ANS( $f[2]->cmp() );
ANS( $f[3]->cmp() );


ENDDOCUMENT();        # This should be the last executable line in the problem.
       

## BEGIN_DESCRIPTION
##  Complete sign table for f' and f'' and draw conclusions
## END_DESCRIPTION
##
##############################################
## DBsubject(Calculus - single variable)
## DBchapter(Applications of differentiation)
## DBsection(Summary of curve sketching)
## Institution(METU-NCC)
## Author(Benjamin Walter)
## MO(1)
## Static(0)
## Level(2)
## Language(en)
###############################################



DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGcourse.pl",
"MathObjects.pl",
"parserPopUp.pl",
"niceTables.pl"
);

TEXT(beginproblem());

Context("Numeric");
Context()->noreduce('(-x)-y','(-x)+y');

my @p = (random(0,1)==1) ? (0,1,2,3) : (0,2,1,3);
if (random(0,1)==1) { @p = @p[3,2,1,0]; }
my @l = ("A","B","C","D");

my @popPN = (PopUp([" ","+","-","0"],"-"), 
             PopUp([" ","+","-","0"],"0"), 
             PopUp([" ","+","-","0"],"+")); 
my @popSH = ([PopUp([" ",@l],$l[$p[0]]),  # [f'][f'']
              PopUp([" ",@l],$l[$p[1]])],
             [PopUp([" ",@l],$l[$p[2]]),
              PopUp([" ",@l],$l[$p[3]])]);

@images = ("Table_dff2_00.png","Table_dff2_01.png",
           "Table_dff2_10.png","Table_dff2_11.png")[@p];



@c = (non_zero_random(-4,4),non_zero_random(-4,4));
my $S = random(-1,1,2); 
$f = Formula("$S*x^3+$S*3*$c[0]*x^2+$c[1]")->reduce;
@c = PGsort(sub{$_[0] < $_[1]}, (-$c[0],-2*$c[0],0)); 

foreach my $i (0..2) {
  $pop_ddf[$i]   = $popPN[1-$S]; 
  $pop_ddf[4+$i] = $popPN[1+$S];
  $pop_df[2+$i]  = $popPN[1-$S];
}
$pop_ddf[3] = $popPN[1];
$pop_df[1]  = $popPN[1];     $pop_df[5] = $popPN[1];
$pop_df[0]  = $popPN[1+$S];  $pop_df[6] = $popPN[1+$S]; 

$pop_f[0] = $popSH[(1-$S)/2][(1+$S)/2];
$pop_f[1] = $popSH[(1+$S)/2][(1+$S)/2];
$pop_f[2] = $popSH[(1+$S)/2][(1-$S)/2];
$pop_f[3] = $popSH[(1-$S)/2][(1-$S)/2];

$br = "border-right: 3px solid;";
$bb = "border-bottom: 3px solid; height: 2px;";
$ht = "height:4px;";

Context()->texStrings;
BEGIN_TEXT

Fill in the sign table for the function below.
$PAR
\(\displaystyle \ \ f(x) = $f\)

$PAR
\{DataTable(
[
  ["\(x\)","",
    [ans_rule(2),colspan=>2],"",
    [ans_rule(2),colspan=>2],"",
    [ans_rule(2),colspan=>2],"" ],
  [ ["",cellcss=>$bb],["",cellcss=>$bb],["",cellcss=>$bb.$br],
    ["",cellcss=>$bb],["",cellcss=>$bb],["",cellcss=>$bb.$br],
    ["",cellcss=>$bb],["",cellcss=>$bb],["",cellcss=>$bb.$br],
    ["",cellcss=>$bb],["",cellcss=>$bb] ],
  [ ["",cellcss=>$ht],["",cellcss=>$ht],["",cellcss=>$ht.$br],
    ["",cellcss=>$ht],["",cellcss=>$ht],["",cellcss=>$ht.$br],
    ["",cellcss=>$ht],["",cellcss=>$ht],["",cellcss=>$ht.$br],
    ["",cellcss=>$ht],["",cellcss=>$ht] ],
  ["\(f''\)",$pop_ddf[0]->menu(),[$pop_ddf[1]->menu(),colspan=>2],
             $pop_ddf[2]->menu(),[$pop_ddf[3]->menu(),colspan=>2],
             $pop_ddf[4]->menu(),[$pop_ddf[5]->menu(),colspan=>2],
	     $pop_ddf[6]->menu() ],
  [ ["",cellcss=>$ht],["",cellcss=>$ht],["",cellcss=>$ht.$br],
    ["",cellcss=>$ht],["",cellcss=>$ht],["",cellcss=>$ht.$br],
    ["",cellcss=>$ht],["",cellcss=>$ht],["",cellcss=>$ht.$br],
    ["",cellcss=>$ht],["",cellcss=>$ht] ],
  ["\(f'\)",$pop_df[0]->menu(),[$pop_df[1]->menu(),colspan=>2],
            $pop_df[2]->menu(),[$pop_df[3]->menu(),colspan=>2],
            $pop_df[4]->menu(),[$pop_df[5]->menu(),colspan=>2],
	    $pop_df[6]->menu() ],
  [ ["",cellcss=>$ht],["",cellcss=>$ht],["",cellcss=>$ht.$br],
    ["",cellcss=>$ht],["",cellcss=>$ht],["",cellcss=>$ht.$br],
    ["",cellcss=>$ht],["",cellcss=>$ht],["",cellcss=>$ht.$br],
    ["",cellcss=>$ht],["",cellcss=>$ht] ],
  ["\(f\)",$pop_f[0]->menu(),["",cellcss=>$br],"",
           $pop_f[1]->menu(),["",cellcss=>$br],"",
           $pop_f[2]->menu(),["",cellcss=>$br],"",
	   $pop_f[3]->menu() ],
], 'align =>ccc|ccc|ccc|cc', midrules=>1
);\}

$PAR

In the row for \(x\):
$BR\(\quad \bullet\ \) 
fill in \(x\)-values on number line where \(f''\) and \(f'\) are zero or do not exist.
$PAR
In the rows for \(f''\) and \(f'\):
$BR\(\quad \bullet\ \) 
mark "\(+\)" or "\(-\)" or "\(0\)" 
  to indicate if \(f''\) or \(f'\) 
  is ${BBOLD}positive${EBOLD} or ${BBOLD}negative${EBOLD} or ${BBOLD}zero${EBOLD}
  at that point / on that interval.
$PAR
In the row for \(f\):
$BR\(\quad \bullet\ \) 
mark ${BBOLD}intervals${EBOLD} as A, B, C, D depending on the shape of \(y=f(x)\) 
(see below).
\{DataTable(
[[image($images[0], width=>100,height=>100,tex_size=>100), 
  image($images[1], width=>100,height=>100,tex_size=>100), 
  image($images[2], width=>100,height=>100,tex_size=>100), 
  image($images[3], width=>100,height=>100,tex_size=>100)], 
 ["(A)","(B)","(C)","(D)"]],
'align=>cccc'
);\}


END_TEXT
Context()->normalStrings;


                           ANS( Real($c[0])->cmp() );
                           ANS( Real($c[1])->cmp() );
                           ANS( Real($c[2])->cmp() );

ANS( $pop_ddf[0]->cmp() ); ANS( $pop_ddf[1]->cmp() ); 
ANS( $pop_ddf[2]->cmp() ); ANS( $pop_ddf[3]->cmp() ); 
ANS( $pop_ddf[4]->cmp() ); ANS( $pop_ddf[5]->cmp() ); 
ANS( $pop_ddf[6]->cmp() ); 

ANS( $pop_df[0]->cmp() );  ANS( $pop_df[1]->cmp() ); 
ANS( $pop_df[2]->cmp() );  ANS( $pop_df[3]->cmp() ); 
ANS( $pop_df[4]->cmp() );  ANS( $pop_df[5]->cmp() ); 
ANS( $pop_df[6]->cmp() ); 

ANS( $pop_f[0]->cmp() );
ANS( $pop_f[1]->cmp() );
ANS( $pop_f[2]->cmp() );
ANS( $pop_f[3]->cmp() );


ENDDOCUMENT();        # This should be the last executable line in the problem.
       

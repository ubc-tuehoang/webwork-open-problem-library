## DBsubject(Combinatorics)
## DBchapter(Counting)
## DBsection(Multiple techniques)
## Level(2)
## Author(Benjamin Walter)
## Institution(METU-NCC)
## Language(en)
## MO(1)
## Static(0)

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "PGcourse.pl",
  "MathObjects.pl",
  "contextIntegerFunctions.pl"
);

sub pick {
  my ($k, @in) = @_;
  my @out = ();
  while (@out < $k) { push( @out, splice(@in, random(0,$#in), 1) ); }
  @out; 
};

TEXT(beginproblem());
Context("IntegerFunctions");
Context()->variables->are(x=>"Real");
Context()->flags->set(reduceConstants=>0);

my $i = random(0,1);
my @n = (random(2,3),random(4,5));

$expr[0] = "Number of rolls where both dice are " .
 ("$n[0] or less","$n[1] or more")[$i];
$ans[0]  = (Formula("($n[0])^2"),Formula("(7-$n[1])^2"))[$i];

$expr[1] = "Number of rolls where at least one die is " .
 ($n[0]+1 . " or greater", $n[1]-1 . " or less")[$i];
$ans[1]  = Formula("6^2 - $ans[0]");

$expr[2] = "Number of rolls where both dice are " . ("even","odd")[random(0,1)];
$ans[2]  = Formula("3^2");

$expr[3] = "Number of rolls where at least one die is " . ("odd","even")[random(0,1)];
$ans[3]  = Formula("6^2 - 3^2");

$i = random(0,1);  @n = (random(3,4),random(10,11));

$expr[4] = "Number of rolls with sum " .
 ("$n[0] or less","$n[1] or more")[$i];
$ans[4]  = (Formula("$n[0]*($n[0]-1)/2"),
            Formula("(14-$n[1])*(13-$n[1])/2"))[$i];

$expr[5] = "Number of rolls with sum " .
 ($n[0]+1 . " or more",$n[1]-1 . " or less")[$i];
$ans[5]  = Formula("6^2-$ans[4]");

#@i = pick(2,(0,1));
#@expr = @expr[@i]; @word = @word[@i]; @ans = @ans[@i];

@index = ("A","B","C","D","E","F","G","H","I","J","K","L","M","N","O");

Context()->texStrings;
BEGIN_TEXT

Suppose you roll two dice.  Give counts for the following.

END_TEXT
for ($j=0;$j<=$#expr;$j++) {
BEGIN_TEXT

$PAR

$BBOLD ($index[$j]) $EBOLD $SPACE $SPACE
$expr[$j] $BR
\(\quad\)  \{ans_rule(25)\}

END_TEXT
}

Context()->normalStrings;

$showPartialCorrectAnswers = 1;

for ($j=0;$j<=$#ans;$j++) {
  ANS( $ans[$j]->cmp() ); 
}


ENDDOCUMENT();        # This should be the last executable line in the problem.


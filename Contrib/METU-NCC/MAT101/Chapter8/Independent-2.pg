## BEGIN_DESCRIPTION
##  Complete a table of counts... in preparation for probability computations.  
## END_DESCRIPTION
##
##############################################
## DBsubject(Probability)
## DBchapter(Sample Space)
## DBsection(Probability: direct computation, inclusion/exclusion)
## Author(Benjamin Walter)
## Institution(METU-NCC)
## Language(en)
## MO(1)
## Static(0)
## Level(1)
###############################################



DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"PGcourse.pl",
"MathObjects.pl",
"niceTables.pl",
"contextFraction.pl"
);

sub pick {
  my ($k, @in) = @_;
  my @out = ();
  while (@out < $k) { push( @out, splice(@in, random(0,$#in), 1) ); }
  @out;
};


TEXT(beginproblem());

Context("Numeric");

my @c = pick(2,(2..8));  my @d = pick(2,(2..5));

@count = (
  [Real($c[0]*$d[0]),Real($c[1]*$d[0]),0],
  [Real($c[0]*$d[1]),Real($c[1]*$d[1]),0],
  [0,0,0]);

$count[0][2] = $count[0][0] + $count[0][1];
$count[1][2] = $count[1][0] + $count[1][1];

$count[2][0] = $count[0][0] + $count[1][0];
$count[2][1] = $count[0][1] + $count[1][1];

$count[2][2] = $count[0][2] + $count[1][2];


@cut = (0,0,0,0,0,0);

my $r  = random(0,2); my $c  = random(0,2);
my $rd = random(0,2); my $cd = random(0,2);
while (($r == $cd) && ($rd == $c)) {
  $rd = random(0,2); $cd = random(0,2);
}

my $k = 0;
foreach my $i (0..2) { foreach my $j (0..2) {
  if ((($i != $r)  && ($j != $c))
   || (($i == $r)  && ($j == $rd))
   || (($i == $cd) && ($j == $c))) {
    $cut[$k] = $count[$i][$j];
    $count[$i][$j] =  $cut[$k]->ans_rule(2);
    $k = $k+1;
  }
}}

$bl = "border-left: 3px double;";
$bt = "border-top:  3px double; width: 50px;";

Context()->texStrings;
BEGIN_TEXT

Complete the table of ${BBOLD}counts${EBOLD} below
if \( A\) and \( B\) 
are $BBOLD independent $EBOLD events.
$PAR

\{
DataTable(
  [
    [['\(\#\)', headerrow => 1],'\(A\)','\(A^c\)',['Total',cellcss=>$bl]],
    ['\(B\)'  ,$count[0][0], $count[0][1], [$count[0][2],cellcss=>$bl]],
    ['\(B^c\)',$count[1][0], $count[1][1], [$count[1][2],cellcss=>$bl]],
    [['${BBOLD}Total${EBOLD}',cellcss=>$bt], 
     [$count[2][0] ,cellcss=>$bt], [$count[2][1],cellcss=>$bt], [$count[2][2],cellcss=>$bl.$bt]]
  ], 
  align => '| r | c | c || c |',
  midrules => 1
);
\}


END_TEXT
Context()->normalStrings;

foreach (0..$#cut) {
  ANS($cut[$_]->cmp());
}



ENDDOCUMENT();        # This should be the last executable line in the problem.
       

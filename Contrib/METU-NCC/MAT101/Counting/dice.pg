## BEGIN_DESCRIPTION
##  Count number of ways to get different outcomes from dice rolls 
## END_DESCRIPTION
##
##############################################
## DBsubject(Combinatorics)
## DBchapter(Counting)
## DBsection(Principles (addition, subtraction, multiplication))
## Author(Benjamin Walter)
## Institution(METU-NCC)
## Language(en)
## MO(1)
## Static(0)
## Level(2)
###############################################



DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"PGcourse.pl",
"MathObjects.pl",
"niceTables.pl",
"contextFraction.pl"
);

TEXT(beginproblem());

Context("Numeric");

$n = random(4,6);

my @k = shuffle($n-1);
@k1 = ($k[0]+1,random(3,5,2));
@k2 = ($k[1]+1,random(2,4,2));
@i3 = (random(0,1),random(0,1));
@k3 = ((random(1,2),random($n-2,$n-1))[$i3[0]],
       (random(2,4,2),random(3,5,2))[$i3[1]]);
$word = ("or less","or more")[$i3[0]];
$math = ("\le","\ge")[$i3[1]];

$count1 = Formula("6^$n");
$count2 = Real(C($n,$k1[0]) * (7-$k1[1])**$k1[0] * ($k1[1]-1)**($n-$k1[0]));
$count3 = Real(C($n,$k2[0]) * ($k2[1])**$k2[0] * (6-$k2[1])**($n-$k2[0]));
$count4 = Real(0);  
$i3[0] = ($i3[0]==0) ? -1 : 1;   # change to decrement/increment
for (my $i=$k3[0];(0<=$i)&&($i<=$n);$i+=$i3[0]) {
  if ($i3[1] == 0) {
    $count4 = $count4 + 
              Real(C($n,$i) * ($k3[1])**$i * (6-$k3[1])**($n-$i));
  } else {
    $count4 = $count4 + 
              Real(C($n,$i) * (7-$k3[1])**$i * ($k3[1]-1)**($n-$i));
  }
}


Context()->texStrings;

BEGIN_TEXT

How many possible outcomes are there from rolling 
$n (ordered) dice?
$BR
\{ $count1->ans_rule(5); \}
$PAR
How many ways can rolling \($n\) dice give
$BBOLD exactly \(\mathbf{$k1[0]}\) $EBOLD dice showing \(\ge $k1[1]\)?
$BR
\{ $count2->ans_rule(20); \}
$PAR
How many ways can rolling \($n\) dice give
$BBOLD exactly \(\mathbf{$k2[0]}\) $EBOLD dice showing \(\le $k2[1]\)?
$BR
\{ $count3->ans_rule(20); \}
$PAR
How many ways can rolling \($n\) dice give $BBOLD
 \(\mathbf{$k3[0]}\) $word $EBOLD dice showing \($math $k3[1]\)?
$BR
\{ $count4->ans_rule(40); \}



END_TEXT
Context()->normalStrings;

ANS( $count1->cmp() );
ANS( $count2->cmp() );
ANS( $count3->cmp() );
ANS( $count4->cmp() );


ENDDOCUMENT();        # This should be the last executable line in the problem.
       

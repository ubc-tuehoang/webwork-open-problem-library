## BEGIN_DESCRIPTION
##  Count number of ways to get different outcomes from coin tosses
## END_DESCRIPTION
##
##############################################
## DBsubject(Combinatorics)
## DBchapter(Counting)
## DBsection(Principles (addition, subtraction, multiplication))
## Author(Benjamin Walter)
## Institution(METU-NCC)
## Language(en)
## MO(1)
## Static(0)
## Level(2)
###############################################



DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"PGcourse.pl",
"MathObjects.pl",
"niceTables.pl",
"contextFraction.pl"
);

TEXT(beginproblem());

Context("Numeric");

$n = random(4,7);

my @k = shuffle($n-1);
$k1 = $k[0]+1;
$k2 = $k[1]+1;
$k3 = random(1,3);

$count1 = Formula("2^$n");
$count2 = Real(C($n,$k1));
$count3 = Real(C($n,$k2));
$count4 = Real(1);
for (my $i=1;$i<=$k3;$i++) {
  $count4 = $count4 + Real(C($n,$i));
}


Context()->texStrings;

BEGIN_TEXT

How many possible outcomes are there from tossing 
$n (ordered) coins?
$BR
\{ $count1->ans_rule(); \}
$PAR
How many ways can tossing $n coins give
$BBOLD exactly $EBOLD $k1 heads?
$BR
\{ $count2->ans_rule(); \}
$PAR
How many ways can tossing $n coins give 
$BBOLD exactly $EBOLD $k2 heads?
$BR
\{ $count3->ans_rule(); \}
$PAR
How many ways can tossing $n coins give
\(\le $k3\) heads?
$BR
\{ $count4->ans_rule(); \}



END_TEXT
Context()->normalStrings;

ANS( $count1->cmp() );
ANS( $count2->cmp() );
ANS( $count3->cmp() );
ANS( $count4->cmp() );


ENDDOCUMENT();        # This should be the last executable line in the problem.
       

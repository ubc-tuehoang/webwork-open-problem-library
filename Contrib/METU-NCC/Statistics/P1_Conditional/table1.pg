## BEGIN_DESCRIPTION
## Creates table of random counts.  
## Randomly removes four entries from table. 
## Randomly chooses rows and columns to ask for probabilities.
## END_DESCRIPTION

##############################################
## DBsubject(Probability)
## DBchapter(Sample Space)
## DBsection(Conditional probability -- direct)
## Institution(METU-NCC)
## Author(Benjamin Walter)
## Level(2)
## Language(en)
## MO(1)
## Static(0)
## KEYWORDS('Bayes', 'False Positive', 'Test')
###############################################



DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"PGcourse.pl",
"MathObjects.pl",
"niceTables.pl",
"contextFraction.pl"
);

TEXT(beginproblem());

Context("Numeric");

@count = ([Real(random(1,10)),Real(random(1,10)),0],
          [Real(random(1,10)),Real(random(1,10)),0],
          [0,0,0]);
$count[0][2] = $count[0][0] + $count[0][1];
$count[2][0] = $count[0][0] + $count[1][0];
$count[2][1] = $count[0][1] + $count[1][1];
$count[1][2] = $count[1][0] + $count[1][1];
$count[2][2] = $count[2][0] + $count[2][1];

Context("Fraction-NoDecimals");

@Q = ();  @P = ();  @C = ("A","B");  @R = ("X","Y");
$i = random(0,1);  $j = random(0,1);
 $Q[0] = $C[$j];
 $A[0] = Fraction($count[2][$j] , $count[2][2]);
 $Q[1] = $R[$i];
 $A[1] = Fraction($count[$i][2] , $count[2][2]);
$i = random(0,1); $j = random(0,1);
 $Q[2] = $C[$j]." \cap ".$R[$i]; 
 $A[2] = Fraction($count[$i][$j] , $count[2][2]);
$i = random(0,1); $j = random(0,1);
 $Q[3] = $C[$j]." \cup ".$R[$i]; 
 $A[3] = Fraction($count[$i][2] + $count[2][$j] - $count[$i][$j] , $count[2][2]);
$i = random(0,1); $j = random(0,1);
 $Q[4] = $C[$j]."\ |\ ".$R[$i]; 
 $A[4] = Fraction($count[$i][$j] , $count[$i][2]);
$i = random(0,1); $j = random(0,1);
 $Q[5] = $R[$i]."\ |\ ".$C[$j]; 
 $A[5] = Fraction($count[$i][$j] , $count[2][$j]);


Context("Numeric");

@cut = (0,0,0,0);

do {
 @pick = shuffle(9); 
 @pick = PGsort(sub{$_[0] < $_[1]},  ($pick[0],$pick[1],$pick[2],$pick[3]));
} while (($pick[0]%3 == $pick[2]%3) &&
         ($pick[1]%3 == $pick[3]%3) &&
         (floor($pick[0]/3) == floor($pick[1]/3)) &&
         (floor($pick[2]/3) == floor($pick[3]/3))); 

for ($i=0;$i<=3;$i++) {
   $cut[$i] = $count[floor($pick[$i]/3)][$pick[$i]%3];
   $count[floor($pick[$i]/3)][$pick[$i]%3] = $count[floor($pick[$i]/3)][$pick[$i]%3]->ans_rule(1); 
}

$bl = "border-left: 3px double;";
$bt = "border-top:  3px double; width: 50px;";

Context()->texStrings;
BEGIN_TEXT

Complete the table of ${BBOLD}counts${EBOLD} below.
(Assume that \(\lbrace $C[0],$C[1]\rbrace\) and \(\lbrace $R[0],$R[1]\rbrace\) 
are two partitions of the sample space.)
$PAR

\{
DataTable(
  [
    [['\(\#\)', headerrow => 1],'\($C[0]\)','\($C[1]\)',['Total',cellcss=>$bl]],
    ['\($R[0]\)',$count[0][0], $count[0][1], [$count[0][2],cellcss=>$bl]],
    ['\($R[1]\)',$count[1][0], $count[1][1], [$count[1][2],cellcss=>$bl]],
    [['${BBOLD}Total${EBOLD}',cellcss=>$bt], 
     [$count[2][0] ,cellcss=>$bt], [$count[2][1],cellcss=>$bt], [$count[2][2],cellcss=>$bl.$bt]]
  ], 
  align => '| r | c | c || c |',
  midrules => 1
);
\}

$PAR
Use the table of counts to compute the following probabilities (enter you answers as fractions).
$PAR

\{
LayoutTable(
[['\(\bullet\quad \mathrm{P}($Q[0]) = \)' . $A[0]->ans_rule(5),
  '\(\bullet\quad \mathrm{P}($Q[1]) = \)' . $A[1]->ans_rule(5)],
 ['\(\bullet\quad \mathrm{P}($Q[2]) = \)' . $A[2]->ans_rule(5),
  '\(\bullet\quad \mathrm{P}($Q[3]) = \)' . $A[3]->ans_rule(5)],
 ['\(\bullet\quad \mathrm{P}($Q[4]) = \)' . $A[4]->ans_rule(5),
  '\(\bullet\quad \mathrm{P}($Q[5]) = \)' . $A[5]->ans_rule(5)]],
align => 'll',
);
\}


END_TEXT
Context()->normalStrings;

ANS($cut[0]->cmp());
ANS($cut[1]->cmp());
ANS($cut[2]->cmp());
ANS($cut[3]->cmp());
ANS($A[0]->cmp()  );
ANS($A[1]->cmp()  );
ANS($A[2]->cmp()  );
ANS($A[3]->cmp()  );
ANS($A[4]->cmp()  );
ANS($A[5]->cmp()  );




ENDDOCUMENT();        # This should be the last executable line in the problem.
       

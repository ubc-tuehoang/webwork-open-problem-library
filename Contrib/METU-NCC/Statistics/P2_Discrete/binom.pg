## BEGIN_DESCRIPTION
## Computing probabilities with binomial distribution in R
## END_DESCRIPTION
##
##############################################
## DBsubject(Probability)
## DBchapter(Discrete distributions)
## DBsection(Binomial)
## Institution(METU-NCC)
## Author(Benjamin Walter)
## Level(1)
## Language(en)
## MO(1)
## Static(0)
## KEYWORDS('binomial distribution', 'R')
###############################################

DOCUMENT();

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "contextArbitraryString.pl",
   "RserveClient.pl",
   "PGcourse.pl",
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

COMMENT('Requires integrated R server (Rserve.pm)');

#  Setup
Context("Numeric");

$context = Context("Numeric");
$context->strings->{patterns}{'^.*$'} = [-20,'str'];
$context->update;


$Rframe = MODES(
 HTML=>
  "<iframe width='90%' height='400' src='https://rdrr.io/snippets/embed/?code=' frameborder='0'></iframe>", 
 TeX=>
  "Embedded R window."
);
$Rfram = MODES(
 HTML=>
  "<iframe width='90%' height='200' src='http://www.compileonline.com/execute_r_online.php' frameborder='0'></iframe>", 
 TeX=>
  "Embedded R window."
);


$prob = random(30,80,2);
$p = $prob/100;
$tot  = random(25,30,1);

$min = Real(rserve_eval("qbinom(.05,$tot,$p)"));
$max = Real(rserve_eval("qbinom(.95,$tot,$p)"));

$q1   = random($min,$max,1);
$q2   = random($min,$max,1);
$q3   = random($min,$max,1);
$q4   = random($min,floor(($min+$max)/2-1),1);
$q5   = random(floor(($min+$max)/2+1),$max,1);


$q2m = $q2-1;
$q4m = $q4-1;


Context("ArbitraryString");


$A0 = String("dbinom($q1,$tot,$p)");
$A1 = String("pbinom($q2m,$tot,$p)");
$A2 = String("1 - pbinom($q3,$tot,$p)");
$A3 = String("pbinom($q5,$tot,$p) - pbinom($q4m,$tot,$p)");

#  Text
Context()->texStrings;
BEGIN_TEXT
$BITALIC
For the problems below, you may either enter a numeric answer
(accurate to 3 significant digits), or the R code
which generates the answer. $BR $SPACE (Your answer will be checked by R.)
$EITALIC

$PAR
$HR
$PAR


A student attends \($prob \%\) of his lectures each semester.  
Compute the following probabilities for
a course which consists of \($tot\) lectures during the semester. 
$PAR
The probability that the student attends ${BBOLD}exactly${EBOLD} $q1 lectures.
\{$A0->ans_rule(30);\}

$PAR
The probability that the student attends ${BBOLD}less than${EBOLD} $q2 lectures.
\{$A1->ans_rule(30);\}

$PAR
The probability that the student attends ${BBOLD}more than${EBOLD} $q3 lectures.
\{$A2->ans_rule(30);\}

$PAR
The probability that the student attends ${BBOLD}between${EBOLD} $q4 and $q5 (inclusive) lectures.
\{$A3->ans_rule(30);\}

$PAR
$HR
$PAR
You may use the embedded R window below to check your code and perform computations.$BR
${BCENTER}
$Rframe
${ECENTER}
$PAR
Recall that if \(X\sim \mathrm{Binomial}(n,p)\) then the pdf and cdf of \(X\) are 
computed in R by the commands:
$BR
$SPACE\(f(x) \  =\!= \ \mathrm{P}(X =  x) \ =\!= \  \) 
    ${BTT}dbinom(${ETT}x, n, p${BTT})${ETT}
$BR
\(F(x) \ =\!= \ \mathrm{P}(X\le x) \ =\!= \ \) 
    ${BTT}pbinom(${ETT}x, n, p${BTT})${ETT}
$PAR
For example 
$BR $SPACE $SPACE $SPACE ${BTT}dbinom(4, 10, 1/2)${ETT} $SPACE $SPACE $SPACE 
computes the probability that flipping a coin 10 times will result in ${BBOLD}exactly${EBOLD} 4 Heads.
$BR $SPACE $SPACE $SPACE ${BTT}pbinom(7, 10, 1/2)${ETT} $SPACE $SPACE $SPACE 
computes the probability that flipping a coin 10 times will result in 7 Heads ${BBOLD}or less${EBOLD}.
$BR $SPACE ${BTT}1 - pbinom(3, 10, 1/2)${ETT} $SPACE $SPACE 
computes the probability that flipping a coin 10 times will result in 4 Heads ${BBOLD}or more${EBOLD}.


END_TEXT

Context()->normalStrings;

#  Answers

$Rchecker = sub {
  my ($c, $s, $ansHash) = @_;
  if (($s->value =~ tr/(//) != ($s->value =~ tr/)//)) {
    Value->Error("Missing parenthesis!");
  }
  my @s_ans = rserve_eval($s->value);
  if (String($s_ans[0]) == String("NaN")) {
    Value->Error("R code does not return a number!");
  }
  $s_ans = Real($s_ans[0]);
  my $c_ans = Real(rserve_eval($c->value));
  if (abs($c_ans) > .001) {
    return ( (abs($c_ans - $s_ans) < .005*abs($c_ans)) ? 1 : 0);
  } else {
    return ( (abs($c_ans - $s_ans) < .001) ? 1 : 0);
  } 
};

ANS($A0->cmp(checker=>$Rchecker));
ANS($A1->cmp(checker=>$Rchecker));
ANS($A2->cmp(checker=>$Rchecker));
ANS($A3->cmp(checker=>$Rchecker));




ENDDOCUMENT();

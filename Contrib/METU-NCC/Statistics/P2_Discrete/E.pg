## BEGIN_DESCRIPTION
## Compute expected value and variance given pmf 
## END_DESCRIPTION
##
##############################################
## DBsubject(Probability)
## DBchapter(Random variables)
## DBsection(Expectation)
## Institution(METU-NCC)
## Author(Benjamin Walter)
## Level(2)
## Language(en)
## MO(1)
## Static(0)
## KEYWORDS('expected value', 'pmf', 'discrete distribution')
###############################################



DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"PGcourse.pl",
"MathObjects.pl",
"niceTables.pl",
"scaffold.pl",
"contextFraction.pl"
);

TEXT(beginproblem());

Context("Fraction-NoDecimals");

@prob = ();

##do {
 @prob = shuffle(9); 
 @prob = PGsort(sub{$_[0] < $_[1]},  ($prob[0],$prob[1],$prob[2]));
 @prob = (Fraction($prob[0]+1,10),
          Fraction($prob[1]-$prob[0],10),
          Fraction($prob[2]-$prob[1],10),
          Fraction(9-$prob[2],10));

@X = (-4,-3,-2,-1,1,2,3,4)[shuffle(8)]; 
@X = PGsort(sub{$_[0] < $_[1]},  (0,$X[0],$X[1],$X[2]));

$a = random(2,5);
$b = random(1,5);

$mu_X   = $X[0]*$prob[0] + 
          $X[1]*$prob[1] + 
          $X[2]*$prob[2] +
          $X[3]*$prob[3];

$br = "border-right: 3px double;";

$gap = random(0,3);
$missingno = $prob[$gap];

Context()->texStrings;

for (my $i=0; $i<4; $i++) {
  $prob[$i] = "\($prob[$i]\)";
}
$prob[$gap] = $missingno->ans_rule(4);

BEGIN_TEXT
The random variable \(X\) takes the values 
\(\lbrace $X[0], $X[1], $X[2], $X[3]\rbrace\) with
the pmf given below:
$BR
\{
DataTable(
  [
    [['\(x\)',cellcss=>$br],
        '\($X[0]\)',
        '\($X[1]\)',
        '\($X[2]\)',
        '\($X[3]\)'],
    [['\(f(x)\)',cellcss=>$br],
        $prob[0],
        $prob[1],
        $prob[2],
        $prob[3]]
  ], 
  align => '| c | c | c | c | c |',
  midrules => 1
);
\}
$PAR
Use properties of probabilities to compute the missing 
value in the table above.
$BR 
Then compute the expected value of X.
$PAR

\(\qquad \mathrm{E}\bigl[X\bigr] = \)  
  \{ $mu_X->ans_rule(25);   \}


END_TEXT
Context()->normalStrings;

ANS($missingno->cmp() );

ANS($mu_X->cmp());



ENDDOCUMENT();        # This should be the last executable line in the problem.
       

## BEGIN_DESCRIPTION
## Hypergeometric probability computations using R
## END_DESCRIPTION
##
##############################################
## DBsubject(Probability)
## DBchapter(Discrete distributions)
## DBsection(Hypergeometric)
## Institution(METU-NCC)
## Author(Benjamin Walter)
## Level(1)
## Language(en)
## KEYWORDS('hypergeometric distribution', 'R')
###############################################

DOCUMENT();

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "contextArbitraryString.pl",
   "RserveClient.pl",
   "PGcourse.pl",
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

COMMENT('Requires integrated R server (Rserve.pm)');

#  Setup
Context("Numeric");

$context = Context("Numeric");
$context->strings->{patterns}{'^.*$'} = [-20,'str'];
$context->update;


$Rframe = MODES(
 HTML=>
  "<iframe width='90%' height='400' src='https://rdrr.io/snippets/embed/?code=' frameborder='0'></iframe>", 
 TeX=>
  "Embedded R window."
);
$Rfram = MODES(
 HTML=>
  "<iframe width='90%' height='200' src='http://www.compileonline.com/execute_r_online.php' frameborder='0'></iframe>", 
 TeX=>
  "Embedded R window."
);

$tot = random(25,35,1);
$att = random(floor($tot/2),$tot-5,1);
$miss = $tot - $att;
$k = random(floor($tot/3)-1,floor($tot/3)+5,1);
my $mu = floor($att/$tot*$k);
#do {
  $q1 = random(max(3,$mu-2),min($mu+2,$k-2),1);
  $q2 = random(max(3,$mu-2),min($mu+2,$k-2),1);
  $q3 = random(max(3,$mu-2),min($mu+2,$k-2),1);
#} until (($q1 != $q2) && ($q2 != $q3) && ($q1 != $q3));

@i = (random(0,1),random(0,1));
@Q = (["less than or equal to","less than"],
      ["greater than", "greater than or equal to"]);

my @setup = ("attends $att and misses $miss",
             "attends $att out of $tot total",
             "misses $miss out of $tot toal");
$setup = $setup[random(0,2,1)];

Context("ArbitraryString");

my $q2m = $q2-$i[0];
my $q3m = $q3-$i[1];

@A = (String("dhyper($q1,$att,$miss,$k)"),
      String("phyper($q2m,$att,$miss,$k)"),
      String("1 - phyper($q3m,$att,$miss,$k)"));



#  Text
Context()->texStrings;
BEGIN_TEXT

$SPACE $SPACE 
${BITALIC} (For the questions below, you can either enter the answer, or else the 
R command which generates the answer.)${EITALIC}
$PAR

A student $setup statistics lectures one semester.  
Compute the following probabilities for the student's attendance for
the $k lectures before the first midterm. 
$PAR
The probability that the student attends ${BBOLD}exactly${EBOLD} $q1 lectures.
\{$A[0]->ans_rule(30);\}

$PAR
The probability that the student attends ${BBOLD}$Q[0][$i[0]]${EBOLD} $q2 lectures.
\{$A[1]->ans_rule(30);\}

$PAR
The probability that the student attends ${BBOLD}$Q[1][$i[1]]${EBOLD} $q3 lectures.
\{$A[2]->ans_rule(30);\}
$PAR
$HR
$PAR


$SPACE $SPACE ${BITALIC}
(For a review of the order and values of parameters as entered into R see
  \{ htmlLink( "http://webwork.ncc.metu.edu.tr/walter/discrete_distributions.pdf", "this file", "TARGET='_blank'" ) \}.)
${EITALIC}

$PAR

You may use the embedded R window below to check your code and perform computations.$BR
${BCENTER}
$Rframe
${ECENTER}

END_TEXT

Context()->normalStrings;

#  Answers


$Rchecker = sub {
  my ($c, $s, $ansHash) = @_;
  if (($s->value =~ tr/(//) != ($s->value =~ tr/)//)) {
    Value->Error("Missing parenthesis!");
  } 
  my @s_ans = rserve_eval($s->value);
  if (String($s_ans[0]) == String("NaN")) {
    Value->Error("R code does not return a number!");
  }
  my $c_ans = Real(rserve_eval($c->value));
  $s_ans = Real($s_ans[0]);
  if (abs($c_ans) > .001) {
    return ( (abs($c_ans - $s_ans) < .005*abs($c_ans)) ? 1 : 0);
  } else {
    return ( (abs($c_ans - $s_ans) < .001) ? 1 : 0);
  }
};

ANS($A[0]->cmp(checker=>$Rchecker));
ANS($A[1]->cmp(checker=>$Rchecker));
ANS($A[2]->cmp(checker=>$Rchecker));




ENDDOCUMENT();

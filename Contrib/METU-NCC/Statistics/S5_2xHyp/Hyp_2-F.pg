## BEGIN_DESCRIPTION
## Hypothesis test: 2-sample F-test
## END_DESCRIPTION
##
##############################################
## DBsubject(Statistics)
## DBchapter(Hypothesis tests)
## DBsection(Two sample variances)
## Institution(METU-NCC)
## Author(Benjamin Walter)
## Level(3)
## Language(en)
## MO(1)
## Static(0)
## KEYWORDS('hypothesis test', '2-sample', 'F-test', 'R')
###############################################

DOCUMENT();

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "PGchoicemacros.pl",
   "PGcourse.pl",
   "MathObjects.pl",
   "RserveClient.pl",
   "parserPopUp.pl",
   "contextArbitraryString.pl",
   "niceTables.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

COMMENT('Requires integrated R server (Rserve.pm)');

$Rframe = MODES(
 HTML=>
  "<iframe width='90%' height='400' src='https://rdrr.io/snippets/embed/?code=' frameborder='0'></iframe>", 
 TeX=>
  "Embedded R window."
);


#  Setup
Context("Numeric");


$n_x  = random(4,30,1);
do { $n_y = random(4,30,1); } until (abs($n_x - $n_y) > 5);

$mu_x = random(30,50,.1);
$mu_y = $mu_x + random(-1,1,2)*random(3,10,.1);

$s_y  = Real(random( 6,10,.1));

$a    = ((random(0,1)==0) ? random(.004,.04,.002) 
                          : random(.96,.996,.002));
$s_x  = Real(rserve_eval("round(sqrt($s_y^2*qf($a,$n_x-1,$n_y-1)),1)"));

Context("ArbitraryString");

$f    = String("($s_x^2) / ($s_y^2)");

$p    = (($a < .5) ? String(  "pf($f,$n_x-1,$n_y-1)") 
                   : String("1-pf($f,$n_x-1,$n_y-1)"));


Context("Numeric");

$ineq = (($s_x > $s_y) ? ">" : "<" );

$test_pop = PopUp(["??",">",">=","<","<="],$ineq);


#  Text
Context()->texStrings;
BEGIN_TEXT
$BITALIC
For the problems below, you may either enter a numeric answer
(accurate to 3 significant digits), or the R code
which generates the answer. $BR $SPACE (Your answer will be checked by R.)
$EITALIC


$PAR $HR $PAR

An experiment samples two independent populations \(X\) and \(Y\). 
$BR
\(\quad \bullet \ X\) is sampled \($n_x\) times 
     yielding sample mean \(\bar x = $mu_x\) and std dev \(s_x = $s_x\). $BR
\(\quad \bullet \ Y\) is sampled \($n_y\) times 
     yielding sample mean \(\bar y = $mu_y\) and std dev \(s_y = $s_y\). $BR
You would like to use a pooled variance \(t\)-test for \(\mu_X-\mu_Y\).
Before doing this you test the \(p\)-value for \(\sigma_X=\sigma_Y\).
$BR
Do a one-tailed, two-sample 
\(F\)-test against 
$BR \(\qquad \mathrm{H}_0:\ \ \sigma_X = \sigma_Y \).


$PAR
The alternative hypothesis for the one-tailed test in this case is 
$BR
\(\qquad \text{H}_\text{A}:\ \ \ \sigma_X \) 
      \{ $test_pop->menu() \} \( \sigma_Y \).

$PAR
The test statistic has distribution 
$BR
\(\qquad F\sim F\Bigl(\) \{ ans_rule(5) \}
                 \( , \) \{ ans_rule(5) \} \(\Bigr)\)

$PAR
In this case, the test statistic has value
$BR
\(\qquad f = \) \{ $f->ans_rule(30) \}

$PAR
This has \(p\)-value
$BR
\(\qquad p = \) \{ $p->ans_rule(40) \}


$PAR
$HR
$PAR
You may use the embedded R window below to check your code and perform computations.$BR
${BCENTER}
$Rframe
${ECENTER}


END_TEXT

Context()->normalStrings;

#  Answers

$Rchecker = sub {
  my ($c, $s, $ansHash) = @_;
  if (($s->value =~ tr/(//) != ($s->value =~ tr/)//)) {
    Value->Error("Missing parenthesis!");
  } 
  my @s_ans = rserve_eval($s->value);
  my $c_ans = Real(rserve_eval($c->value));
  if (String($s_ans[0]) == String("NaN")) {
    Value->Error("Error in R-code!");
  }
  $s_ans = Real($s_ans[0]);
  if (abs($c_ans) > .00001) {
    return ( (abs($c_ans - $s_ans) < .005*abs($c_ans)) ? 1 : 0);
  } else {
    return ( (abs($c_ans - $s_ans) < .000001) ? 1 : 0);
  }
};

ANS($test_pop->cmp());

ANS(Real($n_x-1)->cmp());   
ANS(Real($n_y-1)->cmp());   

ANS($f->cmp(checker=>$Rchecker));

ANS($p->cmp(checker=>$Rchecker));



ENDDOCUMENT();

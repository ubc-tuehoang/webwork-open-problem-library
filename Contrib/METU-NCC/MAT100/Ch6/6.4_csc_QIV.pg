## BEGIN_DESCRIPTION
##  Find arccos(csc x) in QIV
## END_DESCRIPTION
##
##############################################
## DBsubject(Trigonometry)
## DBchapter(Trigonometric functions)
## DBsection(Trigonometric functions of non-special angles)
## Institution(METU-NCC)
## Author(Benjamin Walter)
## MO(1)
## Static(0)
## Level(2)
## Language(en)
###############################################


DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "PGcourse.pl",
  "MathObjects.pl",
  "contextFraction.pl"
);

sub pick {
  my ($k, @in) = @_;
  my @out = ();
  while (@out < $k) { push( @out, splice(@in, random(0,$#in), 1) ); }
  @out; 
};

TEXT(beginproblem());

Context("Numeric");
Context()->variables->are(x=>"Real");
Context()->flags->set(
   reduceConstants => 0,
   reduceConstantFunctions => 0,
);

do {
 ($a,$b) = PGsort ( sub {$_[0] < $_[1]} , pick(2, (2..7)) );
} until ($b % $a != 0);
my $c = $b*$b - $a*$a;

$ans[0] = Formula("sqrt($c)/$b");

$ans[1] = Formula("sqrt(1-1/x^2)");
$ans[1]->{test_points} = [[-4],[-3],[-2],[-1]];

$ans[2] = Formula("sqrt(1-1/x^2)");
$ans[2]->{test_points} = [[-4],[-3],[-2],[-1],[1],[2],[3],[4]];


Context("Fraction");

$frac = Fraction(-$b,$a); 


Context()->texStrings;

BEGIN_TEXT
Solve the following linked questions.$PAR


$BBOLD (A) $EBOLD $SPACE $SPACE
If \(\csc(\theta) = $frac\) and \(\theta\) is in \(\mathrm{QIV}\)
then find \(\cos(\theta)\).
$PAR 
\(\quad \cos(\theta) = \) \{ ans_rule(10) \}

$BR $PAR

$BBOLD (B) $EBOLD $SPACE $SPACE
If \(\csc(\theta) = x\) and \(\theta\) is in \(\mathrm{QIV}\)
then find \(\cos(\theta)\).
$PAR 
\(\quad \cos(\theta) = \) \{ ans_rule(15) \}

$BR $PAR

$BBOLD (C) $EBOLD $SPACE $SPACE
Give a formula for  \(\cos \bigl(\csc^{-1} (x)\bigr)\) valid for
\(\csc^{-1}\) in \(\mathrm{QIV}\) and \(\mathrm{QI}\).
$PAR
\(\quad  \cos \bigl(\csc^{-1} (x)\bigr) = \) \{ ans_rule(15) \}



END_TEXT


Context()->normalStrings;

$showPartialCorrectAnswers = 1;

ANS( $ans[0]->cmp() );
ANS( $ans[1]->cmp(checker=>sub {
  my ($correct,$student,$ansHash) = @_;
  $correct->{limits} = [-4,-1];
  $student->{limits} = [-4,-1];
  
  if ($student == -$correct) {
    Value->Error("This is incorrect when \(x\) is negative (in QIV)");
  }
  return ( ($student == $correct) ? 1 : 0);
}) );
ANS( $ans[2]->cmp() );


ENDDOCUMENT();        # This should be the last executable line in the problem.


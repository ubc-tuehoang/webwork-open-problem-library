# DESCRIPTION
# Inquiry Problem from _Essentials of Discrete Mathematics_ by David J. Hunter
# ENDDESCRIPTION

## DBsubject('Graph Theory')
## DBchapter('Walks')
## DBsection('Eulerian')
## Level(6)
## KEYWORDS('graph', 'circuit', 'path')
## TitleText1('Essentials of Discrete Mathematics')
## EditionText1('2017')
## AuthorText1('David J. Hunter')
## Section1('2.1')
## Problem1('Inquiry Problem 2.2')
## Author('David Hunter')
## Institution('Westmont College')
## RESOURCES('Central_and_Eastern_Europe_Map.png')

DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGessaymacros.pl",
  "PGcourse.pl"
);

TEXT(beginproblem());

Context("Numeric");
$num_bords = Compute("9");

BEGIN_TEXT
Consider the following map of Eastern Europe.  $PAR

\{ image("Central_and_Eastern_Europe_Map.png", width=>574, height=>767,
tex_size=>700, extra_html_tags=>'alt="Map of Eastern Europe (public domain)"' ) \} 

$PAR

Is it possible to plan a round trip (on land) through the countries of Latvia,
Lithuania, Belarus, Poland, Slovakia, and Ukraine that visits each country
exactly once? Is there more than one way to plan such a
trip?

$PAR
\{essay_box(4,60)\}
$PAR

How many pairs of these countries share a border? $BR
Number of border crossings = \{ ans_rule(10) \} $PAR

Is it possible to plan a trip through all these countries that visits each
border crossing exactly once? Find one, or explain why it is impossible.
  
$PAR
\{essay_box(4,60)\}

$PAR
END_TEXT

ANS(essay_cmp());
ANS($num_bords->cmp());
ANS(essay_cmp());

SOLUTION(EV3(<<'END_SOLUTION'));
$PAR SOLUTION $PAR
Answers may vary. A possible round-trip that visits each country exactly once
is: $BR
Latvia -> Lithuania -> Poland -> Slovakia -> Ukraine -> Belarus -> Latvia
$BR
Any other round trip would have to be the same, except for direction and
starting point (Why?). It is impossible to plan a round-trip visiting each of
the nine border crossings exactly once, but a possible one-way trip is: $BR
Lithuania -> Latvia -> Belarus -> Lithuania -> Poland -> Belarus -> Ukraine ->
Poland -> Slovakia -> Ukraine.
END_SOLUTION

ENDDOCUMENT();


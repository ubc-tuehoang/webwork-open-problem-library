##-*- perl -*- ##
# DESCRIPTION
# Preview Activity from _Active Calculus_ by Matthew Boelkins
# ENDDESCRIPTION

## DBsubject('Calculus - single variable')
## DBchapter('Integrals')
## DBsection('Antiderivatives')
## KEYWORDS('integral', 'Antiderivatives')
## TitleText1('Active Calculus')
## EditionText1('2015')
## AuthorText1('Matthew Boelkins')
## Section1('5.3')
## Problem1('Preview Activity 5.3abc')
## Author('Branden Stone')
## Institution('Adelphi University')
## RESOURCES('')

DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGessaymacros.pl",
  "PGcourse.pl"
);

# Uncomment to eliminate partial credit
# install_problem_grader(~~&std_problem_grader);

# 0 does not show correct answers and 1 does show them
$showPartialCorrectAnswers = 1; 


######################################
## Answers to the questions
######################################
Context("Numeric");

Context()->strings->add( 
    "g'(x)" => {caseSensitive => 1}, 
    "h'(x)" => {caseSensitive => 1}, 
    "p'(x)" => {caseSensitive => 1}, 
    "q'(x)" => {caseSensitive => 1}, 
    "r'(x)" => {caseSensitive => 1},
    "M(x)" => {caseSensitive => 1},
    "N(x)" => {caseSensitive => 1},
    "S(x)" => {caseSensitive => 1},
    "V(x)" => {caseSensitive => 1},
    "W(x)" => {caseSensitive => 1},
    "A(x)" => {caseSensitive => 1},
    "B(x)" => {caseSensitive => 1},
    "C(x)" => {caseSensitive => 1}    
); 


$g = Formula("e^(3x)");
$dg = $g->D('x');
$dgName = String( "g'(x)" );

$h = Formula("sin(5x+1)");
$dh = $h->D('x');
$dhName = String( "h'(x)" );

$p = Formula("arctan(2x)");
$dp = $p->D('x');
$dpName = String( "p'(x)" );

$q = Formula("(2-7x)^4");
$dq = $q->D('x');
$dqName = String( "q'(x)" );

$r = Formula("3^(4-11x)");
$dr = $r->D('x');
$drName = String( "r'(x)" );

Context()->variables->add(C => 'Real');

$Mname = String( "M(x)" );
$M = Formula("(1/3)e^(3x)+C");

$Nname = String( "N(x)" );
$N = Formula("(1/5)sin(5x+1)+C");

$Sname = String( "S(x)" );
$S = Formula("(1/2)arctan(2x)+C");

$Vname = String( "V(x)" );
$V = Formula("-(1/28)(2-7x)^4+C");

$Wname = String( "W(x)" );
$W = Formula("-3^(4-11x)/(11*ln 3)+C");

$Aname = String( "A(x)" );
$A = Formula("1/pi*sin(pi*x)+C");

$Bname = String( "B(x)" );
$B = Formula("1/4*1/12*(4x+7)^(12)+C");

$Cname = String( "C(x)" );
$C = Formula("1/2*e^(x^2)+C");

######################################
## Begin Problem
######################################

TEXT(beginproblem());

Context()->texStrings;
BEGIN_TEXT
$PAR
Recall the Chain Rule and how it can be applied to 
find the derivative of a composite function.  In particular, if \(u\) is a differentiable 
function of \(x\), and \(f\) is a differentiable function of \(u(x)\), then
\[ \frac{d}{dx} \left[ f(u(x))  \right] = f'(u(x)) \cdot u'(x). \]
In words, we say that the derivative of a composite function \(c(x) = f(u(x))\), 
where \(f\) is considered the "outer" function and \(u\) the "inner" function, is 
"the derivative of the outer function, evaluated at the inner function, times the 
derivative of the inner function."  
$PAR
$BBOLD (a) $EBOLD For each of the following functions, use the Chain Rule to find the function's derivative.  
Notice the label of each derivative respects the functions name (e.g., the derivative of 
\(g(x)\) should be labeled \(g'(x)\)). 
$PAR
(i) If  \(g(x) = e^{3x}\), then \(g'(x)=\) \{ ans_rule \}. \{#'# syntax color issue\}
$PAR
(ii) If \(h(x) = \sin(5x+1)\), then \{ ans_rule(5) \} \(=\) \{ ans_rule \}.
$PAR
(iii) If \(p(x) = \arctan(2x)\), then \{ ans_rule(5) \} \(=\) \{ ans_rule \}.
$PAR
(iv) If \(q(x) = (2-7x)^4\), then \{ ans_rule(5) \} \(=\) \{ ans_rule \}.
$PAR
(v) If \(r(x) = 3^{4-11x}\), then \{ ans_rule(5) \} \(=\) \{ ans_rule \}.
$PAR
$BBOLD (b) $EBOLD For each of the following functions, use your work in (a) to help you determine 
the general antiderivative of the function. (Recall that the general antiderivative of a function 
includes ``\(+C\)'' to reflect the entire family of functions that share the same derivative.) 
Notice the label of each antiderivative respects the name (e.g., the antiderivative of \(m\) 
should be called \(M\)).  In addition, check your work by computing the derivative of 
each proposed antiderivative.
$PAR
(i) If \(m(x) = e^{3x}\), then \(M(x)=\) \{ ans_rule \}.
$PAR
(ii) If \(n(x) = \cos(5x+1)\), then \{ ans_rule(5) \} \(=\) \{ ans_rule \}.
$PAR
(iii) If \(\displaystyle s(x) = \frac{1}{1+4x^2}\), then \{ ans_rule(5) \} \(=\) \{ ans_rule \}.
$PAR
(iv) If \(v(x) = (2-7x)^3\), then \{ ans_rule(5) \} \(=\) \{ ans_rule \}.
$PAR
(v) If \(w(x) = 3^{4-11x}\), then \{ ans_rule(5) \} \(=\) \{ ans_rule \}.
$PAR
$BBOLD (c) $EBOLD Based on your experience in parts (a) and (b), conjecture an antiderivative for each 
of the following functions.  Test your conjectures by computing the derivative of each 
proposed antiderivative.
$PAR
(i) If \(a(x) = \cos(\pi x)\), then \{ ans_rule(5) \} \(=\) \{ ans_rule \}. 
$PAR
(ii) If \(b(x) = (4x+7)^{11}\), then \{ ans_rule(5) \} \(=\) \{ ans_rule \}.
$PAR
(iii) If \(c(x) = xe^{x^2}\), then \{ ans_rule(5) \} \(=\) \{ ans_rule \}.
$PAR

END_TEXT

######################################
## Compute Solutions
######################################

Context()->normalStrings;

# Answers to (a)
# ANS( $dgName->cmp() );
ANS( Compute($dg) -> cmp );

ANS( $dhName->cmp() );
ANS( Compute($dh) -> cmp );

ANS( $dpName->cmp() );
ANS( Compute($dp) -> cmp );

ANS( $dqName->cmp() );
ANS( Compute($dq) -> cmp );

ANS( $drName->cmp() );
ANS( Compute($dr) -> cmp );

# Answers to (b)
# ANS( $Mname->cmp() );
ANS( Compute($M) -> cmp );

ANS( $Nname->cmp() );
ANS( Compute($N) -> cmp );

ANS( $Sname->cmp() );
ANS( Compute($S) -> cmp );

ANS( $Vname->cmp() );
ANS( Compute($V) -> cmp );

ANS( $Wname->cmp() );
ANS( Compute($W) -> cmp );

# Answers to (c) 

# Note to Instructor:
# To prevent students from neglecting to check their own 
# conjectures, essays have been placed for these last 
# three problems. If you wish to have WeBWorK check instead, 
# comment out 'ANS (essay_cmp() );' and uncomment the
# line 'ANS( Compute($A) -> cmp );'.

ANS( $Aname->cmp() );
# ANS( Compute($A) -> cmp );
ANS (essay_cmp() );

ANS( $Bname->cmp() );
# ANS( Compute($B) -> cmp );
ANS (essay_cmp() );

ANS( $Cname->cmp() );
# ANS( Compute($C) -> cmp );
ANS (essay_cmp() );






ENDDOCUMENT();



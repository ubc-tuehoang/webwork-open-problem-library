# DESCRIPTION
## DBsubject(Statistics)
## DBchapter(Exploratory data analysis/descriptive statistics)
## DBsection(Graphical representations)
## Date(2020/06/21)
## Institution(British Columbia Institute of Technology)
## Author(Stefan Lukits)
## KEYWORDS('Statistics')
## supported by the BCcampus Open Homework Systems Project Grant

DOCUMENT();
## Initializations:
loadMacros(
  "PGstandard.pl",
  "PGchoicemacros.pl",
  "parserRadioButtons.pl",
  "MathObjects.pl",
  "parserMultiAnswer.pl",
  "RserveClient.pl",
  "answerHints.pl",
  "PGcourse.pl",
  "niceTables.pl"
);

#########################################################
## Setup: this is where we use Perl and PG objects

### Random number generator seed based on student's login. No need to change.
Context("Numeric");
# warn("Student name: $studentName, login: $studentLogin, id: $studentID");
my $hash = crypt($studentLogin, 'a1');
# warn("crypt: $hash");
@nums = (0..9,'a'..'z','A'..'Z');
my %nums = map { $nums[$_] => $_ } 0..$#nums;
my $seed = 0;
$seed = $seed * 62 + $nums{$_} foreach split(//, substr($hash, -5, 5));
# warn("seed: " . $seed);

### Call R server
rserve_eval("set.seed($seed)"); 

@tq=rserve_eval("
rtq<-rnorm(15,26,5);
rtq<-append(rtq,runif(1,50,65));
rtq<-round(rtq,2);
");

@mms1=rserve_eval("
rmms1<-c(mean(rtq),median(rtq),sd(rtq));
");

@rt=rserve_eval("
rrt<-rnorm(15,31,7);
rrt<-round(rrt,2);
");

@mms2=rserve_eval("
rmms2<-c(mean(rrt),median(rrt),sd(rrt));
");

@quartiles1=rserve_eval("
rquar1<-quantile(rtq,prob=c(0.25,0.5,0.75));
");

@quartiles2=rserve_eval("
rquar2<-quantile(rrt,prob=c(0.25,0.5,0.75));
");

$iqr1=sprintf("%.2f",$quartiles1[2]-$quartiles1[0]);
$iqr2=sprintf("%.2f",$quartiles2[2]-$quartiles2[0]);
$wah1=sprintf("%.2f",$quartiles1[0]);
$wah2=sprintf("%.2f",$quartiles2[0]);
$wah3=sprintf("%.2f",$quartiles1[2]);
$wah4=sprintf("%.2f",$quartiles2[2]);

for ($i1=0;$i1<=$#tq;++$i1)
{
$stq[$i1]=sprintf("%.2f",$tq[$i1]);
}

for ($i2=0;$i2<=$#rt;++$i2)
{
$srt[$i2]=sprintf("%.2f",$rt[$i2]);
}

@asam=rserve_eval('
alphabet<-c("A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z");
asamr<-sample(alphabet,16);
');
$a1=$asam[0].",".$asam[1].",".$asam[2].",".$asam[3];
$a2=$asam[4].",".$asam[5].",".$asam[6].",".$asam[7];
$a3=$asam[8].",".$asam[9].",".$asam[10].",".$asam[11];
$a4=$asam[12].",".$asam[13].",".$asam[14].",".$asam[15];
@rcodea=rserve_eval("
asama<-toString(c(asamr[[1]],asamr[[2]],asamr[[3]],asamr[[4]]));
asamb<-toString(c(asamr[[5]],asamr[[6]],asamr[[7]],asamr[[8]]));
asamc<-toString(c(asamr[[9]],asamr[[10]],asamr[[11]],asamr[[12]]));
asamd<-toString(c(asamr[[13]],asamr[[14]],asamr[[15]],asamr[[16]]));
");

@oona=rserve_eval('
oonah<-sample(alphabet,16);
');
$b1=$oona[0].",".$oona[1].",".$oona[2].",".$oona[3];
$b2=$oona[4].",".$oona[5].",".$oona[6].",".$oona[7];
$b3=$oona[8].",".$oona[9].",".$oona[10].",".$oona[11];
$b4=$oona[12].",".$oona[13].",".$oona[14].",".$oona[15];
@rcodeb=rserve_eval("
oonaa<-toString(c(oonah[[1]],oonah[[2]],oonah[[3]],oonah[[4]]));
oonab<-toString(c(oonah[[5]],oonah[[6]],oonah[[7]],oonah[[8]]));
oonac<-toString(c(oonah[[9]],oonah[[10]],oonah[[11]],oonah[[12]]));
oonad<-toString(c(oonah[[13]],oonah[[14]],oonah[[15]],oonah[[16]]));
");

$imga=rserve_start_plot('png');
rserve_eval('
ecautohf<-min(c(10,min(rtq)));
zohshohk<-max(c(70,max(rtq)));
yeihahmi<-runif(16,10,70);
oohaighe<-min(c(10,min(yeihahmi)));
gatothah<-max(c(70,max(yeihahmi)));
aediatoo<-rnorm(16,40,12);
oeghaili<-min(c(10,min(aediatoo)));
aequenae<-max(c(70,max(aediatoo)));
ceewieso<-append(runif(8,50,70),rnorm(8,30,10));
eitaefoh<-min(c(10,min(ceewieso)));
uelooyee<-max(c(70,max(ceewieso)));
par(mfrow=c(2,2));
hist(yeihahmi,breaks=c(oohaighe,15,20,25,30,35,40,45,50,55,60,65,gatothah),freq=FALSE,xlab="BMI",main=asamb);
hist(aediatoo,breaks=c(oeghaili,15,20,25,30,35,40,45,50,55,60,65,aequenae),freq=FALSE,xlab="BMI",main=asamc);
hist(rtq,breaks=c(ecautohf,15,20,25,30,35,40,45,50,55,60,65,zohshohk),freq=FALSE,xlab="BMI",main=asama);
hist(ceewieso,breaks=c(eitaefoh,15,20,25,30,35,40,45,50,55,60,65,uelooyee),freq=FALSE,xlab="BMI",main=asamd)
');
$image_patha=rserve_finish_plot($imga);

$imgb=rserve_start_plot('png');
rserve_eval('
yeihahmi<-runif(16,10,70);
aediatoo<-rnorm(16,40,12);
ceewieso<-append(runif(8,50,70),rnorm(8,30,10));
par(mfrow=c(2,2));
boxplot(yeihahmi,main=oonab);
boxplot(rrt,main=oonaa);
boxplot(ceewieso,main=oonac);
boxplot(aediatoo,main=oonad)
');
$image_pathb=rserve_finish_plot($imgb);

$thish=RadioButtons(
[
[
"$a2",
"$a3",
"$a1",
"$a4",
],
],
"$a1",
);

$sheam=RadioButtons(
[
[
"$b2",
"$b1",
"$b3",
"$b4",
],
],
"$b1",
);

#########################################################
## Main Text: where all text goes
## Solution: the test statistic is $tstat and the \(p\)-value is $pvalue.
Context()->texStrings;
BEGIN_TEXT

As part of a larger study of subjects taking statin, the body mass
index, BMI in units \(kg/m^{2}\), of the subjects taking statin and of those
not taking statin was collected and is listed in the following 
table:

\{
DataTable(
  [
    [['BMI (\(kg/m^{2}\)) Statin', headerrow => 1],'BMI (\(kg/m^{2}\)) No Statin'],
   ['\($stq[0]\)','\($srt[0]\)'],
   ['\($stq[1]\)','\($srt[1]\)'],
   ['\($stq[2]\)','\($srt[2]\)'],
   ['\($stq[3]\)','\($srt[3]\)'],
   ['\($stq[4]\)','\($srt[4]\)'],
   ['\($stq[5]\)','\($srt[5]\)'],
   ['\($stq[6]\)','\($srt[6]\)'],
   ['\($stq[7]\)','\($srt[7]\)'],
   ['\($stq[8]\)','\($srt[8]\)'],
   ['\($stq[9]\)','\($srt[9]\)'],
   ['\($stq[10]\)','\($srt[10]\)'],
   ['\($stq[11]\)','\($srt[11]\)'],
   ['\($stq[12]\)','\($srt[12]\)'],
   ['\($stq[13]\)','\($srt[13]\)'],
   ['\($stq[14]\)','\($srt[14]\)'],
   ['\($stq[15]\)','']
  ], 
);
\}
$PAR
(1) Select the relative frequency histogram corresponding to the Statin dataset. (The four capital letters are random labels for reference to the diagrams.) To make these diagrams relative frequency rather than probability density I'd need the lattice or tidyverse package (Stefan's comment).
$PAR
\{ $thish->buttons() \}
$PAR
\{ image($image_patha,width=>300,height=>300) \}
$PAR
(2) Complete the following table:
$PAR
\{
DataTable(
  [
    [['', headerrow => 1],'Statin','No Statin'],
    ['mean',ans_rule(10),ans_rule(10)],
    ['median',ans_rule(10),ans_rule(10)],
    ['standard deviation',ans_rule(10),ans_rule(10)]
  ], 
  align => 'l c',
);
\}

$PAR
(3) Find the first and third quartiles, the interquartile range and determine if there are any outliers. This is a problematic question. There are nine types to calculate quartiles in R Statistics. The default is 7. The way I teach it in MATH 2441 appears to be type 1. Here are the results using type 7.
$PAR
\{
DataTable(
  [
    [['', headerrow => 1],'Statin','No Statin'],
    ['first quartile','\($wah1\)','\($wah2\)'],
    ['third quartile','\($wah3\)','\($wah4\)'],
    ['interquartile range','\($iqr1\)','\($iqr2\)']
  ], 
  align => 'l c c',
);
\}
$PAR
(4) Select the boxplot corresponding to the No Statin dataset. (The four capital letters are random labels for reference to the diagrams.)
$PAR
\{ $sheam->buttons() \}
$PAR
\{ image($image_pathb,width=>300,height=>300) \}

END_TEXT

## Answers evaluation
$showPartialCorrectAnswers = 1;
ANS($thish->cmp());
ANS(num_cmp($mms1[0],
  tolType => 'absolute',
    tolerance => .001,
    ));
ANS(num_cmp($mms2[0],
  tolType => 'absolute',
    tolerance => .001,
    ));
ANS(num_cmp($mms1[1],
  tolType => 'absolute',
    tolerance => .001,
    ));
ANS(num_cmp($mms2[1],
  tolType => 'absolute',
    tolerance => .001,
    ));
ANS(num_cmp($mms1[2],
  tolType => 'absolute',
    tolerance => .001,
    ));
ANS(num_cmp($mms1[2],
  tolType => 'absolute',
    tolerance => .001,
    ));
ANS($sheam->cmp());

#########################################################
COMMENT('This problem requires WeBWorK integration of R statistical software. See the WeBWorK wiki for documentation.');

ENDDOCUMENT();


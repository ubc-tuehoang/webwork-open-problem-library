# DESCRIPTION
# WeBWorK problem written by Stefan Lukits 
# <slukits(at)bcit(dot)ca>
# DBsubject(Statistics)
# DBchapter(Confidence intervals)
# DBsection(One sample mean - t)
# Date(2020/03/25)
# Institution(British Columbia Institute of Technology)
# Author(Stefan Lukits)
# KEYWORDS('Statistics inference')
# Aczel page 209 problem 6-26
# supported by the BCcampus Open Homework Systems Project Grant

DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "PGchoicemacros.pl",
  "MathObjects.pl",
  "RserveClient.pl"
);

### Random number generator seed based on student's login. No need to change.
Context("Numeric");
# warn("Student name: $studentName, login: $studentLogin, id: $studentID");
my $hash = crypt($studentLogin, 'a1');
# warn("crypt: $hash");
@nums = (0..9,'a'..'z','A'..'Z');
my %nums = map { $nums[$_] => $_ } 0..$#nums;
my $seed = 0;
$seed = $seed * 39 + $nums{$_} foreach split(//, substr($hash, -5, 5));
# warn("seed: " . $seed);

### Call R server
rserve_eval("set.seed($seed)"); 

$n=random(31,79,1);
$xbar=random(181,279,1);
$s=random(25,49,1);
@cf=(80,90,95,99);
$i=random(0,3,1);
$c=$cf[$i];
@solution=rserve_eval("
sol<-qt(($c+((100-$c)/2))/100,$n-1)*($s/($n^.5));
");
$sol=$solution[0];
$l=$xbar-$sol;
$u=$xbar+$sol;
$lr=sprintf("%.4f",$l);
$ur=sprintf("%.4f",$u);

TEXT(beginproblem());
Context()->texStrings;
BEGIN_TEXT
For advertising purposes, the Beef Industry Council needs to estimate the average caloric content of three ounce top loin steak cuts. A random sample of $n pieces gives a sample mean of $xbar calories and a sample standard deviation of $s calories. Provide the $c percent confidence interval for the average caloric content of a three ounce cut of top loin steak.
$PAR
The confidence interval is between \{ ans_rule(7) \} and \{ ans_rule(7) \}.
END_TEXT
Context()->normalStrings;
ANS(num_cmp($l));
ANS(num_cmp($u));
Context()->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
$PAR SOLUTION $PAR
The confidence interval is \([$lr,$ur]\).
END_SOLUTION
Context()->normalStrings;
ENDDOCUMENT();

##DESCRIPTION
##   A simple matching problem testing knowledge of
##   notation of intervals
##ENDDESCRIPTION
## DBsubject(Algebra)
## DBchapter(Algebra of real numbers and simplifying expressions)
## DBsection(Inequalities and intervals)
## Institution(Univeristy of Utah)
## Author(Utah ww group)
## MLT(IntervalInequal)
## MLTleader(1)
## Level(2)
## TitleText1('Mathematical Applications')
## AuthorText1('Ronald J. Harshbarger and James J. Reynolds')
## EditionText1('8')
## Section1('.')
## Problem1('')
## TitleText2('College Algebra')
## AuthorText2('Stewart, Redlin, Watson')
## EditionText2('3')
## Section2('1.2')
## Problem2('33 34 32 31')
## KEYWORDS('algebra')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "PGchoicemacros.pl",
  "PGcourse.pl"
);

install_problem_grader(~~&std_problem_grader);
TEXT(beginproblem());
$showPartialCorrectAnswers = 0;

$c =random(1,5,1);
$d =random(6,10,1);

$questStr1 =EV2( " \(x \in ($c,$d) \)");
$ansStr1 = EV2(" \($c \lt x \lt $d \)");
$questStr2 = EV2(" \( x \in [$c,$d) \) ");
$ansStr2 =EV2(" \( $c \leq x \lt $d \)");
$questStr3 = EV2(" \(x \in ($c,$d] \) ");
$ansStr3 = EV2(" \( $c \lt x \leq $d \)");
$questStr4 =EV2(" \( x \in [$c,$d]\) ");
$ansStr4 = EV2(" \($c \leq x \leq $d \)");
$questStr5 = EV2(" \( x \in ($c,\infty)\) ");
$ansStr5 = EV2(" \(x \gt $c  \)");
$questStr6 = EV2(" \( x \in [$c,\infty)\) ");
$ansStr6 = EV2(" \($c \leq x  \)");
$questStr7 = EV2(" \( x \in (-\infty, $c)\) ");
$ansStr7 = EV2(" \( x \lt $c \)");
$questStr8 = EV2(" \( x \in (-\infty, $c] \) ");
$ansStr8 = EV2(" \(x \leq $c  \)");

@questions =( $questStr1,$questStr2,$questStr3,$questStr4,$questStr5,$questStr6,$questStr7,$questStr8);
@answers =( $ansStr1,$ansStr2,$ansStr3,$ansStr4,$ansStr5,$ansStr6,$ansStr7,$ansStr8);

# Now randomize the questions:
@slice = &NchooseK(8,5);
@shuffle = &shuffle(scalar(@slice));
################################################################################
TEXT(EV2(<<EOT));
Match the statements defined below with the letters labeling their
equivalent intervals.	$BR
You must get all of the answers correct to receive credit.
$BR
EOT
TEXT(
&match_questions_list(@questions[@slice]),
&OL(@answers[@slice[@shuffle]])
);

ANS(str_cmp([@ALPHABET[&invert(@shuffle)]]));
     ##the correct answers are obtained by applying
     ##the inverse (adjoint) permutation to the captions.

ENDDOCUMENT();        # This should be the last executable line in the problem.


########################################################
## DESCRIPTION
## simple linear regression and prediction intervals 
## ENDDESCRIPTION
#########################################################

#########################################################
## KEYWORDS('statistics', 'regression', 'Durbin-Watson')
#########################################################

#########################################################
## DBsubject('Statistics')
## Date('2017/03/01')
## Author('H Joe')
## Institution('UBC')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
#########################################################

#########################################################
## Initializations:
DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "PGchoicemacros.pl",
  "parserRadioButtons.pl",
  "MathObjects.pl",
  "parserMultiAnswer.pl",
  "answerHints.pl",
  "regrfnsPG.pl",   # functions for regression 
);

Context()->texStrings;

# monthly log returns for a period of 48 months within years 2008 to 2014.
# full data, months are 2008-01-02 to 2014-11-03 (83 months)
#market index is SP500,
#and stock is one of the following 8
# yhoo    mrk     msft    intc    jpm     ko      axp      aapl

@sp500=(
-0.063114,-0.035380,-0.005977,0.046451,0.010618,-0.089884,-0.009908,
0.012117,-0.095181,-0.185636,-0.077798,0.007791,-0.089550,-0.116457,
0.081953,0.089772,0.051721,0.000196,0.071522,0.033009,0.035100,-0.019960,
0.055779,0.017615,-0.037675,0.028115,0.057133,0.014651,-0.085532,-0.055388,
0.066516,-0.048612,0.083928,0.036193,-0.002293,0.063257,0.022393,0.031457,
-0.001048,0.028097,-0.013593,-0.018426,-0.021708,-0.058467,-0.074467,
0.102307,-0.005071,0.008497,0.042660,0.039787,0.030852,-0.007526,-0.064699,
0.038793,0.012519,0.019571,0.023947,-0.019988,0.002843,0.007043,0.049198,
0.011000,0.035355,0.017924,0.020550,-0.015113,0.048278,-0.031798,0.029316,
0.043630,0.027663,0.023290,-0.036231,0.042213,0.006908,0.006182,0.020812,
0.018879,-0.015195,0.036964,-0.015635,0.022936,-0.002953);

@yhoo=(
-0.192867,0.370448,0.040563,-0.053971,-0.024000,-0.258709,-0.037982,
-0.025975,-0.113535,-0.299700,-0.107790,0.058220,-0.039286,0.120337,
-0.032261,0.109334,0.102978,-0.011429,-0.089453,0.020049,0.198054,
-0.113441,-0.060271,0.114140,-0.111471,0.019790,0.076671,0.000000,
-0.074713,-0.102901,0.002886,-0.057074,0.077752,0.151627,-0.041479,
0.049933,-0.031148,0.017221,0.016929,0.059354,-0.067179,-0.095673,
-0.138101,0.038193,-0.032863,0.171890,0.004466,0.026383,-0.041778,
-0.042251,0.025958,0.020807,-0.019494,0.037983,0.000632,-0.078098,
0.086898,0.052419,0.108503,0.058460,-0.013661,0.082117,0.099100,0.049741,
0.061552,-0.045507,0.111351,-0.035142,0.201374,-0.006958,0.115690,0.089442,
-0.116023,0.071267,-0.074327,0.001392,-0.036831,0.013758,0.019172,0.072691,
0.056538,0.122272,0.022121);

@mrk=(
-0.231652,-0.039752,-0.145924,0.002430,0.023643,-0.022950,-0.136009,
0.080806,-0.111441,-0.019426,-0.147219,0.143455,-0.062669,-0.165514,
0.117081,-0.098828,0.129259,0.027767,0.070758,0.077571,-0.013032,
-0.022631,0.157752,0.019360,0.043661,-0.034447,0.022990,-0.063771,
-0.039316,0.048148,-0.014649,0.020381,0.056224,-0.013762,-0.051921,
0.055139,-0.083019,-0.018317,0.024927,0.085363,0.022041,-0.029711,
-0.033271,-0.030647,-0.000342,0.053617,0.035673,0.064812,0.015134,
-0.002603,0.016942,0.021688,-0.043275,0.116327,0.056151,-0.025544,
0.055930,0.011572,-0.029547,-0.069338,0.054967,-0.012094,0.043490,0.061324,
-0.006281,0.003594,0.036544,-0.018545,0.015731,-0.054344,0.099898,0.013373,
0.056806,0.073142,0.003941,0.030977,-0.012030,0.007340,-0.019340,0.057602,
-0.006557,-0.022864,0.024381);

@msft=(
-0.088068,-0.177188,0.042776,0.004550,-0.003307,-0.028988,-0.066985,
0.063142,-0.022502,-0.178216,-0.092542,-0.039198,-0.128430,-0.050080,
0.128347,0.097930,0.037403,0.128863,-0.010654,0.052631,0.042502,0.075435,
0.063229,0.035583,-0.078494,0.021883,0.021414,0.041869,-0.164237,-0.114252,
0.114687,-0.089626,0.042401,0.085223,-0.048057,0.099895,-0.006785,
-0.036293,-0.045887,0.020655,-0.028950,0.038698,0.052579,-0.023483,
-0.066479,0.067708,-0.032858,0.014691,0.128833,0.078859,0.016119,-0.007355,
-0.086158,0.047152,-0.037324,0.051185,-0.035018,-0.041847,-0.061298,
0.003156,0.027580,0.020854,0.028848,0.145625,0.059938,-0.010443,-0.081193,
0.054752,-0.003703,0.062024,0.081695,-0.019192,0.011398,0.020035,0.067493,
-0.014442,0.020358,0.018264,0.034392,0.057534,0.020264,0.012646,0.013119);

@intc=(
-0.234109,-0.048583,0.058609,0.049796,0.046368,-0.076407,0.032827,
0.036089,-0.199657,-0.155791,-0.140452,0.059898,-0.127380,-0.002834,
0.165306,0.049286,0.004570,0.051103,0.151155,0.061391,-0.037471,-0.023920,
0.012338,0.060661,-0.050292,0.064614,0.082403,0.024322,-0.057339,-0.096556,
0.057357,-0.145833,0.083095,0.043409,0.061772,-0.005954,0.019888,
0.009007,-0.062010,0.137172,-0.020263,-0.015598,0.007578,-0.093852,
0.058509,0.139445,0.024195,-0.026920,0.085381,0.025558,0.044965,0.010066,
-0.087292,0.030632,-0.036111,-0.025686,-0.091674,-0.046203,-0.090048,
0.052518,0.019955,0.003035,0.044935,0.092189,0.023070,-0.002154,-0.037342,
-0.050022,0.041481,0.065526,-0.016628,0.085254,-0.056439,0.018623,0.041363,
0.033652,0.031820,0.123254,0.092345,0.036452,-0.002868,-0.023537,0.015463);

@jpm=(
0.091358,-0.153618,0.054957,0.111854,-0.102667,-0.225635,0.180241,
-0.054067,0.193107,-0.116223,-0.264568,-0.004310,-0.199751,-0.110011,
0.151343,0.218154,0.111547,-0.078527,0.126205,0.117462,0.008195,
-0.046726,0.017221,-0.019629,-0.066451,0.074987,0.064040,-0.048491,
-0.073223,-0.078098,0.097051,-0.102542,0.045741,-0.009985,-0.006218,
0.125966,0.058975,0.038261,-0.012913,-0.004825,-0.053651,-0.054805,
-0.005948,-0.073983,-0.220956,0.152068,-0.115245,0.071120,0.122024,
0.050772,0.158385,-0.060977,-0.259798,0.075078,0.015781,0.031121,0.086104,
0.036630,-0.014543,0.068050,0.074691,0.038895,-0.030243,0.038354,0.107717,
-0.033579,0.061623,-0.098005,0.022668,0.004393,0.104523,0.021835,-0.048202,
0.026009,0.066164,-0.074819,-0.007453,0.036368,0.007711,0.030433,0.013290,
0.010638,-0.003810);

@ko=(
-0.039412,-0.009159,0.046577,-0.033282,-0.027617,-0.090063,-0.009328,
0.010720,0.022463,-0.182503,0.070370,-0.034566,-0.057807,-0.044932,
0.083661,-0.020541,0.132780,-0.015908,0.038136,-0.021750,0.104308,
-0.007348,0.077604,-0.003620,-0.049556,-0.028340,0.050531,-0.028561,
-0.039101,-0.016980,0.094941,0.013838,0.053897,0.046764,0.036603,
0.040061,-0.045360,0.016860,0.044618,0.016518,-0.009547,0.014450,0.010380,
0.035503,-0.035180,0.011227,-0.008972,0.040062,-0.035566,0.034019,0.065042,
0.030578,-0.021047,0.052083,0.032746,-0.077098,0.020887,-0.020032,0.026713,
-0.045120,0.026920,0.039069,0.050600,0.045698,-0.056868,0.009878,-0.000776,
-0.048531,-0.000816,0.043636,0.022652,0.027612,-0.088475,0.009958,0.019887,
0.053666,0.002981,0.042260,-0.075041,0.059946,0.029498,-0.018453,-0.001434);

@axp=(
-0.053572,-0.149613,0.033005,0.097626,-0.035442,-0.207230,-0.010481,
0.066662,-0.113182,-0.248211,-0.165329,-0.228283,-0.094831,-0.327553,
0.122848,0.628447,-0.014770,-0.059504,0.197838,0.177291,0.007631,0.027493,
0.182835,-0.031815,-0.069106,0.014097,0.081678,0.111456,-0.145839,
0.000267,0.117249,-0.112987,0.052807,-0.008864,0.041605,-0.007102,
0.014880,0.004349,0.036686,0.086333,0.050099,0.005460,-0.032588,-0.006479,
-0.101895,0.124084,-0.052417,-0.018101,0.064759,0.053416,0.089713,0.043379,
-0.075531,0.041759,-0.005326,0.010095,-0.024979,-0.012179,-0.001281,
0.027810,0.026364,0.055335,0.081897,0.016943,0.101428,-0.012572,-0.010393,
-0.025476,0.048978,0.082930,0.047777,0.055790,-0.062409,0.071062,-0.013792,
-0.026786,0.045537,0.036160,-0.072421,0.017400,-0.022656,0.030133,0.015773);

@aapl=(
-0.380691,-0.079182,0.137790,0.192103,0.082026,-0.119978,-0.051872,
0.064104,-0.399836,-0.054571,-0.149488,-0.081898,0.054521,-0.009844,
0.163178,0.180219,0.075986,0.047628,0.137400,0.028859,0.097099,0.016933,
0.058762,0.052710,-0.092520,0.063101,0.138510,0.105141,-0.016200,-0.020846,
0.022278,-0.056502,0.154540,0.058929,0.033429,0.036004,0.050494,0.040180,
-0.013426,0.004635,-0.006538,-0.035537,0.151108,-0.014430,-0.009222,
0.059750,-0.057437,0.057982,0.119578,0.172546,0.100109,-0.026370,-0.010644,
0.010770,0.044731,0.089729,0.002860,-0.113904,-0.012387,-0.095123,
-0.155568,-0.025630,0.002789,0.000328,0.022193,-0.126007,0.132236,0.080422,
-0.021832,0.092029,0.067769,0.008792,-0.113953,0.055981,0.019700,0.094867,
0.075699,0.027297,0.028360,0.074618,-0.017221,0.069489,0.005540);

# yhoo    mrk     msft    intc    jpm     ko      axp      aapl
# random stock
$istk=random(1,8,1);
if($istk==1) { @stk=@yhoo; $stklab="Yahoo"; }
elsif($istk==2) { @stk=@mrk; $stklab="Merck"; }
elsif($istk==3) { @stk=@msft; $stklab="Microsoft"; }
elsif($istk==4) { @stk=@intc; $stklab="Intel"; }
elsif($istk==5) { @stk=@jpm; $stklab="JPMorgan"; }
elsif($istk==6) { @stk=@ko; $stklab="Coca Cola"; }
elsif($istk==7) { @stk=@axp; $stklab="American Express"; }
elsif($istk==8) { @stk=@aapl; $stklab="Apple"; }

# random subset
$iyr=random(1,3,1);  # 1 for 2008, 2 for 2009, 3 for 2010 beginning
$actyr=2007+$iyr;
$actyr3=$actyr+3;
$actyr4=$actyr+4;
$ssize=48; $tstar=2.012896; # 48 months of data
$iend=($iyr+3)*12-1;
$ibeg=$iend-47;
@ii=$ibeg..$iend;

@x=@sp500[@ii];
@y=@stk[@ii];

$n=$ssize;
$xstr="x=c(";
for($i=0;$i<$n-1;$i++) { $xstr=$xstr . $x[$i] . ", " ; }
$xstr=$xstr . $x[$n-1] . ")";
$ystr="y=c(";
for($i=0;$i<$n-1;$i++) { $ystr=$ystr . $y[$i] . ", " ; }
$ystr=$ystr . $y[$n-1] . ")";

# variables for answers
@fit=lsreg(@x,@y);
# output ($n,$xbar,$ybar,$sx2,$sy2,$sxy,$b0,$b1,$sse,$mse,$x0);

$b0=$fit[6];
$b1=$fit[7];
# get residual vector
@resid=@y;
for($i=0;$i<$n;$i++) { $resid[$i]=$y[$i]-$b0-$b1*$x[$i]; }

# sum of squares
$sse=$fit[8];
# cross-product and sum of difference of consecutive
$sscp=0; $sscdif=0;
for($i=0;$i<$n-1;$i++)
{ $sscp=$sscp+$resid[$i]*$resid[$i+1];
  $sscdif=$sscdif+($resid[$i]-$resid[$i+1])**2;
}

$sse1=$sse-$resid[0]**2;
$ssen=$sse-$resid[$n-1]**2;

# lag1 serial correlation
$r1lag=$sscp/sqrt($sse1*$ssen);
# DW statistic
$dw=$sscdif/$sse;

# At the 0.05 significance level, is there significant serial correlation and if so, is it positive 
# or negative serial correlation in the residuals

#$ansa1=$fit[6];
$ansa=$b1;
$ansb=$r1lag; 
$ansc=$dw; 

# The CV for DW depends only on the X matrix;
# The following R code was used 
#dwpv=function(dw,n,Xmat,
#   alternative = c("greater", "two.sided", "less"),
#   tol = 1e-10, iterations = 15)
#{ X=Xmat
#  k <- ncol(X)
#  Q1 <- chol2inv(qr.R(qr(X)))
#  A <- diag(c(1, rep(2, n - 2), 1))
#  A[abs(row(A) - col(A)) == 1] <- -1
#  MA <- diag(rep(1, n)) - X %*% Q1 %*% t(X)
#  MA <- MA %*% A
#  ev <- eigen(MA)$values[1:(n - k)]
#  if (any(Im(ev) > tol)) warning("imaginary parts of eigenvalues discarded")
#  ev <- Re(ev)
#  ev <- ev[ev > tol]
#  pdw <- function(dw) .Fortran("pan", as.double(c(dw, 
#      ev)), as.integer(length(ev)), as.double(0), as.integer(iterations), 
#      x = double(1), PACKAGE = "lmtest")$x
#  pval <- switch(alternative, two.sided = (2 * min(pdw(dw), 
#      1 - pdw(dw))), less = (1 - pdw(dw)), greater = pdw(dw))
#  pval
#}


if($iyr==1) { $lcv=1.459; }
elsif($iyr==2)  { $lcv=1.453; }
else { $lcv=1.446; }
$ucv=4-$lcv;

$dans=0;
if($dw<$lcv) { $dans=1; }
if($dw>$ucv) { $dans=2; }

@ansd=("The serial correlation is not significantly different from 0",
"There is significant positive correlation",
"There is significant negative correlation",
"Not enough information to decide on the strength of serial correlation");


$mcquesd =  new_multiple_choice();
if($dw<$lcv)
{ $mcquesd ->qa(" ", $ansd[1]);
  $mcquesd->extra($ansd[0],$ansd[2],$ansd[3]);
  $ansdd=$ansd[1];
}
elsif($dw>$ucv)
{ $mcquesd ->qa(" ", $ansd[2]);
  $mcquesd->extra($ansd[0],$ansd[1],$ansd[3]);
  $ansdd=$ansd[2];
}
else
{ $mcquesd ->qa(" ", $ansd[0]);
  $mcquesd->extra($ansd[1],$ansd[2],$ansd[3]);
  $ansdd=$ansd[0];
}


#Based on $iyr and $stklab.
#$BR
#The summary statistics are 
#$fit[1], $fit[2], $fit[3], $fit[4], $fit[5], $fit[6], $fit[7].
#$BR
#$b0, $b1, $resid[0], $r1lag, $dw, $lcv, $ucv, $dans;
#$BR

# Main Text
BEGIN_TEXT

The variables are x=SP500 market monthly log return and 
y = monthly return of $stklab for 48 months beginning in January
$actyr. 
$BR
For input into R, the 
data vectors for monthly market return and monthly stock return
are 
$BR
$xstr 
$BR
and
$BR
$ystr
$BR

$BR

For the questions below, use 3 decimal places.

$BR
$BBOLD Part a) $EBOLD
$BR
The slope of the least square regression line is
$BR
\({\hat \beta}_1\)= \{ ans_rule(8) \}
$BR

$BR
$BBOLD Part b) $EBOLD
$BR
The lag 1 serial correlation of the residuals is:
\{ ans_rule(8) \}.
$BR

$BR
$BBOLD Part c) $EBOLD
$BR
The Durbin-Watson statistic applied to the residuals of the least squares
line is:
\{ ans_rule(8) \}.
$BR

$BR
$BBOLD Part d) $EBOLD
$BR
Based on the P-value of the Durbin-Watson test for serial correlation
of the residuals,
the conclusion with a significance level of 0.05 is
(choose one of the following).
$BR
\{ $mcquesd->print_q() \}
$BR
\{ $mcquesd->print_a() \}
$BR


END_TEXT
#########################################################

BEGIN_HINT
See Section 4.5 of the course pack
END_HINT

#########################################################
$showPartialCorrectAnswers = 1;

ANS( num_cmp($ansa,tol=> 0.015, tolType=>"absolute") );
ANS( num_cmp($ansb,tol=> 0.015, tolType=>"absolute") );
ANS( num_cmp($ansc,tol=> 0.015, tolType=>"absolute") );
ANS( radio_cmp($mcquesd->correct_ans()) );

#########################################################
BEGIN_SOLUTION
$BR
(a) to (c)
$BR
fit=lm(y~x)
$BR
print(summary(fit))
$BR
res=fit$DOLLAR resid
$BR
sse=sum(res^2)
$BR
sscp=sum(res[1:47]*res[2:48])
$BR
r1lag=sscp/sqrt((sse-res[1]^2)*(sse-res[48]^2))
$BR
print(r1lag)
$BR
dw=dwtest(y~x,alternative="two.sided")
$BR
print(dw)
$BR
$BR
(d) $ansdd
$BR
END_SOLUTION
#########################################################

ENDDOCUMENT();



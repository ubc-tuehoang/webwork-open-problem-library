########################################################
## DESCRIPTION
## multiple regression and best subsets of explanatory variables
## ENDDESCRIPTION
#########################################################

#########################################################
## KEYWORDS('statistics', 'multiple regression','best subsets')
#########################################################

#########################################################
## DBsubject('Statistics')
## Date('2015/02/28')
## Author('H Joe')
## Institution('UBC')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
#########################################################

#########################################################

## Initializations:
DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "PGchoicemacros.pl",
  "parserRadioButtons.pl",
  "MathObjects.pl",
  "parserMultiAnswer.pl",
  "answerHints.pl",
  "regrfnsPG.pl",   # functions for regression and sampling
);

# richmond townhouse, n=59 in full data set

Context("Matrix");
#@x0=(1,1,1,1,1,1,1,1,1,1, 1,1,1,1,1,1,1,1,1,1, 1,1,1,1,1,1,1,1,1,1, 1,1,1,1,1,1,1,1,1,1, 1,1,1,1,1,1,1,1,1,1, 1,1,1,1,1,1,1,1,1    );
@x0=(1,1,1,1,1,1,1,1,1,1, 1,1,1,1,1,1,1,1,1,1, 1,1,1,1,1,1,1,1,1,1, 1,1,1,1,1,1,1,1,1,1, 1,1,1,1,1,1,1,1,1,1    );

@askpr=(
73.9000, 57.8000, 55.8000, 54.8000, 54.9800, 86.8000, 65.8000, 57.8000,
57.5000, 25.9000, 78.8000, 44.8000, 53.9000, 108.8000, 56.8800, 50.8000,
68.8000, 53.8000, 81.9000, 68.5000, 49.9000, 79.9900, 51.6800, 50.8000,
56.8000, 48.5000, 40.9000, 45.9900, 52.4000, 59.8000, 58.8000, 33.7000,
40.8000, 60.8000, 77.8000, 79.8000, 50.5000, 46.8000, 47.8000, 65.9900,
26.9900, 40.8000, 68.5000, 54.8000, 41.9900, 74.8000, 62.9000, 62.8888,
51.9900, 61.5000, 47.9000, 68.8000, 58.3900, 71.9900, 73.8000, 55.2000,
58.6800, 53.8000, 48.8000);

@ffarea=(
15.15, 12.01, 13.06, 11.26, 13.06, 15.08, 13.45, 13.84, 13.46, 6.10,
19.48, 9.40, 11.84, 23.98, 15.78, 12.27, 15.95, 10.95, 20.95, 13.59,
15.60, 22.00, 15.10, 16.60, 15.50, 14.80, 16.06, 16.01, 16.22, 17.63,
17.37, 12.00, 12.26, 13.20, 16.50, 15.25, 12.26, 16.20, 13.34, 22.78,
10.50, 14.00, 15.76, 15.46, 12.90, 17.48, 14.00, 15.77, 12.09, 14.50,
12.10, 16.90, 15.09, 15.05, 17.54, 15.30, 13.96, 12.22, 14.80);

@beds=(
4, 3, 3, 2, 3, 3, 3, 3, 3, 1, 3, 2, 2, 3, 4, 2, 3, 2, 1, 3, 3, 3, 3, 4,
3, 3, 2, 3, 3, 5, 3, 2, 3, 3, 4, 2, 3, 4, 3, 2, 2, 3, 4, 3, 3, 4, 3, 3,
3, 3, 3, 4, 4, 3, 4, 3, 3, 3, 3);

@baths=(
3.5, 3.5, 3.5, 3.5, 3.5, 3.5, 3.5, 3.5, 3.5, 1.5, 3.5, 2.5, 2.5, 3.5,
3.5, 2.5, 3.5, 2.5, 3.5, 3.5, 3.5, 4.5, 2.5, 3.5, 3.5, 3.5, 3.5, 3.5, 2.5,
2.5, 3.5, 2.5, 2.5, 3.5, 4.5, 3.5, 3.5, 4.5, 3.5, 3.5, 1.5, 2.5, 3.5, 3.5,
2.5, 4.5, 3.5, 3.5, 3.5, 3.5, 2.5, 4.5, 3.5, 3.5, 3.5, 3.5, 3.5, 3.5, 2.5);

@basement=( 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0.5, 0,
0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);


@age=(
0, 0, 0, 0, 1, 1, 1, 10, 10, 11, 11, 14, 15, 16, 17, 17, 18, 18, 19, 2,
20, 20, 20, 23, 23, 24, 25, 25, 25, 26, 26, 28, 29, 3, 3, 3, 3, 30, 32,
35, 37, 38, 4, 41, 44, 5, 5, 6, 7, 7, 7, 8, 8, 8, 9, 9, 9, 9, 50);

@mfee=(
22.2, 14.2, 18.6, 24.8, 19.6, 48.8, 18.2, 16.0, 22.1, 17.1, 20.4, 23.3,
21.0, 36.9, 17.3, 25.2, 23.6, 24.7, 34.8, 17.0, 27.0, 26.7, 24.5, 19.9,
17.4, 16.1, 24.4, 33.7, 36.4, 32.0, 31.0, 25.9, 19.8, 18.9, 25.4, 35.0,
18.0, 16.0, 24.5, 57.4, 28.0, 23.0, 22.1, 31.0, 23.2, 29.7, 19.6, 35.7,
18.1, 18.7, 18.0, 19.4, 20.3, 22.3, 18.2, 16.9, 22.0, 18.5, 25.0);

# $Xt and @y are global
sub multreg 
{ local($Xmat,$yt,$ymat,$n,$k,$XtX,$rhs,$LR,$dim,$beta,$base,$XtXinv);
  local($b,$seb,$yhat,$res,$rest,$sse11,$sse,$mse,$residSD);
  local($s1,$s2,$ybar,$sstot,$R2,$R2adj,$i,$j,$ij,$out);
  $Xmat=$Xt->transpose;
  ($n,$k) = $Xmat->dim();
  $yt=Matrix([@y]); $ymat=$yt->transpose;
  $XtX=$Xt*$Xmat; $rhs=$Xt*$ymat;
  $LR=$XtX->decompose_LR;
  #$L=$LR->L; #$R=$LR->R; #$PL=$LR->PL; #$PR=$LR->PR;
  ($dim,$beta,$base)=$LR->solve_LR($rhs);
  #$b1=$beta->element(2,1);
  @b=NULL; @seb=NULL;
  for($j=0;$j<$k;$j++) { $b[$j]=$beta->element($j+1,1); }
  $XtXinv=$XtX->inverse;
  # yhat and residual vectors, residual SD, R2, adjusted R2
  $yhat=$Xmat*$beta;
  $res=$ymat-$yhat; $rest=$res->transpose;
  $sse11=$rest*$res; $sse=$sse11->element(1,1);
  $mse=$sse/($n-$k); $residSD=sqrt($mse);
  for($j=0;$j<$k;$j++) { $seb[$j]=$residSD*sqrt($XtXinv->element($j+1,$j+1)); }
  $s1=0; $s2=0;
  for($i=0;$i<$n;$i++)
  { $s1=$s1+$y[$i]; $s2=$s2+$y[$i]**2; }
  $ybar=$s1/$n;
  $sstot=$s2-$n*$ybar*$ybar;
  $R2=1-$sse/$sstot;
  $R2adj=1-$mse/($sstot/($n-1));
  @xtxivec=NULL; $ij=0;
  for($i=0;$i<$k;$i++) 
  { for($j=0;$j<$k;$j++) 
    { $xtxivec[$ij]=$XtXinv->element($i+1,$j+1); $ij++; }
  }
  @out=($n,$k,$ybar,$sse,$sstot,$residSD,$R2,$R2adj,@b,@seb,@xtxivec);
  @out;
}

$ssize=50;
#$ssize=59;
@ii=isamp(59,$ssize);
@x1=@ffarea[@ii];
@x2=@age[@ii];
@x3=@mfee[@ii];
@x4=@beds[@ii];
@x5=@baths[@ii];
@y=@askpr[@ii];

$n=$ssize;
$x1str="ffarea=c(";
for($i=0;$i<$n-1;$i++) { $x1str=$x1str . $x1[$i] . ", " ; }
$x1str=$x1str . $x1[$n-1] . ")";
$x2str="age=c(";
for($i=0;$i<$n-1;$i++) { $x2str=$x2str . $x2[$i] . ", " ; }
$x2str=$x2str . $x2[$n-1] . ")";
$x3str="mfee=c(";
for($i=0;$i<$n-1;$i++) { $x3str=$x3str . $x3[$i] . ", " ; }
$x3str=$x3str . $x3[$n-1] . ")";
$x4str="beds=c(";
for($i=0;$i<$n-1;$i++) { $x4str=$x4str . $x4[$i] . ", " ; }
$x4str=$x4str . $x4[$n-1] . ")";
$x5str="baths=c(";
for($i=0;$i<$n-1;$i++) { $x5str=$x5str . $x5[$i] . ", " ; }
$x5str=$x5str . $x5[$n-1] . ")";
$ystr="askpr=c(";
for($i=0;$i<$n-1;$i++) { $ystr=$ystr . $y[$i] . ", " ; }
$ystr=$ystr . $y[$n-1] . ")";

# Cp = SS(Res)/MS(Res:full) + 2*ncol(Xmat) - n

# p=5
$Xt=Matrix ([@x0],[@x1],[@x2],[@x3],[@x4],[@x5]); # 6xn matrix
@out5=multreg;
$n=$out5[0]; $k=$out5[1];
$sse5=$out5[3]; $residSD=$out5[5];
$Rsq5=$out5[6]; $Rsqadj5=$out5[7];
$residSD5=$residSD;
$mse5=$sse5/($n-$k);  # this is used for all models
$cp5=$sse5/$mse5+2*$k-$n; # should be $k for all explanatory

# p=4 with mfee, beds
$Xt=Matrix ([@x0],[@x1],[@x2],[@x3],[@x4]); # 5xn matrix
@out4a=multreg;
$n=$out4a[0]; $k=$out4a[1];
$sse4a=$out4a[3]; $residSD=$out4a[5];
$Rsq4a=$out4a[6]; $Rsqadj4a=$out4a[7];
$cp4a=$sse4a/$mse5+2*$k-$n; # k has changed

# p=4 with mfee, baths
$Xt=Matrix ([@x0],[@x1],[@x2],[@x3],[@x5]); # 5xn matrix
@out4b=multreg;
$n=$out4b[0]; $k=$out4b[1];
$sse4b=$out4b[3]; $residSD=$out4b[5];
$Rsq4b=$out4b[6]; $Rsqadj4b=$out4b[7];
$cp4b=$sse4b/$mse5+2*$k-$n; # k has changed

# p=4 with beds, baths
$Xt=Matrix ([@x0],[@x1],[@x2],[@x4],[@x5]); # 5xn matrix
@out4c=multreg;
$n=$out4c[0]; $k=$out4c[1];
$sse4c=$out4c[3]; $residSD=$out4c[5];
$Rsq4c=$out4c[6]; $Rsqadj4c=$out4c[7];
$cp4c=$sse4c/$mse5+2*$k-$n; # k has changed

# p=3 with mfee
$Xt=Matrix ([@x0],[@x1],[@x2],[@x3]); # 4xn matrix
@out3a=multreg;
$n=$out3a[0]; $k=$out3a[1];
$sse3a=$out3a[3]; $residSD=$out3a[5];
$Rsq3a=$out3a[6]; $Rsqadj3a=$out3a[7];
$cp3a=$sse3a/$mse5+2*$k-$n; # k has changed

# p=3 with baths
$Xt=Matrix ([@x0],[@x1],[@x2],[@x5]); # 4xn matrix
@out3b=multreg;
$n=$out3b[0]; $k=$out3b[1];
$sse3b=$out3b[3]; $residSD=$out3b[5];
$Rsq3b=$out3b[6]; $Rsqadj3b=$out3b[7];
$cp3b=$sse3b/$mse5+2*$k-$n; # k has changed

# p=3 with beds
$Xt=Matrix ([@x0],[@x1],[@x2],[@x4]); # 4xn matrix
@out3c=multreg;
$n=$out3c[0]; $k=$out3c[1];
$sse3c=$out3c[3]; $residSD=$out3c[5];
$Rsq3c=$out3c[6]; $Rsqadj3c=$out3c[7];
$cp3c=$sse3c/$mse5+2*$k-$n; # k has changed

# p=2
$Xt=Matrix ([@x0],[@x1],[@x2]); # 3xn matrix
@out2=multreg;
$n=$out2[0]; $k=$out2[1];
$sse2=$out2[3]; $residSD=$out2[5];
$Rsq2=$out2[6]; $Rsqadj2=$out2[7];
$cp2=$sse2/$mse5+2*$k-$n; # k has changed

# answers
$ansa1=$Rsqadj2; 
#$ansa2=$Rsqadj3; 
$ansa2=max($Rsqadj3a,$Rsqadj3b,$Rsqadj3c); 
# subset of size 4, check two cases 
$ansa3=max($Rsqadj4a,$Rsqadj4b,$Rsqadj4c); 
#$ansa4=$Rsqadj5; 
$ansb1=$cp2; 
#$ansb2=$cp3; 
$ansb2=min($cp3a,$cp3b,$cp3c); 
$ansb3=min($cp4a,$cp4b,$cp4c); 

# replace the if statements here to be like mreg-realty.pg
# compare best for 2,3,4 explanatory
#$ansc=3; # for adjR2
#if($ansa1>$ansa2 && $ansa1>$ansa3) { $ansc=2; }
#if($ansa3>$ansa1 && $ansa3>$ansa2) { $ansc=4; }
#$ansd=3; # for Cp
#if($ansb1<$ansb2 && $ansb1<$ansb3) { $ansd=2; }
#if($ansb3<$ansb1 && $ansb3<$ansb2) { $ansd=4; }

$tem23=$ansa1-$ansa2;
$tem24=$ansa1-$ansa3;
$tem32=$ansa2-$ansa1;
$tem34=$ansa2-$ansa3;
$tem42=$ansa3-$ansa1;
$tem43=$ansa3-$ansa2;
if($tem23>0 & $tem24>0) { $ansc=2; }
if($tem32>0 & $tem34>0) { $ansc=3; }
if($tem42>0 & $tem43>0) { $ansc=4; }

$uem23=$ansb1-$ansb2;
$uem24=$ansb1-$ansb3;
$uem32=$ansb2-$ansb1;
$uem34=$ansb2-$ansb3;
$uem42=$ansb3-$ansb1;
$uem43=$ansb3-$ansb2;
if($uem23<0 & $uem24<0) { $ansd=2; }
if($uem32<0 & $uem34<0) { $ansd=3; }
if($uem42<0 & $uem43<0) { $ansd=4; }


#$BR
#adjusted R2 for models 2,3,4a,4b,5
#$Rsqadj2, $Rsqadj3a, $Rsqadj3b, $Rsqadj4a, $Rsqadj4b, $Rsqadj5
#$BR
#$BR
#Cp for models 2,3,4a,4b,5
#$cp2, $cp3a, $cp3b, $cp4a, $cp4b, $cp5
#$BR
#$BR
#best for adjR2 is $ansc;
#$BR
#best for Cp is $ansd;
#$BR

Context("Numeric");
$ansa2spec=Real($ansa2);

Context()->texStrings;

BEGIN_TEXT

The questions here involve the data set for Richmond townhouses
obtained on 2014.11.03. 
$BR
You are to apply the regsubsets() function in the
leaps R package.
$BR
For your subset, the response variable is:
$BR
asking price divided by 10000:
$BR
$ystr
$BR
The explanatory variables are:

$BR
(i) finished floor area divided by 100
$BR
$x1str

$BR
(ii) age
$BR
$x2str

$BR
(iii) monthly maintenance fee divided by 10
$BR
$x3str

$BR
(iv) number of bedrooms
$BR
$x4str

$BR
(v) number of bathrooms
$BR
$x5str
$BR
After you have copied the above R vectors into your R session,
you can get a dataframe with 
$BR
richmondtownh=data.frame(askpr,ffarea,age,mfee,beds,baths)
$BR
$BR


$BR
$BR
Use regsubsets (with default method="exhaustive") 
in the leaps R package to find the best subsets
with 1, 2, 3, 4, 5 explanatory variables, when
askpr is the response variable.
$BR

Please use 3 decimal places for the answers below which are not integer-valued


$BR
$BBOLD Part a) $EBOLD
$BR
The values of adjusted \(R^2\) for the best models with 
2, 3 and 4 explanatory variables are respectively:
$BR
2 explanatory: \{ ans_rule(8) \}
$BR
3 explanatory: \{ ans_rule(8) \}
$BR
4 explanatory: \{ ans_rule(8) \}
$BR
$BR

$BR
$BBOLD Part b) $EBOLD
$BR
The values of the Cp statistics  for the best models with 
2, 3 and 4 explanatory variables are respectively:
$BR
2 explanatory: \{ ans_rule(8) \}
$BR
3 explanatory: \{ ans_rule(8) \}
$BR
4 explanatory: \{ ans_rule(8) \}
$BR
$BR

$BR
$BBOLD Part c) $EBOLD
$BR
For the best model based on adjusted \(R^2\), 
the number of explanatory variables is:
$BR
\{ ans_rule(3) \}
$BR

$BR
$BBOLD Part d) $EBOLD
$BR
For the best model based on \(C_p\), 
the number of explanatory variables is:
$BR
\{ ans_rule(3) \}
$BR



END_TEXT

#########################################################

BEGIN_HINT
Check the course pack, Section 4.1 
END_HINT

#########################################################

#########################################################
$showPartialCorrectAnswers = 1;
#########################################################

ANS( num_cmp($ansa1,tol=> 0.015, tolType=>"absolute") );
# try replacing one case with asymmetric tolerance check
#ANS( num_cmp($ansa2,tol=> 0.015, tolType=>"absolute") );
ANS($ansa2spec->cmp(checker => sub {
    my ($correct, $student) = @_;
    my $cv = $correct->value;
    my $sv = $student->value;
    return $sv > ($cv * .985) &&
        $sv < ($cv * 1.03);
}));

ANS( num_cmp($ansa3,tol=> 0.015, tolType=>"absolute") );
ANS( num_cmp($ansb1,tol=> 0.015, tolType=>"absolute") );
ANS( num_cmp($ansb2,tol=> 0.015, tolType=>"absolute") );
ANS( num_cmp($ansb3,tol=> 0.015, tolType=>"absolute") );
ANS( num_cmp($ansc) );
ANS( num_cmp($ansd) );

#########################################################
BEGIN_SOLUTION
$BR
(a) $ansa1, $ansa2, $ansa3
$BR
$BR
(b) $ansb1, $ansb2, $ansb3
$BR
$BR
(c) $ansc
$BR
$BR
(d) $ansd
$BR
END_SOLUTION
#########################################################



ENDDOCUMENT();


#########################################################
## DESCRIPTION
## Multiple regression 
## ENDDESCRIPTION
#########################################################

#########################################################
#########################################################

#########################################################
## DBsubject(Statistics)
## DBchapter(Multiple regression)
## DBsection(Model selection)
## Date(2015/01/23)
## Institution(UBC)
## Author(H Joe)
## Level(4)
## KEYWORDS('statistics', 'regression')
#########################################################

#########################################################

## Initializations:
DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "PGchoicemacros.pl",
  "parserRadioButtons.pl",
  "MathObjects.pl",
  "parserMultiAnswer.pl",
  "answerHints.pl",
  "regrfnsPG.pl",   # functions for regression and sampling
);

# richmond townhouse 59 in full data

Context("Matrix");
#@x0=(1,1,1,1,1,1,1,1,1,1, 1,1,1,1,1,1,1,1,1,1, 1,1,1,1,1,1,1,1,1,1, 1,1,1,1,1,1,1,1,1,1, 1,1,1,1,1,1,1,1,1,1, 1,1,1,1,1,1,1,1,1    );
@x0=(1,1,1,1,1,1,1,1,1,1, 1,1,1,1,1,1,1,1,1,1, 1,1,1,1,1,1,1,1,1,1, 1,1,1,1,1,1,1,1,1,1, 1,1,1,1,1,1,1,1,1,1    );

@askpr=(
73.9000, 57.8000, 55.8000, 54.8000, 54.9800, 86.8000, 65.8000, 57.8000,
57.5000, 25.9000, 78.8000, 44.8000, 53.9000, 108.8000, 56.8800, 50.8000,
68.8000, 53.8000, 81.9000, 68.5000, 49.9000, 79.9900, 51.6800, 50.8000,
56.8000, 48.5000, 40.9000, 45.9900, 52.4000, 59.8000, 58.8000, 33.7000,
40.8000, 60.8000, 77.8000, 79.8000, 50.5000, 46.8000, 47.8000, 65.9900,
26.9900, 40.8000, 68.5000, 54.8000, 41.9900, 74.8000, 62.9000, 62.8888,
51.9900, 61.5000, 47.9000, 68.8000, 58.3900, 71.9900, 73.8000, 55.2000,
58.6800, 53.8000, 48.8000);

@ffarea=(
15.15, 12.01, 13.06, 11.26, 13.06, 15.08, 13.45, 13.84, 13.46, 6.10,
19.48, 9.40, 11.84, 23.98, 15.78, 12.27, 15.95, 10.95, 20.95, 13.59,
15.60, 22.00, 15.10, 16.60, 15.50, 14.80, 16.06, 16.01, 16.22, 17.63,
17.37, 12.00, 12.26, 13.20, 16.50, 15.25, 12.26, 16.20, 13.34, 22.78,
10.50, 14.00, 15.76, 15.46, 12.90, 17.48, 14.00, 15.77, 12.09, 14.50,
12.10, 16.90, 15.09, 15.05, 17.54, 15.30, 13.96, 12.22, 14.80);

@beds=(
4, 3, 3, 2, 3, 3, 3, 3, 3, 1, 3, 2, 2, 3, 4, 2, 3, 2, 1, 3, 3, 3, 3, 4,
3, 3, 2, 3, 3, 5, 3, 2, 3, 3, 4, 2, 3, 4, 3, 2, 2, 3, 4, 3, 3, 4, 3, 3,
3, 3, 3, 4, 4, 3, 4, 3, 3, 3, 3);

@baths=(
3.5, 3.5, 3.5, 3.5, 3.5, 3.5, 3.5, 3.5, 3.5, 1.5, 3.5, 2.5, 2.5, 3.5,
3.5, 2.5, 3.5, 2.5, 3.5, 3.5, 3.5, 4.5, 2.5, 3.5, 3.5, 3.5, 3.5, 3.5, 2.5,
2.5, 3.5, 2.5, 2.5, 3.5, 4.5, 3.5, 3.5, 4.5, 3.5, 3.5, 1.5, 2.5, 3.5, 3.5,
2.5, 4.5, 3.5, 3.5, 3.5, 3.5, 2.5, 4.5, 3.5, 3.5, 3.5, 3.5, 3.5, 3.5, 2.5);

@basement=( 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, 0, 0.5, 0,
0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);


@age=(
0, 0, 0, 0, 1, 1, 1, 10, 10, 11, 11, 14, 15, 16, 17, 17, 18, 18, 19, 2,
20, 20, 20, 23, 23, 24, 25, 25, 25, 26, 26, 28, 29, 3, 3, 3, 3, 30, 32,
35, 37, 38, 4, 41, 44, 5, 5, 6, 7, 7, 7, 8, 8, 8, 9, 9, 9, 9, 50);

@mfee=(
22.2, 14.2, 18.6, 24.8, 19.6, 48.8, 18.2, 16.0, 22.1, 17.1, 20.4, 23.3,
21.0, 36.9, 17.3, 25.2, 23.6, 24.7, 34.8, 17.0, 27.0, 26.7, 24.5, 19.9,
17.4, 16.1, 24.4, 33.7, 36.4, 32.0, 31.0, 25.9, 19.8, 18.9, 25.4, 35.0,
18.0, 16.0, 24.5, 57.4, 28.0, 23.0, 22.1, 31.0, 23.2, 29.7, 19.6, 35.7,
18.1, 18.7, 18.0, 19.4, 20.3, 22.3, 18.2, 16.9, 22.0, 18.5, 25.0);

# $Xt and @y are global
sub multreg 
{ local($Xmat,$yt,$ymat,$n,$k,$XtX,$rhs,$LR,$dim,$beta,$base,$XtXinv);
  local($b,$seb,$yhat,$res,$rest,$sse11,$sse,$mse,$residSD);
  local($s1,$s2,$ybar,$sstot,$R2,$R2adj,$i,$j,$ij,$out);
  $Xmat=$Xt->transpose;
  ($n,$k) = $Xmat->dim();
  $yt=Matrix([@y]); $ymat=$yt->transpose;
  $XtX=$Xt*$Xmat; $rhs=$Xt*$ymat;
  $LR=$XtX->decompose_LR;
  #$L=$LR->L; #$R=$LR->R; #$PL=$LR->PL; #$PR=$LR->PR;
  ($dim,$beta,$base)=$LR->solve_LR($rhs);
  #$b1=$beta->element(2,1);
  @b=NULL; @seb=NULL;
  for($j=0;$j<$k;$j++) { $b[$j]=$beta->element($j+1,1); }
  $XtXinv=$XtX->inverse;
  # yhat and residual vectors, residual SD, R2, adjusted R2
  $yhat=$Xmat*$beta;
  $res=$ymat-$yhat; $rest=$res->transpose;
  $sse11=$rest*$res; $sse=$sse11->element(1,1);
  $mse=$sse/($n-$k); $residSD=sqrt($mse);
  for($j=0;$j<$k;$j++) { $seb[$j]=$residSD*sqrt($XtXinv->element($j+1,$j+1)); }
  $s1=0; $s2=0;
  for($i=0;$i<$n;$i++)
  { $s1=$s1+$y[$i]; $s2=$s2+$y[$i]**2; }
  $ybar=$s1/$n;
  $sstot=$s2-$n*$ybar*$ybar;
  $R2=1-$sse/$sstot;
  $R2adj=1-$mse/($sstot/($n-1));
  @xtxivec=NULL; $ij=0;
  for($i=0;$i<$k;$i++) 
  { for($j=0;$j<$k;$j++) 
    { $xtxivec[$ij]=$XtXinv->element($i+1,$j+1); $ij++; }
  }
  @out=($n,$k,$ybar,$sse,$sstot,$residSD,$R2,$R2adj,@b,@seb,@xtxivec);
  @out;
}

$ssize=50;
#$ssize=59;
$tstar2=2.011741;
$tstar3=2.012896;
$tstar4=2.014103;
@ii=isamp(59,$ssize);
@x1=@ffarea[@ii];
@x2=@age[@ii];
@x3=@mfee[@ii];
@x4=@beds[@ii];
$x1fut=random(15,18,1);
$x2fut=random(5,12,1);
$x3fut=random(20,30,1);
$x4fut=random(3,4,1);
@y=@askpr[@ii];

$n=$ssize;
$x1str="ffarea=c(";
for($i=0;$i<$n-1;$i++) { $x1str=$x1str . $x1[$i] . ", " ; }
$x1str=$x1str . $x1[$n-1] . ")";
$x2str="age=c(";
for($i=0;$i<$n-1;$i++) { $x2str=$x2str . $x2[$i] . ", " ; }
$x2str=$x2str . $x2[$n-1] . ")";
$x3str="mfee=c(";
for($i=0;$i<$n-1;$i++) { $x3str=$x3str . $x3[$i] . ", " ; }
$x3str=$x3str . $x3[$n-1] . ")";
$x4str="beds=c(";
for($i=0;$i<$n-1;$i++) { $x4str=$x4str . $x4[$i] . ", " ; }
$x4str=$x4str . $x4[$n-1] . ")";
$ystr="askpr=c(";
for($i=0;$i<$n-1;$i++) { $ystr=$ystr . $y[$i] . ", " ; }
$ystr=$ystr . $y[$n-1] . ")";


# p=2
$Xt=Matrix ([@x0],[@x1],[@x2]); # 3xn matrix
@out2=multreg;
$n=$out2[0]; $k=$out2[1];
$sse=$out2[3]; $residSD=$out2[5];
$R2=$out2[6]; $R2adj=$out2[7];
$b0=$out2[8]; $b1=$out2[9]; $b2=$out2[10];
$seb0=$out2[11]; $seb1=$out2[12]; $seb2=$out2[13];
@xtxinv=@out2[14..22];
@xfut=(1,$x1fut,$x2fut); # random
# t(xfut) %*% xtxinv %*% xfut
# SE of prediction
$qf2=0; 
for($i=0;$i<$k;$i++)
{ for($j=0;$j<$k;$j++) { $qf2+= $xfut[$i]*$xfut[$j]*$xtxinv[$i*$k+$j]; } }
$pred2=$b0+$b1*$x1fut+$b2*$x2fut;
$residSD2=$residSD;
$sepred2=$residSD2*sqrt(1+$qf2);
$bffarea2=$b1; $seffarea2=$seb1;
$Rsq2=$R2; $Rsqadj2=$R2adj;

# p=3
$Xt=Matrix ([@x0],[@x1],[@x2],[@x3]); # 4xn matrix
@out3=multreg;
$n=$out3[0]; $k=$out3[1];
$sse=$out3[3]; $residSD=$out3[5];
$R2=$out3[6]; $R2adj=$out3[7];
$b0=$out3[8]; $b1=$out3[9]; $b2=$out3[10]; $b3=$out3[11];
$seb0=$out3[12]; $seb1=$out3[13]; $seb2=$out3[14]; $seb3=$out3[15];
@xtxinv=@out3[16..31];
@xfut=(1,$x1fut,$x2fut,$x3fut); # random
$qf3=0; 
for($i=0;$i<$k;$i++)
{ for($j=0;$j<$k;$j++) { $qf3+= $xfut[$i]*$xfut[$j]*$xtxinv[$i*$k+$j]; } }
$pred3=$b0+$b1*$x1fut+$b2*$x2fut+$b3*$x3fut;
$residSD3=$residSD;
$sepred3=$residSD3*sqrt(1+$qf3);
$bffarea3=$b1; $seffarea3=$seb1;
$Rsq3=$R2; $Rsqadj3=$R2adj;

# p=4
$Xt=Matrix ([@x0],[@x1],[@x2],[@x3],[@x4]); # 5xn matrix
@out4=multreg;
$n=$out4[0]; $k=$out4[1];
$sse=$out4[3]; $residSD=$out4[5];
$R2=$out4[6]; $R2adj=$out4[7];
$b0=$out4[8]; $b1=$out4[9]; $b2=$out4[10]; $b3=$out4[11]; $b4=$out4[12];
$seb0=$out4[13]; $seb1=$out4[14]; $seb2=$out4[15]; $seb3=$out4[16]; $seb3=$out4[17];
@xtxinv=@out4[18..42];
@xfut=(1,$x1fut,$x2fut,$x3fut,$x4fut); # random
$qf4=0; 
for($i=0;$i<$k;$i++)
{ for($j=0;$j<$k;$j++) { $qf4+= $xfut[$i]*$xfut[$j]*$xtxinv[$i*$k+$j]; } }
$pred4=$b0+$b1*$x1fut+$b2*$x2fut+$b3*$x3fut+$b4*$x4fut;
$residSD4=$residSD;
$sepred4=$residSD4*sqrt(1+$qf4);
$bffarea4=$b1; $seffarea4=$seb1;
$Rsq4=$R2; $Rsqadj4=$R2adj;

# answers
$ansa1=$Rsqadj2; 
$ansa2=$Rsqadj3; 
$ansa3=$Rsqadj4; 


#$ansb=3;
#if($Rsqadj2>$Rsqadj3 && $Rsqadj2>$Rsqadj4) { $ansb=2; }
#if($Rsqadj4>$Rsqadj3 && $Rsqadj4>$Rsqadj2) { $ansb=4; }
# above works in standalone perl

$tem23=$Rsqadj2-$Rsqadj3;
$tem24=$Rsqadj2-$Rsqadj4;
$tem32=$Rsqadj3-$Rsqadj2;
$tem34=$Rsqadj3-$Rsqadj4;
$tem42=$Rsqadj4-$Rsqadj2;
$tem43=$Rsqadj4-$Rsqadj3;

if($tem23>0 & $tem24>0) { $ansb=2; }
if($tem32>0 & $tem34>0) { $ansb=3; }
if($tem42>0 & $tem43>0) { $ansb=4; }


#$ansc1=$bffarea3; $tstar=$tstar3; $seffarea=$seffarea3;
#if($Rsqadj2>$Rsqadj3 && $Rsqadj2>$Rsqadj4) 
#{ $ansc1=$bffarea2; $tstar=$tstar2; $seffarea=$seffarea2; }
#if($Rsqadj4>$Rsqadj3 && $Rsqadj4>$Rsqadj2) 
#{ $ansc1=$bffarea4; $tstar=$tstar4; $seffarea=$seffarea4; }
if($ansb==3) { $ansc1=$bffarea3; $tstar=$tstar3; $seffarea=$seffarea3; }
if($ansb==2) { $ansc1=$bffarea2; $tstar=$tstar2; $seffarea=$seffarea2; }
if($ansb==4) { $ansc1=$bffarea4; $tstar=$tstar4; $seffarea=$seffarea4; }
$ansc2=$ansc1-$tstar*$seffarea;
$ansc3=$ansc1+$tstar*$seffarea;

#$ansd1=$pred3; $tstar=$tstar3; $sepred=$sepred3;
#if($Rsqadj2>$Rsqadj3 && $Rsqadj2>$Rsqadj4) 
#{ $ansd1=$pred2; $tstar=$tstar2; $sepred=$sepred2; }
#if($Rsqadj4>$Rsqadj3 && $Rsqadj4>$Rsqadj2) 
#{ $ansd1=$pred4; $tstar=$tstar4; $sepred=$sepred4; }
if($ansb==3) { $ansd1=$pred3; $tstar=$tstar3; $sepred=$sepred3; }
if($ansb==2) { $ansd1=$pred2; $tstar=$tstar2; $sepred=$sepred2; }
if($ansb==4) { $ansd1=$pred4; $tstar=$tstar4; $sepred=$sepred4; }
$ansd2=$sepred;
$ansd3=$ansd1+$tstar*$sepred;

#$BR
#2 explanatory: residSD=$residSD2; R2=$Rsq2; adjR2=$Rsqadj2
#$BR
#coefficient of ffarea and its SE are $bffarea2, $seffarea2
#$BR
#pred=$pred2, SEpred=$sepred2
#$BR
#$BR

#$BR
#3 explanatory: residSD=$residSD3; R2=$Rsq3; adjR2=$Rsqadj3
#$BR
#coefficient of ffarea and its SE are $bffarea3, $seffarea3
#$BR
#pred=$pred3, SEpred=$sepred3
#$BR
#$BR

#$BR
#4 explanatory: residSD=$residSD4; R2=$Rsq4; adjR2=$Rsqadj4
#$BR
#coefficient of ffarea and its SE are $bffarea4, $seffarea4
#$BR
#pred=$pred4, SEpred=$sepred4
#$BR
#$BR

Context()->texStrings;

BEGIN_TEXT

The questions involve the data set for asking prices of Richmond townhouses
obtained on 2014.11.03.
$BR
For your subset, the response variable is:
$BR
asking price divided by 10000:
$BR
$ystr
$BR
The explanatory variables are:

$BR
(i) finished floor area divided by 100
$BR
$x1str

$BR
(ii) age
$BR
$x2str

$BR
(iii) monthly maintenance fee divided by 10
$BR
$x3str

$BR
(iv) number of bedrooms
$BR
$x4str

$BR
You are to make a prediction of the response variable when 
ffarea=$x1fut, age=$x2fut, mfee=$x3fut, beds=$x4fut.

$BR
$BR
You are to fit three multiple regression models with the response variable
askpr:
$BR
(i) 2 explanatory variables ffarea, age 
$BR
(ii) 3 explanatory variables ffarea, age, mfee
$BR
(iii) 4 explanatory variables ffarea, age, mfee, beds
$BR
After you have copied the above R vectors into your R session,
you can get a dataframe with 
$BR
richmondtownh=data.frame(cbind(askpr,ffarea,age,mfee,beds))
$BR
$BR

Please use 3 decimal places for the answers below which are not integer-valued


$BR
$BBOLD Part a) $EBOLD
$BR
The values of adjusted \(R^2\) for the above models with 
2, 3 and 4 explanatory variables are respectively:
$BR
2 explanatory: \{ ans_rule(8) \}
$BR
3 explanatory: \{ ans_rule(8) \}
$BR
4 explanatory: \{ ans_rule(8) \}
$BR
$BR

$BR
$BBOLD Part b) $EBOLD
$BR
For the best of these 3 models based on adjusted \(R^2\), 
the number of explanatory variables is:
$BR
\{ ans_rule(3) \}
$BR

$BR
$BBOLD Part c) $EBOLD
$BR
For the best of these 3 models based on adjusted \(R^2\), 
the least squares coefficient for ffarea is
$BR
\{ ans_rule(8) \}
$BR
and a 95% confidence interval for \(\beta_{ffarea}\) is
$BR
\{ ans_rule(8) \} to \{ ans_rule(8) \}
$BR

$BR
$BBOLD Part d) $EBOLD
$BR
For the best of these 3 models based on adjusted \(R^2\), 
get the prediction, SE and 95% prediction interval when the
future values of the explanatory variables are:
ffarea=$x1fut, age=$x2fut, mfee=$x3fut, beds=$x4fut.
$BR
prediction: \{ ans_rule(8) \} and its SE \{ ans_rule(8) \},
$BR
and the upper endpoint of the 95% prediction interval is
$BR
\{ ans_rule(8) \}
$BR



END_TEXT


#########################################################
$showPartialCorrectAnswers = 1;
#########################################################

ANS( num_cmp($ansa1,tol=> 0.015, tolType=>"absolute") );
ANS( num_cmp($ansa2,tol=> 0.015, tolType=>"absolute") );
ANS( num_cmp($ansa3,tol=> 0.015, tolType=>"absolute") );
ANS( num_cmp($ansb) );
ANS( num_cmp($ansc1,tol=> 0.015, tolType=>"absolute") );
ANS( num_cmp($ansc2,tol=> 0.015, tolType=>"absolute") );
ANS( num_cmp($ansc3,tol=> 0.015, tolType=>"absolute") );
#ANS( num_cmp($ansd1,tol=> 0.015, tolType=>"absolute") );
#ANS( num_cmp($ansd2,tol=> 0.015, tolType=>"absolute") );
#ANS( num_cmp($ansd3,tol=> 0.015, tolType=>"absolute") );
ANS( num_cmp($ansd1,tol=> 0.15, tolType=>"absolute") );
ANS( num_cmp($ansd2,tol=> 0.15, tolType=>"absolute") );
ANS( num_cmp($ansd3,tol=> 0.15, tolType=>"absolute") );

#########################################################
BEGIN_SOLUTION
R code can follow the example in bcondo-mreg-SE.r (file at course web site).
$BR
Suppose you have save the variables into a dataframe in R with:
richmondtownh=data.frame(cbind(askpr,ffarea,age,mfee,beds))
$BR
Let bestreg be the lm object of the best fit based on adjusted \(R^2\).
$BR
The following explains part (d).
$BR
For the prediction interval, set up a new data frame and then apply predict()
$BR
xnew=data.frame(ffarea=$x1fut, age=$x2fut, mfee=$x3fut, beds=$x4fut)
$BR
pred=predict(bestreg,newdata=xnew,interval="prediction", se.fit=T)
$BR
pred is now an object with components of (i) $DOLLAR fit (vector of length 3
with point prediction, lower prediction limit and upper prediction limit),
(ii) $DOLLAR se.fit has the SE for the subpopulation mean:
\({\hat\sigma}\sqrt{{{\bf x}^*}^T({\bf X}^T{\bf X})^{-1}{\bf x}^*}\);
(iii) $DOLLAR df for degree of freedom; and
(iv) $DOLLAR residual.scale for the residual SD \({\hat\sigma}\)
$BR
The SE for the prediction is: SEpred=
\({\hat\sigma}\sqrt{1+{{\bf x}^*}^T({\bf X}^T{\bf X})^{-1}{\bf x}^*}\);
$BR
There are several ways to get SEpred from this output of predict()
without directly implementing the formula for SEpred. Method 1:
$BR
sigmahat=pred$DOLLAR residual.scale;
SEmean=pred$DOLLAR se.fit;
$BR
tem=(SEmean/sigmahat)^2+1;
SEpred=sigmahat*sqrt(tem)
$BR
or Method 2 via the margin or error:
$BR
vec=pred$DOLLAR fit;
moe=vec[3]-vec[1]; SEpred=moe/qt(.975,pred$DOLLAR df)
END_SOLUTION
#########################################################

ENDDOCUMENT();


#########################################################
##KEYWORDS('Inference'; 'confidence intervals for proportion', 'confidence
##intervals for population size'; 'find a 95% confidence interval for a
##population proportion', 'find approximate confidence interval for a population
##size given the count within the population with the characteristic of interest.) 
# DESCRIPTION
## DBsubject(Statistics)
## DBchapter(Experimental design)
## DBsection(Concepts)
## Date(2016/08/31)
## Institution(University of British Columbia)
## Author(Bo Chang)
## Level(3)
## level('5')

#########################################################
DOCUMENT();
## Initializations: (Required)
loadMacros(
  "PGstandard.pl",
  "PGchoicemacros.pl",
  "parserRadioButtons.pl",
  "MathObjects.pl",
  "parserMultiAnswer.pl",
  "RserveClient.pl",
  "answerHints.pl",
  "PGML.pl",
  "PGcourse.pl"
);

#########################################################
## Setup: this is where we use Perl and PG objects (Required)


###Random number generator seed based on student's login. No need to change.
Context("Numeric");
# warn("Student name: $studentName, login: $studentLogin, id: $studentID");
my $hash = crypt($studentLogin, 'a1');
# warn("crypt: $hash");
@nums = (0..9,'a'..'z','A'..'Z');
my %nums = map { $nums[$_] => $_ } 0..$#nums;
my $seed = 0;
$seed = $seed * 62 + $nums{$_} foreach split(//, substr($hash, -5, 5));
##warn("seed: " . $seed);

####Call R server
rserve_eval("set.seed($seed)"); ## can not combine with the rest

@yVec=rserve_eval('
y <- c(67, 79, 61, 75, 59, 90, 52, 87) + rnorm(8)
round(y, 2)
');

$array = qq(
\begin{array}{rrrc}
\hline
Conc & Grind & Time & \% U recovery \\
(x_1) & (x_2) & (x_3) & (y) \\
\hline
-1 &   -1 &     -1 &    @yVec[0]\\
-1 &   -1 &      1 &    @yVec[1] \\
-1 &    1 &     -1 &    @yVec[2] \\
-1 &    1 &      1 &    @yVec[3] \\
 1 &   -1 &     -1 &    @yVec[4] \\
 1 &   -1 &      1 &    @yVec[5] \\
 1 &    1 &     -1 &    @yVec[6] \\
 1 &    1 &      1 &    @yVec[7] \\
\hline
\end{array}
);




$mcA = new_multiple_choice();
@ansA = (
"percentage uranium recovery",
"a sample of ore",
"an operating condition",
"a small-scale experiment",
"a processing factor like \(x_1\)"
);

$mcA -> qa("", $ansA[1]);
$mcA->extra($ansA[0], $ansA[2], $ansA[3], $ansA[4]);

$mcB = new_multiple_choice();
@ansB = (
"percentage uranium recovery",
"a sample of ore",
"the levels of \(x_1\), \(x_2\), and \(x_3\) defining an operating condition",
"a small-scale experiment",
"a level of \(x_1\)"
);

$mcB -> qa("", $ansB[0]);
$mcB->extra($ansB[1], $ansB[2], $ansB[3], $ansB[4]);


#########################################################
## Main Text: where all text goes (Required)
Context()->texStrings;
BEGIN_TEXT


A small-scale experiment was carried out to determine
operating conditions for leaching uranium from ore.
Three processing factors---acid concentration (\(x_1\)),
grind size (\(x_2\)), and processing time (\(x_3\))---were varied.
The response of interest was the percentage uranium recovery (\(y\)).
Eight different combinations of \(x_1\), \(x_2\), and \(x_3\) values were applied
to eight samples of ore,
giving the following data.

END_TEXT
BEGIN_PGML
[$array]
END_PGML
BEGIN_TEXT

In this table, -1 and 1 code ''low''
and ''high'' levels for each explanatory variable.


$BR
$BR

$BBOLD [A] $EBOLD What is an experimental unit in this experiment?
\{ $mcA->print_a() \}

$BR
$BR
$BBOLD [E] $EBOLD What is the response variable in this experiment?
\{ $mcB->print_a() \}

END_TEXT
#########################################################
## Answers evaluation (Required)

ANS( radio_cmp($mcA->correct_ans()) );
ANS( radio_cmp($mcB->correct_ans()) );



#########################################################
## Solution (Optional but recommended)
Context()->texStrings;
BEGIN_SOLUTION


END_SOLUTION
ENDDOCUMENT();

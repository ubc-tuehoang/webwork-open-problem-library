## -*- perl -*- ##
## Line above puts emacs in perl mode
##
## Description  
## Cylindrical Coordinates
## EndDescription

## Tagged by ynw2d

## DBsubject(Geometry)
## DBchapter(Vector geometry)
## DBsection(Coordinate systems)
## Author(Stewart)
## MLT(reccyl)
## Level(3)

DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "PGchoicemacros.pl",
  "MathObjects.pl",
  "Dartmouthmacros.pl",
  "PGcourse.pl"
);
 

Context('Numeric');

## Do NOT show partial correct answers
$showPartialCorrectAnswers = 1;

## Lots of set up goes here
$pi = acos(-1);

## Pick an angle from among pi/6, pi/4, pi/3
@angle_choice = NchooseK(3,1);

$theta= ($pi/6, $pi/4, $pi/3)[@angle_choice];

$theta_string = ("\pi/6","\pi/4","\pi/3")[@angle_choice];
$cos_theta = (" \frac{\sqrt{3}}{2} ", "\frac{\sqrt{2}}{2}"," \frac{1}{2}")[@angle_choice];
$sin_theta = (" \frac{1}{2} ", "\frac{\sqrt{2}}{2}","\frac{\sqrt{3}}{2}")[@angle_choice];

$radius = random(3,9,2);
$x = $radius * cos($theta);
$y = $radius * sin($theta);
$xs = "$radius \!\left($cos_theta\right)";
$ys = "$radius \!\left($sin_theta\right)";
$z = random(-10,10,1);

## Ok, we are ready to begin the problem...
##
TEXT(beginproblem());

BEGIN_TEXT
Express the point given in Cartesian coordinates in cylindrical coordinates 
\( (r, \theta, z) \).
$BR$BR
A) \( \left($xs,\ $ys,\ $z\right) =\) (  \{ans_rule(10)\},\{ans_rule(10)\},\{ans_rule(10)\} )
$BR$BR
B)\(\left(-$xs, $ys, $z\right)\) = \((\)\{ans_rule(10)\},\{ans_rule(10)\},\{ans_rule(10)\} \()\)
$BR$BR
C)\( \left($xs, -$ys, $z\right)\) = \((\)\{ans_rule(10)\},\{ans_rule(10)\},\{ans_rule(10)\} \()\)
$BR$BR
D)\(\left(-$xs, -$ys, $z \right)\) = \((\)\{ans_rule(10)\},\{ans_rule(10)\},\{ans_rule(10)\} \()\)

END_TEXT
@cylin1 = coordinates_cylindrical($x, $y, $z);
@cylin2 = coordinates_cylindrical(-$x, $y, $z);
@cylin3 = coordinates_cylindrical($x, -$y, $z);
@cylin4 = coordinates_cylindrical(-$x, -$y, $z);

ANS(num_cmp($cylin1[0]));
ANS(Real($cylin1[1])->with(period=>2*pi)->cmp());
ANS(num_cmp($cylin1[2]));  ## duh!  $z

ANS(num_cmp($cylin2[0]));
ANS(Real($cylin2[1])->with(period=>2*pi)->cmp());
ANS(num_cmp($cylin2[2]));  ## duh!  $z

ANS(num_cmp($cylin3[0]));
ANS(Real($cylin3[1])->with(period=>2*pi)->cmp());
ANS(num_cmp($cylin3[2]));  ## duh!  $z

ANS(num_cmp($cylin4[0]));
ANS(Real($cylin4[1])->with(period=>2*pi)->cmp());
ANS(num_cmp($cylin4[2]));  ## duh!  $z

ENDDOCUMENT();


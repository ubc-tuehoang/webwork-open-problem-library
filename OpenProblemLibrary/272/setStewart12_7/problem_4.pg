## -*- perl -*- ##
## Line above puts emacs in perl mode
##
## Description  
##   Spherical Coordinates
## EndDescription


## Tagged by ynw2d

## DBsubject(Geometry)
## DBchapter(Vector geometry)
## DBsection(Coordinate systems)
## Author(Stewart)
## MLT(rectspher)
## Level(3)
## MO(1)

DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGchoicemacros.pl",
  "Dartmouthmacros.pl",
  "contextFraction.pl",
  "PGcourse.pl"
);
 

## Do NOT show partial correct answers
$showPartialCorrectAnswers = 1;

## Lots of set up goes here
$pi = acos(-1);

## Pick an angle from among pi/6, pi/4, pi/3
@angle_choice = NchooseK(3,1);

#$angle_choice = 0;

$theta= ($pi/6, $pi/4, $pi/3)[@angle_choice];
$rho = random(3,9,2);

# $theta_string = ("\pi/6","\pi/4","\pi/3")[$angle_choice];
$cos_theta = ("(\sqrt{3}/2)", "(\sqrt{2}/2)","(1/2)")[@angle_choice];
$cos_theta_frac = ("1/2", "1/2","1/2")[@angle_choice];
$cos_theta_sqrt = ("3", "2","1")[@angle_choice];

$sin_theta = ("(1/2)", "(\sqrt{2}/2)","(\sqrt{3}/2)")[@angle_choice];
$sin_theta_frac = ("1/2", "1/2","1/2")[@angle_choice];
$sin_theta_sqrt = ("1", "2","3")[@angle_choice];


@phi_angle_choice = NchooseK(9,1);
#@phi_angle_choice = (5);

$phi = (0, $pi/6, $pi/4, $pi/3, $pi/2, 2*$pi/3, 3*$pi/4, 5*$pi/6, $pi)[@phi_angle_choice];

$rho_cos_phi_string = ("$rho", "$rho \sqrt{3}/2", "$rho
                   \sqrt{2}/2","$rho/2", "0", "- $rho/2","-
                   $rho \sqrt{2}/2", "- $rho \sqrt{3}/2",
                          "- $rho")[@phi_angle_choice];

$rho_cos_phi = ($rho, $rho*sqrt(3)/2, $rho*sqrt(2)/2, $rho/2, 0,
                   - $rho/2, - $rho*sqrt(2)/2, - $rho * sqrt(3)/2,
                   - $rho)[@phi_angle_choice];

$cos_phi_string = ("(1)", "(\sqrt{3}/2)", "(\sqrt{2}/2)","(1/2)",
                   "(0)", "(-1/2)","(-\sqrt{2}/2)", "(-\sqrt{3}/2)",
                   "(-1)")[@phi_angle_choice];
$cos_phi_string_frac= ("1", "1/2", "1/2","1/2","0", "-1/2","-1/2", "-1/2", "-1")[@phi_angle_choice];
$cos_phi_string_sqrt= ("1", "3", "2","1","0", "1", "2", "3", "1")[@phi_angle_choice];
$cos_phi = (1, sqrt(3)/2, sqrt(2)/2, 1/2, 0,
                   -1/2, -sqrt(2)/2, -sqrt(3)/2, -1)[@phi_angle_choice];

$sin_phi_string = ("(0)", "(1/2)", "(\sqrt{2}/2)","(\sqrt{3}/2)",
                    "(1)", "(\sqrt{3}/2)","(\sqrt{2}/2)","(1/2)",
                    "(0)")[@phi_angle_choice];
$sin_phi_string_frac = ("0", "1/2", "1/2","1/2","1", "1/2","1/2","1/2","0")[@phi_angle_choice];
$sin_phi_string_sqrt = ("0", "1", "2","3","1", "3","2","1","0")[@phi_angle_choice];

$sin_phi = (0, 1/2, sqrt(2)/2, sqrt(3)/2, 1,
                  sqrt(3)/2 , sqrt(2)/2, 1/2, 0)[@phi_angle_choice];


$x = $rho * cos($theta) * $sin_phi;
$y = $rho * sin($theta) * $sin_phi;
$z = $rho_cos_phi;

# the ugly version of the problem set up is here
$xs = "$rho $sin_phi_string $cos_theta";
$ys = "$rho $sin_phi_string $sin_theta ";
$zs = $rho_cos_phi_string;

# now we try to represent the same data in a much nicer way
Context("Fraction");
sub massage{
	my $frac = shift;
	my $sqrt = shift;

	if ( (int(sqrt($sqrt)))**2 == $sqrt ){
		$sqrt = sqrt($sqrt);
		if ($sqrt == 1){
			return ($frac, "");
		} else {
			$frac = Fraction($frac*$sqrt);
			return ($frac, "");
		}
	} else {
		return ($frac, "\sqrt{$sqrt}");
	}
	
	return (undef, undef);
}
$xs_frac = Fraction($rho)*Fraction($sin_phi_string_frac)*Fraction($cos_theta_frac);
$xs_sqrt = $sin_phi_string_sqrt*$cos_theta_sqrt;
($xs, $xs_sqrt) = massage($xs_frac, $xs_sqrt);

$ys_frac = Fraction($rho)*Fraction($sin_phi_string_frac)*Fraction($sin_theta_frac);
$ys_sqrt = $sin_phi_string_sqrt*$sin_theta_sqrt;
($ys, $ys_sqrt) = massage($ys_frac, $ys_sqrt);

$zs_frac = Fraction($rho)*Fraction($cos_phi_string_frac);
$zs_sqrt = $cos_phi_string_sqrt;
($zs, $zs_sqrt) = massage($zs_frac, $zs_sqrt);


## Ok, we are ready to begin the problem...
##
TEXT(beginproblem());

Context()->texStrings;
BEGIN_TEXT
Express the point given in Cartesian coordinates in spherical coordinates 
\((\rho, \theta, \phi)\). Note:  you really only have to do the work for one, if you use a little geometry and your knowledge of the trig functions.
$PAR
A) \( ($xs $xs_sqrt, $ys $ys_sqrt, $zs $zs_sqrt )\) = \{ ans_rule(30) \}
$BR $BR 
B)\((-$xs $xs_sqrt, $ys $ys_sqrt, $zs $zs_sqrt )\) = \{ ans_rule(30) \}
$BR $BR
C)\( ($xs $xs_sqrt, -$ys $ys_sqrt, -$zs $zs_sqrt )\) = \{ ans_rule(30) \}
$BR $BR
D)\( (-$xs $xs_sqrt, -$ys $ys_sqrt, -$zs $zs_sqrt )\) = \{ ans_rule(30) \}

$PAR
END_TEXT
Context()->normalStrings;

@spherical1 = coordinates_spherical($x, $y, $z);
@spherical2 = coordinates_spherical(-$x, $y, $z);
@spherical3 = coordinates_spherical($x, -$y, -$z);
@spherical4 = coordinates_spherical(-$x, -$y, -$z);

Context("Point");
@answers=(
	Point(@spherical1)->cmp(),
	Point(@spherical2)->cmp(),
	Point(@spherical3)->cmp(),
	Point(@spherical4)->cmp(),
	);
	
ANS(@answers);

ENDDOCUMENT();

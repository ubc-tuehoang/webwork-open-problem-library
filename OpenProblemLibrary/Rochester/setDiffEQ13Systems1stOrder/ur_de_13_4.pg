## DESCRIPTION
## Calculus
## ENDDESCRIPTION

## Tagged by tda2d

## DBsubject(Differential equations)
## DBchapter(Systems of differential equations)
## DBsection(Applications)
## Institution(Rochester)
## MLT(SDE-A-mixture)
## Level(5)
## MO(1)
## KEYWORDS('differential equation' 'first order' 'matrices' 'application')

DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGchoicemacros.pl",
  "parserMultiAnswer.pl",
  "PGcourse.pl"
);

Context("Numeric");

$water1 = Real(random(10,100,10));
$water2 = Real(random(10,100,10));
$salt1 = Real(random(100, 500, 5));
$salt2 = Real(random(100, 500, 5));

$salt_concentration1 = Real(random(10,50,5));
$salt_concentration2 = Real(random(10,50,5));

$flow_rate1 = Real(random(1,4,0.5));
$flow_rate2 = Real(random(1,4,0.5));

$tank2to1 = Real(random(1,4,0.5));
$tank1to2 = $flow_rate1 + $tank2to1;

$flow_out2 = $flow_rate2 +$tank1to2 - $tank2to1;

#install_problem_grader(~~&avg_problem_grader);

$showPartialCorrectAnswers=1;
TEXT(beginproblem());
Context()->texStrings;
BEGIN_TEXT

\{ image("ur_de_13_4.gif", width=>532, height=>243) \}

$PAR
Consider two interconnected tanks as shown in the figure above. 
Tank 1 initial contains $water1 L (liters) of water
and $salt1 g of salt, while tank 2 initially contains $water2 L of water
and $salt2 g of salt.  Water containing $salt_concentration1 g/L of salt
is poured into tank1 at a rate of $flow_rate1 L/min while the mixture
flowing into tank 2 contains a salt concentration of $salt_concentration2 g/L of
salt and is flowing at the rate of $flow_rate2 L/min. 
The two connecting tubes have a flow rate of $tank1to2 L/min from
tank 1 to tank 2; and of $tank2to1 L/min from tank 2 back to tank 1. 
Tank 2 is drained at the rate of $flow_out2 L/min.
$PAR
You may assume that the solutions in each tank are thoroughly mixed
so that the concentration of the mixture leaving any tank along any
of the tubes has the same concentration of salt as the tank as a
whole. (This is not completely realistic, but as in real physics,
we are going to work with the approximate, rather than exact description. 
The 'real' equations of physics are often too complicated to even write
down precisely, much less solve.)
$PAR
How does the water in each tank change over time?
$PAR
Let \(p(t)\) and \(q(t) \) be the number of grams (g) of salt at time t in tanks 1 and 2 respectively.
Write differential
equations for \( p \) and \( q \).
(As usual, use the symbols \(p\) and \(q\) rather than \(p(t)\) and \(q(t)\).)
$BR
\( p'= \) \{ ans_box(4,60) \}
$BR
\( q'= \) \{ ans_box(4,60) \}
$PAR
END_TEXT

Context()->normalStrings;
Context()->variables->are(
  'p' => ["Real", limits => [0,4]],
  'q' => ["Real", limits => [0,4]],
  't' => ["Real", limits => [1,2]]
);

$pp = Compute("$salt_concentration1*$flow_rate1 - ($tank1to2/$water1)*p + ($tank2to1/$water2)*q");

$qp = Compute("$salt_concentration2*$flow_rate2 - ( $tank2to1/$water2 + $flow_out2/$water2 )*q + ( $tank1to2/$water1 )*p");


$formulaChecker = sub {
  my ($correct, $student, $ansHash) = @_;
  return ($student - $correct) == Formula(0);
};


ANS($pp->cmp( checker => $formulaChecker ));

ANS($qp->cmp( checker => $formulaChecker ));
     
Context("Matrix");
$initVals = Matrix([$salt1,$salt2])->transpose;

Context()->texStrings;
BEGIN_TEXT
Give the initial values $BR
\(\begin{bmatrix} p(0) \\ q(0) \end{bmatrix}\) = \{$initVals->ans_array\}
$PAR
END_TEXT
Context()->normalStrings;

ANS($initVals->cmp());

#left hand side vector answers
$v1 = -$salt_concentration1*$flow_rate1;
$v2 = -$salt_concentration2*$flow_rate2;

# matrix answers
$a11 = -$tank1to2/$water1;
$a12 = $tank2to1/$water2;
$a21 = $tank1to2/$water1;
$a22 = -$tank2to1/$water2 - $flow_out2/$water2;

$v = Matrix([$v1,$v2])->transpose;
$a = Matrix([
 [$a11, $a12],
 [$a21, $a22]
]);

$det = $a->det;  # never vanishes with this setup 
$const = ($a->inverse)*$v; #constant solution

# The next question has infinitely many correct answers so just  
# check that the equations are independent and are satisfied by the 
# constant solution.

$multians = MultiAnswer($v,$a)->with(
  singleResult => 1,
  checker => sub {
    my ( $correct, $student, $answerHash ) = @_;
    my @s = @{$student};
    $sv = Matrix($s[0]);
    $sa = Matrix($s[1]);
    return ($sv == $sa*$const) && !(($sa->det)==0);
  }
); 

Context()->texStrings;
BEGIN_TEXT
Show the equation that needs to be solved to find a constant solution to the differential equation:
$BR
\{ $multians->ans_array(10) \}\( = \) \{ $multians->ans_array(10)\}
\(\begin{bmatrix} p \\ q \end{bmatrix}\)
$PAR

A constant solution is obtained if \(p(t) = \) \{ans_rule(10)\} for all time t and
\(q(t) = \) \{ans_rule(10)\} for all time t.

END_TEXT
Context()->normalStrings;

ANS( $multians->cmp());

ANS(($const->element(1,1))->cmp());
ANS(($const->element(2,1))->cmp());

ENDDOCUMENT();

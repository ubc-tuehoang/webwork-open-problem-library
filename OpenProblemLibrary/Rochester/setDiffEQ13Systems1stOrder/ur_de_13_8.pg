## DESCRIPTION
## Calculus
## ENDDESCRIPTION

## Tagged by tda2d

## DBsubject(Differential equations)
## DBchapter(Systems of differential equations)
## DBsection(Phase planes)
## Institution(ASU)
## MO(1)
## MLT(SDE-PP-DRE)
## Level(4)
## KEYWORDS('differential equation' 'first order' 'matrices' 'eigenvalue')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGchoicemacros.pl",
  "PGcourse.pl"
);

Context("Matrix");

$showPartialCorrectAnswers = 1;

# define change-of-basis matrix
do {
  $a11 = non_zero_random(-5,5,1);
  $a12 = non_zero_random(-5,5,1);
  $a21 = random(-5,5,1);
  $a22 = random(-5,5,1);
} until ( $a11*$a22-$a21*$a12 != 0 && $a11*$a12 != 0 && $a21*$a22 != 0); 
$a = Matrix([
  [$a11,$a12],
  [$a21,$a22]
]);
$a_det=$a->det;

#define inverse matrix
$b = $a->inverse;

#define eigenvalues and vectors
@eigVal = (-5..5)[NchooseK(11,2)];  #two distinct integers 
$eigVal[0]=$eigVal[0]*$a_det;
$eigVal[1]=$eigVal[1]*$a_det;
$e = Matrix([
  [$eigVal[0],0],
  [0,$eigVal[1]]
]);  
if ( $eigVal[0]<$eigVal[1] ){
  $smallEigVal = $eigVal[0];
  $smallEigVal_vector = ColumnVector($a->column(1));
  $largeEigVal = $eigVal[1];
  $largeEigVal_vector = ColumnVector($a->column(2));
}
else {
  $smallEigVal = $eigVal[1];
  $smallEigVal_vector = ColumnVector($a->column(2));
  $largeEigVal = $eigVal[0];
  $largeEigVal_vector = ColumnVector($a->column(1));
}
$matrix = $a * $e *$b;

TEXT(beginproblem());
Context()->texStrings;
BEGIN_TEXT
Calculate the eigenvalues of this matrix:
$PAR
[Note-- you'll probably want to use a calculator or computer to estimate the roots of the polynomial which defines
the eigenvalues.  You also may want to view a 
\{htmlLink("http://comp.uark.edu/~aeb019/pplane.html", q! phase plane plot!)\} (right click to open in a new window).]
] 
$PAR
\( A = $matrix\)
$PAR  
smaller eigenvalue \( = \) \{ans_rule(10)\} 
$PAR
associated eigenvector \( =  \) \{ $smallEigVal_vector->ans_array \}   
$PAR
larger eigenvalue \( = \) \{ ans_rule(10) \}
$PAR
associated, eigenvector  \( = \)  \{ $largeEigVal_vector->ans_array \}   

END_TEXT
Context()->normalStrings;

ANS($smallEigVal->cmp(tolerance => 0.1));
ANS($smallEigVal_vector->cmp(tolerance => 0.1, parallel=>1));
ANS($largeEigVal->cmp(tolerance => 0.1));
ANS($largeEigVal_vector->cmp(tolerance => 0.1, parallel=>1));


#  behavior of differential equations defined by A
$mc = new_multiple_choice();  # the parens are important -- otherwise the name of the object is new_multiple_choice.

@answers =(
	'All of the solution curves would run away from 0. (Unstable node)',
	'All of the solutions curves would converge towards 0. (Stable node)',
	'The solution curves would race towards zero and then veer away towards infinity. (Saddle)',
	'The solution curves converge to different points on parallel paths.',
	'The solution curves diverge from different points on parallel paths.'
);

if ($smallEigVal>0) {$ind=0;} #unstable node
elsif ($largeEigVal<0) {$ind=1;} #stable node
elsif ($smallEigVal<0 && $largeEigVal>0) {$ind = 2;} #saddle
elsif ($smallEigVal<0 && $largeEigVal==0) {$ind=3;}  #converge along parallels
elsif ($smallEigVal==0 && $largeEigVal>0) {$ind=4; }  #diverge along parallels

$correct=splice(@answers,$ind,1); # correct answer
$mc->qa(
	q!If \(y' = Ay\) is a differential equation, how would the solution curves behave?!,
	$correct  
	);
	
$mc->extra(@answers);

Context()->texStrings;
BEGIN_TEXT
$HR
$PAR $correct
  $PAR 
 \{ $mc->print_q() \} 
$PAR 
\{ $mc->print_a() \}
$HR
END_TEXT
Context()->normalStrings;

ANS(radio_cmp($mc->correct_ans));


ENDDOCUMENT() ;        





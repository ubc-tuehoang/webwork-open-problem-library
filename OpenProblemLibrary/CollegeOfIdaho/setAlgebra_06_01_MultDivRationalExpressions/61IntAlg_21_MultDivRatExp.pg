##DESCRIPTION
##  Rational Expressions and Functions: Multipy and Divide
## 
##ENDDESCRIPTION
## DBsubject(Algebra)
## DBchapter(Rational equations and functions)
## DBsection(Simplifying)
## Institution(The College of Idaho)
## Author(RA Cruz)
## MLT(Subtract_fractions)
## Level(2)
## TitleText1('Essentials of Intermediate Algebra')
## AuthorText1('Blitzer')
## EditionText1('1')
## Section1('6.1')
## Problem1('')
## KEYWORDS('rational expressions','rational functions')
## Date: 2007/11

DOCUMENT(); # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "bizarroArithmetic.pl",
  "PGcourse.pl"
);

TEXT(beginproblem());

######################################
#  Setup
#  Form: (x-a) * (x+b)(x+c)/(x-a)(x+d), 

$a = random(2,5,1);
do {$b = non_zero_random(-5,5,1);} while ($b==-1*$a); 
$c = random(2,5,1);
do {$c = non_zero_random(-5,5,1);} while ($c==-1*$b);
do {$d = non_zero_random(-8,8,1);} while ($d==$a || $d==$c || $d==$b);

($f1,$f2) = (Formula("(x - $a)")->reduce->TeX,
             Formula("(x^2 + ($b+$c)x + $b*$c)/(x^2 + ($d-$a) x - $a*$d)")->reduce->TeX);

######################################
#  Main text

Context('Numeric');
Context()->operators->set(
   '/' => {class => 'bizarro::BOP::divide', isCommand => 1},
   '/ ' => {class => 'bizarro::BOP::divide', isCommand => 1},
   ' /' => {class => 'bizarro::BOP::divide', isCommand => 1},
   '//' => {class => 'bizarro::BOP::divide', isCommand => 1},
   '*' => {class => 'bizarro::BOP::multiply', isCommand => 1},
   '* ' => {class => 'bizarro::BOP::multiply', isCommand => 1},
   ' *' => {class => 'bizarro::BOP::multiply', isCommand => 1});


BEGIN_TEXT
Multiply and simplify your answer.
\[($f1) \cdot $f2\]
$PAR
Answer:  \{ ans_rule(30) \} 
END_TEXT

######################################
#  Answer

# \(\hskip 15pt  \displaystyle $poly1n \cdot \frac{$poly2n}{$poly2d}\)

$num = nicestring([1, $b+$c, $b*$c]);
$answer = Compute("($num)/(x+$d)");
ANS($answer -> cmp(
   checker=>sub{
      my ( $correct, $student, $ansHash ) = @_;
      return 0 if $ansHash->{isPreview} || $correct != $student;
      $student = $ansHash->{student_formula};
      $correct = $correct->{original_formula} if defined $correct->{original_formula};
      $student = Formula("$student"); $correct = Formula("$correct");
      return 0 unless ($correct == $student);
      Context()->flags->set(bizarroDiv=>1);
      delete $correct->{test_values};
      delete $student->{test_values};
      $student = Formula("$student"); $correct = Formula("$correct");
      my $OK = ($correct == $student);
      Context()->flags->set(bizarroDiv=>0);
      Value::Error("Your answer needs to be simplified further") unless $OK;
      return $OK;
})); 

#ANS(RationalExpEvaluator("($num)/(x+$d)","x")); 

$showPartialCorrectAnswers = 1;


ENDDOCUMENT();

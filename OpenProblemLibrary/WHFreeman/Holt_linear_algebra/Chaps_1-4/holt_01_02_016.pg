# DESCRIPTION
# Determine the row operation performed and fix error.
# ENDDESCRIPTION

## DBsubject(Linear algebra)
## DBchapter(Matrices)
## DBsection(Row operations)
## Institution(University of Missouri-Columbia)
## Author(Rick Lynch)
## MLT(row_error)
## MLTleader(1)
## Level(3)
## MO(1)
## TitleText1('Linear Algebra')
## AuthorText1('Holt')
## EditionText1('1e')
## Section1('1.2')
## Problem1('16')
## KEYWORDS('linear equations', 'system', 'systems', 'matrices')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "MatrixReduce.pl",
  "PGchoicemacros.pl",
  "parserPopUp.pl",
  "PGcourse.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Matrix");

#Create 3x4 matrix with rank 3 whose third row has only one nonzero element
do {
  $M = Matrix([
    [non_zero_random(-5,5), non_zero_random(-5,5), non_zero_random(-5,5), non_zero_random(-5,5)], 
    [non_zero_random(-5,5),non_zero_random(-5,5),non_zero_random(-5,5), non_zero_random(-5,5)],
    [0,0,0,0]
  ]);
  # insert zero into a random position in first two rows
  $zero_row = random(1,2);
  ($zero_column,$one_column) = (1,2,3,4)[NchooseK(4,2)]; 
  change_matrix_entry($M,[$zero_row,$zero_column],0);
  change_matrix_entry($M,[3,$one_column],1);
  $Mrref = rref($M); 
} until ( !($M->row(3)->isZero) );  

$A=Matrix([$M->row(1),$M->row(2)]); 

#add $c times $rowAdd to $rowBase of $A to obtain $B
#require that column $one_column of $B be nonzero
#this must happen because $A has only one zero

do {
  ($rowBase,$rowAdd) = (1,2)[NchooseK(2,2)];
  $c = random(2,4)*random(-1,1,2);
  $E = elem_matrix_row_add(2,$rowBase,$rowAdd,$c);
  $B = $E*$A;
} until ( !($B->column($one_column)->isZero) );

#change a nonzero entry of column $one_column of $B to obtain $N

($i,$j) = (1,2)[NchooseK(2,2)];
if ( $B->element($i,$one_column)->isZero ){ $badRow = $j;}
else {$badRow = $i;}

do {$badEntry = non_zero_random(-9,9);} until ( $badEntry != ($B->element($badRow,$one_column)) );

$N=Matrix($B);
change_matrix_entry($N,[$badRow,$one_column],$badEntry);

$pop = PopUp(["select", "-->", "<-->"], "-->");


Context()->variables->are(R1 => "Real",R2 => "Real");
if ($rowBase == 1){
  $lhs = Formula("$c*R2+R1");
  $rhs = Formula("R1");
}
else {
  $lhs = Formula("$c*R1+R2");
  $rhs = Formula("R2");
}


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
A single row operation was performed on the matrix on the left to produce the matrix on the right. Unfortunately, an error was made when performing the row operation.
$PAR
\[ $A  \text{ row op produces: } $N \]
$PAR
First identify the row operation, then fix the error. Use ${BBOLD}R1${EBOLD}, and ${BBOLD}R2${EBOLD} to represent the rows \(R_1\), \(R_2\).  For example, if the operation were "add 2 times row 4 to row 6" then the answer would be "\(2*R4+R6 \longrightarrow R6\)".   If it were "swap row 4 with row 6" the answer would be "\(R4 \longleftrightarrow R6\)". 
$PAR
Row operation: \{ans_rule(10)\} \{$pop->menu()\} \{ans_rule(10)\} $PAR
Fixed right hand side: $BR \{ $B->ans_array \}
END_TEXT
Context()->normalStrings;


###########################################################################
# check the answer  
###########################################################################
ANS($lhs->cmp());
ANS($pop->cmp());
ANS($rhs->cmp());
ANS($B->cmp());


###########################################################################
# solution
###########################################################################
Context()->texStrings;
BEGIN_SOLUTION
${BBOLD}SOLUTION:${EBOLD}
\($lhs \longrightarrow $rhs\), \($dB\)
END_SOLUTION
Context()->normalStrings;

ENDDOCUMENT();

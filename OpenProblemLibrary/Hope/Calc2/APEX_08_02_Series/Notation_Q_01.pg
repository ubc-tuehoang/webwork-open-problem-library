## DBsubject(Calculus - single variable)
## DBchapter(Infinite sequences and series)
## DBsection(Series notation)
## Institution(Hope College)
## Author(Paul Pearson)
## Level(2)
## MO(1)
## TitleText1('APEX Calculus')
## AuthorText1('Hartman')
## EditionText1('3.0')
## Section1('8.2')
## Problem1('')


DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "parserMultiAnswer.pl",
  "PGunion.pl",
  "PGML.pl",
  "PGcourse.pl"
);
TEXT(beginproblem());
$showPartialCorrectAnswers = 1;


Context("Numeric")->variables->are(n=>['Real', limits=>[1,20], resolution=>1]);

$start = 1; 
$stop = 5; # random(5,10,1);
$stop1 = $stop + 1;

$k1 = Real("$start");
$k2 = Real("$stop");
$k3 = Compute("infinity");
$f = Formula("$stop1/n");

@terms = ();
$j = 0;
foreach my $k ($k1..$k2) {
  if ($k == 1) { $terms[$j] = "$stop1"; } else { $terms[$j] = "\frac{$stop1}{$k}"; }
  $j = $j + 1;
}

$sum = join('+',@terms);
$sum =~ s/^~~+//; # remove leading + if it exists
$sum = $sum . "+\cdots";

###################################
$multians = MultiAnswer($k3,$k1,$f)->with(

  singleResult => 1,
  allowBlankAnswers => 1,
  format =>  "upper = %s; lower = %s; term = %s",
  tex_format =>  "\displaystyle\sum^{%s}_{n=%s} \left( %s \right)",

  checker => sub {
      my ( $correct, $student, $self ) = @_;
      my @c = ();
      my @s = ();
      ( $c[0], $c[1], $c[2] ) = @{$correct};
      ( $s[0], $s[1], $s[2] ) = @{$student};

      # warn $s[0], $s[1], $s[2]; # for debugging

      Value::Error('All answer blanks must be nonempty and have answers of the appropriate type') if 
      !( $c[0]->typeMatch($s[0]) && $c[1]->typeMatch($s[1]) && $c[2]->typeMatch($s[2]) );

      #Value::Error('Your sum does not have the correct number of terms') if ( ($c[0] - $c[1]) != ($s[0] - $s[1]) );

      my $j = 0;
      my @cor_terms = ();
      foreach my $i ($c[1]..($c[1]+10)) {
         $cor_terms[$j] = $c[2]->eval(n=>$i);
         #warn $cor_terms[$j];
         $j = $j + 1;
      }

      my $j = 0;
      my @stu_terms = ();
      foreach my $i ($s[1]..($s[1]+10)) {
         $stu_terms[$j] = $s[2]->eval(n=>$i);
         #warn $stu_terms[$j];
         $j = $j + 1;
      }

      foreach my $i (0..$#cor_terms) { 
          #warn $cor_terms[$i] != $stu_terms[$i];
          if ($cor_terms[$i] != $stu_terms[$i]) { return 0; }
      }
      return 1;
      
  }
);
###################################



#############################
sub displayfrac {
    my $ma = shift; # input is a multianswer object
    ANS($ma->cmp);
    if ($displayMode eq 'TeX') {
      "\(\displaystyle $sum = \sum_{n=".$ma->ans_rule(10)."}^{".$ma->ans_rule(10)."}".$ma->ans_rule(10)."\)";
    } else {
      "<table style='display:inline-block; vertical-align:middle; border:none;'><tr><td> \( \displaystyle $sum = \) </td><td>".$ma->ans_rule(5).$BR."\( \displaystyle \sum \)".$BR."\( n= \)".$ma->ans_rule(3)."</td><td>".$ma->ans_rule(10)."</td></tr></table>" 
    }
}
#############################


BEGIN_PGML
Write the infinite series using sigma notation.

[@ displayfrac($multians) @]***

The form of your answer will depend on your choice of the lower limit of summation.  Enter [| infinity |] for [` \infty `].
END_PGML

COMMENT('MathObject version.  Allows the student to choose the starting value for the index n.  Uses parserMultiAnswer.pl');

ENDDOCUMENT();




sub displayfrac {
    my $ma = shift; # input is a multianswer object
    ANS($ma->cmp);
    if ($displayMode eq 'TeX') {
      "\(\displaystyle \frac{".$ma->ans_rule(10)."}{".$ma->ans_rule(10)."} \)";
    } else {
      "<table style='display:inline-block; vertical-align:middle; border:none;'><tr><td></td><td>".$ma->ans_rule(5)."</td><td></td></tr><tr><td>\( $sum = \)</td><td>\( \displaystyle \sum \)</td><td>".$ma->ans_rule(15)."</td></tr><tr><td></td><td>\( n= \)".$ma->ans_rule(3)."</td><td></td></tr></table>" 
    }
}

## DESCRIPTION
## Linear transformations
## ENDDESCRIPTION

## DBsubject(Linear algebra)
## DBchapter(Euclidean spaces)
## DBsection(Coordinate vectors and change of basis)
## Date(February 2016)
## Institution(Hope College)
## Author(Paul Pearson)
## Level(4)
## MO(1)
## KEYWORDS('linear transformations','kernel','image')

DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGgraphmacros.pl",
  "PGgraphgrid.pl",
  "parserPopUp.pl",
  "PGML.pl",
  "scaffold.pl",
  "PGchoicemacros.pl",
  "unionTables.pl",
  "PGcourse.pl"
);
$showPartialCorrectAnswers = 1;
$refreshCachedImages = 1;
TEXT(beginproblem()); 

Context('Matrix')->variables->are('x'=>'Real','y'=>'Real');
Context()->constants->remove(i,j,k);
Context()->noreduce('(-x)-y','(-x)+y');

######################################
#  Linear transformation

do {
  $a11 = non_zero_random(-4,4,1);  $a12 = non_zero_random(-4,4,1);
  $a21 = non_zero_random(-4,4,1);  $a22 = non_zero_random(-4,4,1);

  $A = Matrix([
  [$a11,$a12],
  [$a21,$a22]
  ]);
} until ($A->det != 0);

$a1 = $A->column(1);
$a2 = $A->column(2);

$Ainv = $A->inverse;


#####################################
#  Basis vectors

do {
  $B = Matrix([
  [non_zero_random(-2,2,1),non_zero_random(-2,2,1)],
  [non_zero_random(-2,2,1),non_zero_random(-2,2,1)],
  ]);
  $b1 = Vector($B->column(1));
  $b2 = Vector($B->column(2));
} until (
  abs( ($b1 . $b2) / (norm($b1) * norm($b2)) ) < 0.9 # ensure angle between vectors is between 25 and 155 degrees
);
$b11 = $B->element(1,1);  $b12 = $B->element(1,2);
$b21 = $B->element(2,1);  $b22 = $B->element(2,2);

do {
  $C = Matrix([
  [non_zero_random(-2,2,1),non_zero_random(-2,2,1)],
  [non_zero_random(-2,2,1),non_zero_random(-2,2,1)],
  ]);
  $c1 = Vector($C->column(1));
  $c2 = Vector($C->column(2));
} until (
  abs( ($c1 . $c2) / (norm($c1) * norm($c2)) ) < 0.9 # ensure angle between vectors is between 25 and 155 degrees
  && $C != $B 
);
$c11 = $C->element(1,1);  $c12 = $C->element(1,2);
$c21 = $C->element(2,1);  $c22 = $C->element(2,2);

$CinvAB = ($C->inverse) * $A * $B;

$BinvAinvC = ($B->inverse) * ($A->inverse) * $C;


######################################
#  Coordinate vectors

$X_B = Matrix([
[non_zero_random(-3,3,1)],
[non_zero_random(-3,3,1)]
]);
$X_S = $B * $X_B;
$Y_S = $A * $X_S;
$Y_C = ($C->inverse) * $Y_S;

$x_B = Vector($X_B);
$x_S = Vector($X_S);
$y_S = Vector($Y_S);
$y_C = Vector($Y_C);

$y_S2 = Vector($Y_S);
$y_S3 = Vector($Y_S);

######################################
#  Construct graph canvases

@gr = ();

# $gr[0] = top left, $gr[1] = top right
# $gr[2] = bottom left, $gr[2] = bottom right

$pix = 200;

# construct graph canvases
foreach my $k (0..3) {
  $gr[$k] = init_graph(-4,-4,4,4, axes=>[0,0], pixels=>[$pix,$pix]);
  $gr[$k]->lb( new Label(3.5,0.1,'x','black', 'center' , 'bottom') );
  $gr[$k]->lb( new Label(0.1,3.5,'y','black', 'left' , 'middle') );
}

# square grid
foreach my $k (0..1) {
  foreach my $i (-3..-1,1..3) {
    $gr[$k]->moveTo($i,-4); $gr[$k]->lineTo($i,4,'gray',1);
    $gr[$k]->moveTo(-4,$i); $gr[$k]->lineTo(4,$i,'gray',1);
    $gr[$k] -> lb(new Label ($i,-3.5,$i,'black','center','middle'));
    $gr[$k] -> lb(new Label (-3.5,$i,$i,'black','center','middle'));
  }
}

# parallelogram grid
graphgrid1($gr[2], $B, -6,-6,6,6, 'gray', 1);
graphgrid1($gr[3], $C, -6,-6,6,6, 'gray', 1);


##############################################
#  Plot vectors in domain and codomain

# plot and label the basis vectors
foreach my $k (0,2) {
  $gr[$k]->moveTo(0,0); $gr[$k]->arrowTo($b11,$b21,'blue',2);
  $gr[$k]->moveTo(0,0); $gr[$k]->arrowTo($b12,$b22,'blue',2);
  $gr[$k]->lb( new Label($b11,$b21,'b1','blue', ($b11 < 0) ? 'left' : 'right' , ($b21 < 0) ? 'top' : 'bottom'));
  $gr[$k]->lb( new Label($b12,$b22,'b2','blue', ($b12 < 0) ? 'left' : 'right' , ($b22 < 0) ? 'top' : 'bottom'));
}

foreach my $k (1,3) {
  $gr[$k]->moveTo(0,0); $gr[$k]->arrowTo($c11,$c21,'blue',2);
  $gr[$k]->moveTo(0,0); $gr[$k]->arrowTo($c12,$c22,'blue',2);
  $gr[$k]->lb( new Label($c11,$c21,'c1','blue', ($c11 < 0) ? 'left' : 'right' , ($c21 < 0) ? 'top' : 'bottom'));
  $gr[$k]->lb( new Label($c12,$c22,'c2','blue', ($c12 < 0) ? 'left' : 'right' , ($c22 < 0) ? 'top' : 'bottom'));
}

# standard basis vectors
foreach my $k (0..1) {
  $gr[$k]->moveTo(0,0); $gr[$k]->arrowTo(1,0,'red',2);
  $gr[$k]->moveTo(0,0); $gr[$k]->arrowTo(0,1,'red',2); 
  $gr[$k]->lb( new Label(1.25,0,'e1','red', 'left', 'bottom') );
  $gr[$k]->lb( new Label(0.1,1.25,'e2','red', 'left', 'bottom') );
}


@fig = ();
foreach my $i (0..3) {
  $fig[$i] = image( insertGraph($gr[$i]), width=>$pix, height=>$pix, tex_size=>400 );
}

$table = 
BeginTable().
  AlignedRow(["Standard basis \( \mathcal{S} = \lbrace \mathbf{e_1}, \mathbf{e_2} \rbrace \)", " ", "Standard basis \( \mathcal{S} = \lbrace \mathbf{e_1}, \mathbf{e_2} \rbrace \)"]).
  AlignedRow([ $fig[0], "\( \stackrel{\displaystyle \lbrack f \rbrack_\mathcal{S}^\mathcal{S}}{\to} \)", $fig[1] ]).
  TableSpace(5,0).
  AlignedRow(["\( \lbrack id \rbrack_\mathcal{B}^\mathcal{S} \ \uparrow \)", " ", "\( \lbrack id \rbrack_\mathcal{C}^\mathcal{S} \ \uparrow \)"]).
  TableSpace(5,0).
  AlignedRow([ $fig[2], "\( \stackrel{\displaystyle \lbrack f \rbrack_\mathcal{B}^\mathcal{C}}{\to} \)", $fig[3] ]).
  AlignedRow(["Custom basis \( \mathcal{B} = \lbrace \mathbf{b_1}, \mathbf{b_2} \rbrace \)", " ", "Custom basis \( \mathcal{C} = \lbrace \mathbf{c_1}, \mathbf{c_2} \rbrace \)"]).
EndTable();


#######################################
Scaffold::Begin(
    can_open => "when_previous_correct",
    is_open  => "first_incorrect",
    hardcopy_is_open => "always",
);

BEGIN_PGML
The standard basis [` \mathcal{S} = \lbrace \mathbf{e_1}, \mathbf{e_2} \rbrace `] and two custom bases [` \mathcal{B} = \lbrace \mathbf{b_1}, \mathbf{b_2} \rbrace `] and [` \mathcal{C} = \lbrace \mathbf{c_1}, \mathbf{c_2} \rbrace `] for [`\mathbb{R}^2`] are shown in the figures below.  Suppose that [` f : \mathbb{R}^2 \to \mathbb{R}^2 `] is the linear transformation defined by 

>> [` f(x,y) = x [$a1] + y [$a2] `] <<

relative to the standard basis in the domain and the standard basis in the codomain.

>> [@ $table @]*** <<
[$PAR]*
END_PGML

Section::Begin("Part 1: Matrices for the linear transformation");
BEGIN_PGML
a. Find the matrix [`A`] for the linear transformation [`f`] relative to the standard basis in the domain and in the codomain.  That is, find the matrix [`A`] such that [` \lbrack f \rbrack_\mathcal{S}^\mathcal{S} (\mathbf{x}) = A \mathbf{x}`].

    [` A = `] [_____]*{$A}

b. Find the change of basis matrix from [`\mathcal{B}`]-coordinates to standard [`\mathcal{S}`]-coordinates.  That is, find the matrix [`B`] such that [` \lbrack id \rbrack_\mathcal{B}^\mathcal{S} (\mathbf{x}) = B \mathbf{x}`].

    [` B = `] [____]*{$B}

c. Find the change of basis matrix from [`\mathcal{C}`]-coordinates to standard [`\mathcal{S}`]-coordinates.  That is, find the matrix [`C`] such that [` \lbrack id \rbrack_\mathcal{C}^\mathcal{S} (\mathbf{x}) = C \mathbf{x}`].

    [` C = `] [____]*{$C}

b. Find the matrix [`D`] for the linear transformation [`f`] relative to the basis [`\mathcal{B}`] in the domain and [`\mathcal{C}`] in the codomain.  That is, find the matrix [`D`] such that  [` \lbrack f \rbrack_\mathcal{B}^\mathcal{C} (\mathbf{x}) = D \mathbf{x}`].

    [` D = `] [_____]*{$CinvAB}
END_PGML
Section::End();


Section::Begin("Part 2: Mapping coordinate vectors");
BEGIN_PGML
Suppose [`\mathbf{x}`] is a vector in the domain of [`f`] with coordinates [` [$x_S] `] relative to the standard basis.

a. What are the [`\mathcal{B}`]-coordinates for [`\mathbf{x}`]?  Enter your answer as a coordinate vector of the form [| <1,2> |].

    [` \lbrack \mathbf{x} \rbrack_\mathcal{B} = `] [___________________]{$x_B}

b. What are the [`\mathcal{C}`]-coordinates for [` f(\mathbf{x}) `]?  Enter your answer as a coordinate vector of the form [| <1,2> |].

    [` \lbrack f(\mathbf{x}) \rbrack_\mathcal{C} = `] [___________________]{$y_C}

c. What are the standard coordinates for [` f(\mathbf{x}) `]?  Enter your answer as a coordinate vector of the form [| <1,2> |].

    [` \lbrack f(\mathbf{x}) \rbrack_\mathcal{S} = `] [___________________]{$y_S}
END_PGML
Section::End();


Section::Begin("Part 3: Verifying the diagram is commutative");
BEGIN_PGML
As before, suppose [`\mathbf{x}`] is a vector in the domain of [`f`] with coordinates [` [$x_S] `] relative to the standard basis.

a. What is [`A [$X_S] `]?  Enter your answer as a coordinate vector of the form [| <1,2> |].

    [` A [$X_S] = `] [___________________]{$y_S2}

b. What is [` C D B^{-1} [$X_S] `]?  Enter your answer as a coordinate vector of the form [| <1,2> |].

    [` C D B^{-1} [$X_S] = `] [___________________]{$y_S3}

Note: You have just verified that the mapping [`\mathbf{x} \mapsto f(\mathbf{x}) `] is the same whether it is done across the top of the diagram (from the upper-left corner of the diagram to the upper-right corner) or is done by going down, across the bottom, and then up (from the upper-left, to the lower-left, to the lower-right, to the upper-right).
END_PGML
Section::End();

Scaffold::End();

ENDDOCUMENT();

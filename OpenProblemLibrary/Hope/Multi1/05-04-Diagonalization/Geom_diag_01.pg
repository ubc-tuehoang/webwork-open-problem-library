## DESCRIPTION
## Linear transformations
## ENDDESCRIPTION

## DBsubject(Linear algebra)
## DBchapter(Matrix factorizations)
## DBsection(Diagonalization)
## Date(February 2016)
## Institution(Hope College)
## Author(Paul Pearson)
## Level(4)
## MO(1)
## KEYWORDS('linear transformations','kernel','image')

DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGgraphmacros.pl",
  "PGgraphgrid.pl",
  "parserPopUp.pl",
  "PGML.pl",
  "scaffold.pl",
  "PGchoicemacros.pl",
  "unionTables.pl",
  "PGcourse.pl"
);
$showPartialCorrectAnswers = 1;
$refreshCachedImages = 1;
TEXT(beginproblem()); 

Context('Matrix');
Context()->constants->remove(i,j,k);
Context()->variables->are(
'b1'=>['Real','TeX'=>'\mathbf{b_1}'],
'b2'=>['Real','TeX'=>'\mathbf{b_2}'],
);

#####################################
#  Basis vectors

do {
  ($b11,$b12, 
   $b21,$b22) = (
  list_random(-2,-1.5,-1,1,1.5,2), list_random(-2,-1.5,-1,1,1.5,2),
  list_random(-2,-1.5,-1,1,1.5,2), list_random(-2,-1.5,-1,1,1.5,2),
  );
} until ( # non-parallel vectors, make sure third column vector fits on graph
  $b11 * $b22 != $b21 * $b12 
);

@theta = ("pi/3.5", "1.4*pi/3.5", "2.8*pi/3.5");
$t = $theta[random(0,2,1)];

# rotate
$R = Matrix([
[cos($t),-sin($t)],
[sin($t),cos($t)],
]);

# shear
$S = Matrix([
[1,0.5],
[0,1]
]);

# dilation
$D = Matrix([
[random(0.9,1.2,0.1),0],
[0,random(0.6,0.8,0.1)]
]);

$B = $R * $S * $D;

#########
# basis vectors 

$b1 = Vector($B->column(1));
$b2 = Vector($B->column(2));

$b11 = $B->element(1,1);  $b12 = $B->element(1,2);
$b21 = $B->element(2,1);  $b22 = $B->element(2,2);

#########
#  vector v

do {
  $x1 = random(-1,1,2) * random(2,3,1);
  $x2 = random(-1,1,2) * random(2,3,1);
  $v1 = $x1 * $b11 + $x2 * $b12;
  $v2 = $x1 * $b21 + $x2 * $b22;
} until ( abs($v1) < 3  && abs($v2) < 3 );

# B-coordinate vector for v
$v_B = Vector($x1,$x2);

#########
#  images of basis vectors

do {
  $e1 = non_zero_random(-4,4,1); # eigenvalue 1
  $e2 = non_zero_random(-4,4,1); # eigenvalue 2
  $fb1 = $e1 * $b1;
  $fb2 = $e2 * $b2;
} until ( norm($fb1) < 3.5 && norm($fb2) < 3.5 && $b1 != $fb1 && $b2 != $fb2 && $e1 != $e2);

$fb11 = ($fb1->value)[0];  $fb12 = ($fb2->value)[0];
$fb21 = ($fb1->value)[1];  $fb22 = ($fb2->value)[1];

$M = Matrix([
[$e1,0],
[0,$e2]
]);

######################################
#  Construct graph canvases

@gr = ();

$pix = 300;

# construct graph canvases
foreach my $k (0..1) {
  $gr[$k] = init_graph(-4,-4,4,4, axes=>[0,0], pixels=>[$pix,$pix]);
  $gr[$k]->lb( new Label(3.5,0.1,'x','black', 'center' , 'bottom') );
  $gr[$k]->lb( new Label(0.1,3.5,'y','black', 'left' , 'middle') );
  graphgrid1($gr[$k], $B, -10,-10,10,10, 'gray', 1); ########### add custom grid to canvas
}


##############################################
#  Plot vectors in domain and codomain


# plot and label the basis vectors
foreach my $k (0) {
  $gr[$k]->moveTo(0,0); $gr[$k]->arrowTo($b11,$b21,'black',2);
  $gr[$k]->moveTo(0,0); $gr[$k]->arrowTo($b12,$b22,'black',2); 
  $gr[$k]->lb( new Label($b11,$b21,'b1','black', ($b11 < 0) ? 'right' : 'left' , ($b21 < 0) ? 'top' : 'bottom'));
  $gr[$k]->lb( new Label($b12,$b22,'b2','black', ($b12 < 0) ? 'right' : 'left' , ($b22 < 0) ? 'top' : 'bottom'));

  $gr[$k]->moveTo(0,0); $gr[$k]->arrowTo($v1,$v2,'red',2);
  $gr[$k]->lb( new Label($v1,$v2,'v','red', ($v1 < 0) ? 'left' : 'right' , ($v2 < 0) ? 'top' : 'bottom'));
}


# plot and label the basis vectors
foreach my $k (1) {
  $gr[$k]->moveTo(0,0); $gr[$k]->arrowTo($fb11,$fb21,'blue',2);
  $gr[$k]->moveTo(0,0); $gr[$k]->arrowTo($fb12,$fb22,'blue',2); 
  $gr[$k]->lb( new Label($fb11,$fb21,'f(b1)','blue', ($fb11 < 0) ? 'right' : 'left' , ($fb21 < 0) ? 'top' : 'bottom'));
  $gr[$k]->lb( new Label($fb12,$fb22,'f(b2)','blue', ($fb12 < 0) ? 'right' : 'left' , ($fb22 < 0) ? 'top' : 'bottom'));

  $gr[$k]->moveTo(0,0); $gr[$k]->arrowTo($b11,$b21,'black',2);
  $gr[$k]->moveTo(0,0); $gr[$k]->arrowTo($b12,$b22,'black',2); 
#  $gr[$k]->lb( new Label($b11,$b21,'b1','black', ($b11 < 0) ? 'right' : 'left' , ($b21 < 0) ? 'top' : 'bottom'));
#  $gr[$k]->lb( new Label($b12,$b22,'b2','black', ($b12 < 0) ? 'right' : 'left' , ($b22 < 0) ? 'top' : 'bottom'));
}

$example = Matrix([[1,2],[3,4]]);

@fig = (
  image( insertGraph($gr[0]), width=>$pix, height=>$pix, tex_size=>900 ),
  image( insertGraph($gr[1]), width=>$pix, height=>$pix, tex_size=>900 ),
);

$table = 
BeginTable().
  AlignedRow([$fig[0], "\( \Large \stackrel{\displaystyle \lbrack f \rbrack_{\mathcal{B}}^{\mathcal{B}}}{\to} \)", $fig[1]]).
  AlignedRow(["\( \mathcal{B} \)-coordinate grid", " ", "\( \mathcal{B} \)-coordinate grid"]).
EndTable();

$popup1 = PopUp(['choose','is','is not','cannot be determined'],'is');
$popup2 = PopUp(['choose','is','is not','cannot be determined'],'is');

$example = Matrix([[1,2],[3,4]]);


#######################################
Scaffold::Begin(
    can_open => "when_previous_correct",
    is_open  => "first_incorrect",
    hardcopy_is_open => "when_previous_correct",
);

BEGIN_PGML
Suppose that [` f: \mathbb{R}^2 \to \mathbb{R}^2 `] is a linear transformation.  The figure shows a basis [` \mathcal{B} = \lbrace \mathbf{b_1}, \mathbf{b_2} \rbrace `] for [`\mathbb{R}^2`] for the domain and codomain (in black), its [`\mathcal{B}`]-coordinate grid in both the domain and the codomain (in gray), a vector [`\mathbf{v}`] in the domain (in red), and vectors [`f(\mathbf{b_1})`] and [`f(\mathbf{b_2})`] in the codomain (in blue).  

>> [@ $table @]*** <<
[$PAR]*
END_PGML


Section::Begin("Part 1: Geometric properties of the linear transformation");
BEGIN_PGML
a. Write the vectors [`f(\mathbf{b_1})`] and [`f(\mathbf{b_2})`] as linear combinations of the vectors in the basis [`\mathcal{B}`].  Enter a vector sum of the form [| 5 b1 + 6 b2 |].

    [` f(\mathbf{b_1}) = `] [_____________]{Compute("$e1 * b1")}  
    [` f(\mathbf{b_2}) = `] [_____________]{Compute("$e2 * b2")}

c. The vector [`\mathbf{b_1}`] [_]{$popup1} an eigenvector for the linear transformation [`f`] with eigenvalue [___]{$e1} (enter a number or [| DNE |]).  
The vector [`\mathbf{b_2}`] [_]{$popup2} an eigenvector for the linear transformation [`f`] with eigenvalue [___]{$e2} (enter a number or [| DNE |]).
END_PGML
Section::End();

Section::Begin("Part 2: The matrix of the linear transformation relative to the basis B");
BEGIN_PGML
a. Find the [`\mathcal{B}`]-coordinate vectors for [`\mathbf{b_1}`] and [`\mathbf{b_2}`].  Enter your answers as coordinate vectors of the form [| <5,6> |].

    [` \lbrack \mathbf{b_1} \rbrack_\mathcal{B} = `] [_____________]{Vector("<1,0>")}  
    [` \lbrack \mathbf{b_2} \rbrack_\mathcal{B} = `] [_____________]{Vector("<0,1>")}

b. Find the [`\mathcal{B}`]-coordinate vectors for [`f(\mathbf{b_1})`] and [`f(\mathbf{b_2})`].  Enter your answers as coordinate vectors of the form [| <5,6> |].

    [` \lbrack f(\mathbf{b_1}) \rbrack_\mathcal{B} = `] [_____________]{Vector("<$e1,0>")}  
    [` \lbrack f(\mathbf{b_2}) \rbrack_\mathcal{B} = `] [_____________]{Vector("<0,$e2>")}

c. Find the matrix [`M`] for the linear transformation [`f`] relative to the basis [`\mathcal{B}`] in both the domain and codomain.  That is, find the matrix [`M`] such that [` \lbrack f(\mathbf{v}) \rbrack_\mathcal{B} = M \lbrack \mathbf{v} \rbrack_\mathcal{B} `].  For instance, enter [| [ [1,2], [3,4] ] |] for the matrix [` [$example] `].

     [`M=`] [@ ANS($M->cmp); ans_box(4,30); @]*
END_PGML
Section::End();


Section::Begin("Part 3: Evaluating the linear transformation");
BEGIN_PGML
a. Write the red vector [`\mathbf{v}`] in the domain as a linear combination of the vectors in the basis [`\mathcal{B}`].  Enter a vector sum of the form [| 5 b1 + 6 b2 |].

    [` \mathbf{v} = `] [_____________]{Compute("$x1 * b1 + $x2 * b2")}

b. Using the properties of linear transformations, write the vector [`f(\mathbf{v})`] in the codomain as a linear combination of the vectors in the basis [`\mathcal{B}`].  Enter a vector sum of the form [| 5 b1 + 6 b2 |].  You should be able to draw the vector [`f(\mathbf{v})`] in the codomain.

    [` f(\mathbf{v}) = `] [_____________]{Compute("$x1 * $e1 * b1 + $x2 * $e2 * b2")}

c. Find the [`\mathcal{B}`]-coordinate vector for [`\mathbf{v}`].  Enter your answer as a coordinate vector of the form [| <5,6> |].

    [` \lbrack \mathbf{v} \rbrack_\mathcal{B} = `] [_____________]{Vector("<$x1,$x2>")}

d. Find the [`\mathcal{B}`]-coordinate vector for [`f(\mathbf{v})`].  Enter your answer as a coordinate vector of the form [| <5,6> |].  Hint: use that [` \lbrack f(\mathbf{v}) \rbrack_\mathcal{B} = M \lbrack \mathbf{v} \rbrack_\mathcal{B} `].

    [` \lbrack f(\mathbf{v}) \rbrack_\mathcal{B} = `] [_____________]{Vector("<$e1*$x1, $e2*$x2>")}
END_PGML
Section::End();

Scaffold::End();

ENDDOCUMENT();

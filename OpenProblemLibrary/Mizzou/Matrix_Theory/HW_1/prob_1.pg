# DESCRIPTION
# Use Gauss-Jordan reduction to solve a system of 3 linear equations in 3 variables.
# ENDDESCRIPTION

## DBsubject(Linear algebra)
## DBchapter(Systems of linear equations)
## DBsection(Systems with 3 variables)
## Institution(Rochester)
## MO(1)
## MLT(3infsol)
## MLTleader(1)
## Level(2)
## Tagged by cmd6a 5/3/06


###########################################################################
# initialization 
###########################################################################
DOCUMENT();        
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "parserMultiAnswer.pl",
  "PGcourse.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Matrix");

$sign1 = random(-1,1,2);
$a = random(2,5,1) * $sign1;
$b = random(3,9,1) * $sign1;

$sign2 = random(-1,1,2);
$c = random(1,6,1) * $sign2;
$d = random(3,6,1);
$epd = random(-1,1,2);
$e = $epd - $d;
$f = random(3,9,1) * $sign2;
$m = random(2,3,1) * random(-1,1,2);
$g = $m * ($e + $d);
$h = $m * ($e * $a + $b);
$i = $m * ($e * $c + $f);

# matrix representing left hand side of equation

$A = Matrix([
  [1 ,-1,$a],
  [$d,$e,$b],
  [$g, 0,$h]
]);

# for answer

$k = $a + $epd * ($b - $a*$d);
$l = $epd * ($b - $a*$d);
$mm = $c + $epd * ($f - $c*$d);
$n = $epd * ($f - $c*$d);

#expected answers 
$V1=ColumnVector($mm,$n,0);
$V2=ColumnVector(-$k,-$l,1);

#for tex display

$pm1 = ($a < 0) ? "-" : "+";
$pm2 = ($e < 0) ? "-" : "+";
$pm3 = ($b < 0) ? "-" : "+";
$pm4 = ($h < 0) ? "-" : "+";

$c1 = abs($a);
$c2 = abs($e);
$c3 = abs($b);
$c4 = abs($h);


$multians = MultiAnswer($V1,$V2)->with(
  singleResult => 0,
  checker => sub {
    my ($correct, $student, $self)=@_;
    my ($stu1,$stu2)= @{$student};
    $check1 = ( $A*$stu1 == Matrix([[$c],[$f],[$i]]) );
    $check2a = ( $A*$stu2 == Matrix([[ 0],[ 0],[ 0]]) );
    $check2b = ($stu2->isZero);
    if ( ! $check1 ){
      $self->setMessage(1,"Doesn't satisfy the given equation.");
    }
    if ( ! $check2a){
      $self->setMessage(2,"This vector points in the wrong direction.");
    }
    elsif ( $check2b ){
	$self->setMessage(2,"Can't be zero; equation has infinitely many solutions.");
    }
    return [ $check1, $check2a && ! $check2b ];
  }
);


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Use the Gauss-Jordan reduction to solve the following linear system:
$PAR
\[ \left\{'\{'\} \begin{array}{rcrcrcr}
  x_1 & - &  x_2 & $pm1 & $c1 x_3 & = & $c \cr
  $d x_1 & $pm2 & $c2 x_2 & $pm3 & $c3 x_3 & = & $f \cr 
  $g x_1 & &     & $pm4 & $c4 x_3 & = & $i  
\end{array} \right. \]
$PAR
$BCENTER
\(\left[\begin{array}{c} x_1 \\ x_2 \\ x_3 \end{array} \right]\)  
 \(=\) \{$multians->ans_array\} \(\ +\ s\ \)\{$multians->ans_array\}  
$ECENTER
END_TEXT
Context()->normalStrings;

#\{ mbox('\(\left[\begin{array}{c} x_1 \\ x_2 \\ x_3 \end{array} \right]\)',  
#'\(\quad =\)', ans_array(3,1,5), '\(+\)', ans_array_extension(3,1,5), '\(s\).' ) \}


###########################################################################
# check the answer  
###########################################################################
#ANS(vec_solution_cmp([[$m, $n, 0], [- $k , -$l, 1]]));

ANS($multians->cmp());

###########################################################################
# solution
###########################################################################
$e1 = -$k;
$e2 = -$l;

Context()->texStrings;
BEGIN_SOLUTION
$PAR $BBOLD SOLUTION: $EBOLD
By using the Gauss-Jordan reduction, we can find the reduced row echelon form of the augmented matrix of our system which turns out to be:
$PAR
\[ \left[
\begin{array}{rrr|r}
1   & 0   & $k & $mm \cr
0 & 1 & $l & $n \cr
0 &  0  & 0 &  0
\end{array} 
\right] \]
$PAR
Hence, \(x_1,x_2\) are lead variables and \(x_3\) is the only free variable. By writing down the system corresponding to the RRE form, we get that 
$PAR
\[
x_1 = $mm + $e1 x_3 \qquad \mbox{and} \qquad  x_2 = $n + $e2 x_3,
\]
$PAR 
where \(x_3\) is free (can take any value). Therefore every vector of the form 
$PAR
\[
\left[
\begin{array}{r}
x_1 \\ x_2 \\ x_3
\end{array}
\right]
 = 
\left[
\begin{array}{r}
$mm \\ $n \\ 0
\end{array}
\right] 
+ 
\left[
\begin{array}{r}
$e1 \\ $e2 \\ 1
\end{array}
\right] s
\] 
$PAR
is a solution, and every solution has that form for some value of \(s\). 
END_SOLUTION
Context()->normalStrings;

COMMENT('Edited and updated in 2012/2013 by Rick Lynch @ Mizzou. Originally taken from NPL.
$BR
Desc: Use Gauss-Jordan reduction to solve a system of 3 linear equations in 3 variables.');
ENDDOCUMENT();

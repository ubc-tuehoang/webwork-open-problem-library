## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## Tagged by tda2d

## DBsubject(Linear algebra)
## DBchapter(Matrix factorizations)
## DBsection(Diagonalization)
## Institution(TCNJ)
## Level(4)
## MO(1)
## TitleText1('Linear Algebra with Applications')
## AuthorText1('Jeffrey Holt')
## EditionText1('1')
## Section1('6.4')
## Problem1('')
## KEYWORDS('diagonalization' 'matrices')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "parserMultiAnswer.pl",
  "PGcourse.pl"
);

Context("Matrix");

$a11 = random(-1,1,2);
$a12 = non_zero_random(-3,3,1);
$mult = non_zero_random(-2,2,1);
$a21 = $mult * $a11;
$b1 = non_zero_random(-1,1,2);
$a22 = $mult * $a12 + $b1; # so $a is not singular 
$a=Matrix([
  [$a11, $a12],
  [$a21, $a22]
]);

$b = $a->inverse;


$eig1 = non_zero_random(-8,8,1);
$eig2 = non_zero_random(-8,8,1);
while ($eig1 == $eig2) { 
   $eig2= non_zero_random(-8,8,1); }

$e = Matrix([
  [$eig1, 0],
  [0 , $eig2]
]);


$matrix = $a * $e *$b;

$multi = MultiAnswer($a,$e,$b);


TEXT(beginproblem());
Context()->texStrings;
BEGIN_TEXT
Let \(A\) = \($matrix\) $BR

Find a matrix \(S\), a diagonal matrix \(D\) and \(S^{-1}\) such that \(A=SDS^{-1}\).  
$PAR
\(S = \) \{ $multi->ans_array\},$SPACE \(D = \) \{$multi->ans_array\},$SPACE \(S^{-1} = \) \{$multi->ans_array\}
END_TEXT
Context()->normalStrings;

ANS($multi->cmp(
  singleResult => 0,
  checker=>sub {
    my ($correct, $student, $self) = @_;
    my ($s, $d, $sinv) = @{$student};
    if ( $d->element(1,2) != 0 || $d->element(2,1) != 0) {
      Value::Error("D must be a diagonal matrix.");
      return [0,0,0] ;
    }
    else { 
      #check diagonal of D 
      if ( Set($d->element(1,1),$d->element(2,2))==Set($eig1,$eig2)){ 
	$dOK = 1;
      } 
      else { 
        $dOK=0;
      }
      #check S and S^{-1} are inverses
      if ( Matrix([[1,0],[0,1]]) == $s*$sinv ){
        $sOK = 1;
      } 
      else { 
        $sOK = 0;
      }
      # check product, return error messages.
      if ( $dOK == 1 && $sOK == 1){
         if ( $matrix == $s*$d*$sinv ){
           return [1,1,1];
         }
         else{
           Value::Error("The matrix D is correct, and S* S^{-1}=I, but S is not correct");
           return [0,1,0];
         }
      }
      elsif ($dOK == 1 && $sOK == 0) {
        Value::Error("The matrix D is correct, but S^{-1} is not the inverse to S");
        return [0,1,0];
      }
      elsif ( $dOK==0 && $sOK == 1 ){
        Value::Error("S* S^{-1}=I but the matrix D is incorrect.");
        return [0,0,0];
      }
      else {
        Value::Error("D is incorrect and S, S^{-1} are not inverses.");
        return [0,0,0];
      }
      return 0;
    }
  }
) );

ENDDOCUMENT();       # This should be the last executable line in the problem.


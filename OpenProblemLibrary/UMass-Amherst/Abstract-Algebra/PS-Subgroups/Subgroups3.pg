## DBsubject(Abstract algebra)
## DBchapter('Groups')
## DBsection('Subgroups')
## KEYWORDS('order of elements')
## Level(3)
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Siman Wong and Dan Nichols')
## Institution('University of Massachusetts Amherst')

DOCUMENT();       

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGchoicemacros.pl",
  "algebraMacros.pl",
  "PGcourse.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 0;





#  In this problem we generate 6 random elements in Z_n  (n composite)
#  and ask students to determine the order of these as elements of the
#  additive group Z_n and as elements of U(n) -- if that makes sense.




# random factors -- choose 2 and multiply together to get modulus
@set = (4,5,6,8,9,10,11,12,15,18);
$m = 0;
while( $m < 33 )
{
	$n1 = splice( @set, random( 0, $#set, 1 ), 1 );
	$n2 = splice( @set, random( 0, $#set, 1 ), 1 );
	$m = $n1 * $n2;
}

# take every non-zero integer mod n and determine if it is a unit or not,
# and put the results in two ordered list

foreach my $i ( 1 .. $m - 1 )
{
	if( gcd( $i, $m ) == 1 )
	{
		push @units, $i;
	}
	else
	{
		push @nonunits, $i;
	}
}


# Now we pick 6 random elements for the student to examine
# 2,3,or 4 of these will be units. The rest will be nonunits 
@elements;
$numunits = random( 2, 4, 1 );

for ( 1 .. $numunits )
{
	push @elements, splice( @units, random( 0, $#units, 1 ), 1 );
}

for( $numunits + 1 .. 6 )
{
	push @elements, splice( @nonunits, random( 0, $#nonunits, 1 ), 1 );
}



# now sort the list of elements
@elements = PGsort( sub {$_[0] < $_[1]} , @elements );


# now determine the additive and multiplicative order of these elements

@addorder;
@mulorder;
foreach my $i ( 0 .. $#elements )
{
	# additive order
	$j = 1;
	$j++ while $j*$elements[ $i ] % $m;
	$addorder[ $i ] = $j;

	# is $i in U(m)?
	if( gcd( $elements[ $i ], $m ) > 1 )
	{
		$mulorder[ $i ] = 0;
	}
	else	# multiplicative order
	{
		$j = 1;
		$z = $elements[ $i ];
		while( $z % $m > 1 )
		{
			$z = $z * $elements[ $i ] % $m;
			$j++;
		}
		$mulorder[ $i ] = $j;
	}
}


BEGIN_TEXT



Determine the order of the following elements in \( \{ cyclic( $m ) \} \) and \(U($m)\). Note: if \(x\) is not an element of \(U($m)\) then enter \(0\) for ord(\(x\)) in \(U($m)\).

$BR $BR

\{ begintable(3) \}
\{ row( "\(x\)", "ord(\(x\)) in \( " . cyclic( $m ) . " \)", "ord(\(x\)) in \(U($m)\)" )
\}
\{ row( $elements[0] , ans_rule(10), ans_rule(10) ) \}
\{ row( $elements[1] , ans_rule(10), ans_rule(10) ) \}
\{ row( $elements[2] , ans_rule(10), ans_rule(10) ) \}
\{ row( $elements[3] , ans_rule(10), ans_rule(10) ) \}
\{ row( $elements[4] , ans_rule(10), ans_rule(10) ) \}
\{ row( $elements[5] , ans_rule(10), ans_rule(10) ) \}
\{ endtable() \}



END_TEXT


ANS(num_cmp( $addorder[0] ));
ANS(num_cmp( $mulorder[0] ));

ANS(num_cmp( $addorder[1] ));
ANS(num_cmp( $mulorder[1] ));

ANS(num_cmp( $addorder[2] ));
ANS(num_cmp( $mulorder[2] ));

ANS(num_cmp( $addorder[3] ));
ANS(num_cmp( $mulorder[3] ));

ANS(num_cmp( $addorder[4] ));
ANS(num_cmp( $mulorder[4] ));

ANS(num_cmp( $addorder[5] ));
ANS(num_cmp( $mulorder[5] ));



ENDDOCUMENT();       



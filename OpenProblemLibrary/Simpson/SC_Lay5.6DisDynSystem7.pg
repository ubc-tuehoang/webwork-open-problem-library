## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## DBsubject(Linear algebra)
## DBchapter(Eigenvalues and eigenvectors)
## DBsection(Applications)
## Date(May 2017)
## Institution(Simpson College)
## Author(Murphy Waggoner)
## Level(3)
## MO(1)


DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"MatrixUnits.pl",
"parserMultiAnswer.pl",
"parserPopUp.pl",
"PGcourse.pl",
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

Context('Matrix');

$lambda1 = non_zero_random(-0.9, 0.9, 0.1);
do {$lambda2 = non_zero_random(-0.75,0.75,0.25)}
 until ($lambda1 != $lambda2);

$v11 = non_zero_random(-2,2,1);
$v12 = Compute("-$v11");
$v21 = Compute("0");
$v22 = non_zero_random(-2,2,1);
$v1 = Matrix([["$v11"], ["$v12"]]);
$v2 = Matrix([["$v21"], ["$v22"]]);

$x01 = random(1,9,1);
$x02 = random(1,9,1);
$x0 = Matrix([[$x01], [$x02]]);

$c1 = Compute("($x01)/$v11");
$c2 = Compute("($x02-$c1*$v12)/$v22");

$k = random(2,5,1);

$xk = Matrix("($c1*(($lambda1)^($k)))* $v1 + ($c2*(($lambda2)^($k)))*$v2");

$longvec = Matrix([[0], [0]]);
 
Context()->texStrings;
BEGIN_TEXT
Let \(M\) be a \(2 \times 2\) matrix with eigenvalues \(\lambda_1 = $lambda1, \ \lambda_2 = $lambda2\) with corresponding eigenvectors \[\mathbf{v}_1 = $v1, \mathbf{v}_2= $v2.\]

Consider the difference equation \[\mathbf{x}_{k+1} = M\mathbf{x}_k\] with initial condition \(\mathbf{x}_0 = $x0\).

$HR
Write the initial condition as a linear combination of the eigenvectors of \(M\).  

$BR$BR
That is, write \(\mathbf{x}_0 = c_1 \mathbf{v_1} + c_2 \mathbf{v_2} \)
\(= \)\{ans_rule(5)\} \(\mathbf{v_1} + \)\{ans_rule(5)\}\( \mathbf{v_2} \)

$HR

In general, \(\mathbf{x}_k = \)
\{ans_rule(5)\} \(\big(\) \{ans_rule(5)\}\(\big)^k \ \mathbf{v}_1+ \)
\{ans_rule(5)\}\(\big(\) \{ans_rule(5)\}\(\big)^k \ \mathbf{v}_2\)

$HR
Specifically, \(\mathbf{x}_{$k} = \)   \{$xk->ans_array(20)\}
$HR
For large \(k\), \(\mathbf{x}_{k} \rightarrow \)  \{$longvec->ans_array()\}

$HR$BR


END_TEXT


Context()->normalStrings;


ANS(Compute("$c1")->cmp());
ANS(Compute("$c2")->cmp());

ANS(Compute("$c1")->cmp());
ANS(Compute("$lambda1")->cmp());

ANS(Compute("$c2")->cmp());
ANS(Compute("$lambda2")->cmp());

ANS($xk->cmp());


ANS($longvec->cmp());




ENDDOCUMENT();
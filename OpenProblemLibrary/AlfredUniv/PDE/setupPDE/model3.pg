##DESCRIPTION
##  classify separable differential equations
##ENDDESCRIPTION


## DBsubject(Differential equations)
## DBchapter(Partial differential equations)
## DBsection(Heat equation)
## Date(7/21/2011)
## Institution(Alfred University)
## Author(Darwyn Cook)
## Level(3)
## TitleText1('Differential Equations: with Boundary Value Problems')
## AuthorText1('Zill')
## EditionText1('6')
## Section1('12.2')
## Problem1('')
## KEYWORDS('partial', 'differential', 'equation', 'separable' , 'heat equation','wave equation','laplace')

# Modified by Darwyn Cook on 10/30/15 to improve the notation for BC/IC

########################################################################

DOCUMENT();      

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "parserFunction.pl",
  "parserImplicitEquation.pl",
  "PGcourse.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#

Context("ImplicitEquation");
Context()->variables->add(t=>"Real",L=>"Real"); 
Context()->constants->add(a=>1);

parserFunction("u(x,t)"=>"x+t");
parserFunction("ut(x,t)"=>"x-t");
parserFunction("uxx(x,t)"=>"2x-3t");

#
#
#Context("Numeric");
#Context()->variables->add(a=>"Real",c=>"Real",h=>"Real",k=>"Real",L=>"Real",t=>"Real",u=>"Real",um=>"Real",ux=>"Real",uxx=>"Real",ut=>"Real",utt=>"Real",uy=>"Real",uyy=>"Real");
#Context()->variables->set(um=>{TeX => '{u_m}'},ux=>{TeX => '{\frac{\partial u}{\partial x}}'},uxx=>{TeX => '{\frac{\partial^2 u}{\partial x^2}}'},ut=>{TeX => '{\frac{\partial u}{\partial t}}'},utt=>{TeX => '{\frac{\partial^2 u}{\partial t^2}}'},uy=>{TeX => '{\frac{\partial u}{\partial y}}'},uyy=>{TeX => '{\frac{\partial^2 u}{\partial y^2}}'});
#
#$u = Formula("u");
#$ux = Formula("ux");
#$uxx = Formula("uxx");
#$ut = Formula("ut");
#$utt = Formula("utt");
#$uy = Formula("uy");
#$uyy = Formula("uyy");
#
#$heatleft = Formula("k*uxx");
#$heatwithtransfer = Formula("k*uxx-h*(u-um)");
#$heatright = Formula("ut");
#
#$waveleft = Formula("a^2*uxx");
#$waveright = Formula("utt");
#$wavedamping = Formula("utt+c*ut");
#
#$laplaceleft = Formula("uxx+uyy");
#$homogeneous = Compute("0");
#

$u0 = Compute(random(0,100));

$f="$u0*e^(x*L-x**2)";
$initialtemp = Compute("$f");

$pde = ImplicitEquation("a*uxx(x,t) = ut(x,t)");
$heatleft = ImplicitEquation("u(0,t)=$u0",limits=>[[-2,$u0-10],[2,$u0+10]]);
$heatright = ImplicitEquation("u(L,t)=0");
$initcond = ImplicitEquation("u(x,0)=$f");


##############################################################
#
#  Text
#
#

Context()->texStrings;
BEGIN_TEXT
Translate the following into a PDE with boundary conditions
$PAR
The left end of a rod of length L is held at temperature \($u0\), and there is heat transfer from the right end into the surrounding medium, which has constant temperature zero. The initial temperature \(x\) units from the left end of the rod is \(\displaystyle $initialtemp\).
\{knowlLink("How to enter the answers.",
  value => 'Use x to represent distance from the left end of the rod, t for time, u for temperature, and ux, ut, uxx, etc for its partial derivatives.  '.
  'Include independent variables, e.g. write ux(x,t) not just ux.  '.
  'Use a for constants not explicitly named in the problem or just assume they equal 1.')\}
$PAR
The PDE is \{ans_rule(15)\}
$BR
The boundary values / initial conditions are:
$BR
Left end is held at temperature \($u0\): \{ans_rule(15)\}
$BR
Heat transfer from the right end into the surrounding medium at temperature zero: \{ans_rule(15)\}
$BR
Initial temperature is \(\displaystyle $initialtemp\): \{ans_rule(15)\} 
END_TEXT
Context()->normalStrings;

##############################################################
#
#  Answers
#
#

ANS($pde->cmp());
ANS($heatleft->cmp());
ANS($heatright->cmp());
ANS($initcond->cmp());

### BC/IC
#Context("Numeric");
#Context()->variables->add(t=>"Real",L=>"Real",h=>"Real");
#parserFunction("u(x,t)" => "(-1.5 * cos(3*t) - 5*pi/3 + arctan(t))(0.5 * cos(3*x) + pi/3 + arctan(2x))");
#parserFunction("ux(x,t)" => "(1.5 * cos(3*t) + 5*pi/3 + arctan(t))(1.5 * cos(3*x) + 5*pi/3 + arctan(x))");
#
#$boundaryu = Formula("u(x,t)");
#$leftu = $boundaryu->substitute(x=>"0",t=>"t");
#$rightu = $boundaryu->substitute(x=>"L",t=>"t");
#
#$boundaryux = Formula("ux(x,t)");
#$leftux = $boundaryux->substitute(x=>"0",t=>"t");
#$rightux = $boundaryux->substitute(x=>"L",t=>"t");
#
#$initial = $boundaryu->substitute(x=>"x",t=>"0");
#
#ANS($leftu->cmp);
#ANS($u0->cmp);
#
#ANS($rightux->cmp);
#ANS(Compute("-h*u(L,t)")->cmp);
#
#ANS($initial->cmp);
#ANS($initialtemp->cmp);
ENDDOCUMENT();        

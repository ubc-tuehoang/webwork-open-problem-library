## DESCRIPTION
##   Parametric Equation for a Line
## ENDDESCRIPTION

## Tagged by nhamblet

## DBsubject(Calculus - multivariable)
## DBchapter(Calculus of vector valued functions)
## DBsection(Parameterized curves)
## Institution(Alfred University)
## Author(Darwyn Cook)
## MLT(3dLineGivenPtAndParallelLine)
## Level(3)
## MO(1)
## TitleText1('Calculus')
## AuthorText1('Anton')
## EditionText1('8')
## Section1('12.5')
## Problem1('')
## KEYWORDS('Line', 'Parametric', 'Parallel')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "PGunion.pl",
  "Parser.pl",
  "parserVectorUtils.pl",
  "parserParametricLine.pl",
  "PGcourse.pl"
);


TEXT(beginproblem());
BEGIN_PROBLEM();

$showPartialCorrectAnswers = 1;
##############################################
#  Setup

Context("Vector");
Context()->variables->are(t=>'Real');
#
#  The points line p + tv
#
$p = non_zero_vector3D();
$v = non_zero_vector3D();
$P = Vector($p);

#
#  The other point and line
#
$q = non_zero_vector3D(); while ($q == $p) {$q = non_zero_point3D()};
$Q = Vector($q);

$L2 = Formula("$Q + t*$v")->reduce;

Context("ParametricLine");
$L = Line($p,$v);
##############################################
#  Main text

Context()->texStrings;
BEGIN_TEXT
Give a vector parametric equation for the line \(\ell\)
that passes through the point \($q\), parallel
to the line parametrized by \($L\):
$PAR
\(\ell\) is parallel to the vector \{ans_rule(20)\}
$PAR
\(\ell\) may be parametrized by \(tv+P\) where 
\(v\)=\{ans_rule(20)\} and \(P\) = \{ans_rule(20)\} 
$PAR
Thus \(\ell\) satisfies the parametric equation 
$BCENTER
$PAR
\(L(t)\) = \{ans_rule(40)\}.
$ECENTER
$PAR
Note: vectors are put in using the notation \(<x,y,z>\) or xi+yj+zk, points use the (x,y,z) notation.
END_TEXT
Context()->normalStrings;

##################################################
#  Answers
ANS($v->cmp(parallel=>1));
ANS($v->cmp(parallel=>1));
ANS($q->cmp);
ANS(ParametricLine($L2)->cmp);
#$showPartialCorrectAnswers = 1;

##################################################

END_PROBLEM();
ENDDOCUMENT();        # This should be the last executable line in the problem.

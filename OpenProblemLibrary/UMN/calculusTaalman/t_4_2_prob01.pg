#DESCRIPTION
##  Calculus: Definite integrals
##ENDDESCRIPTION


## DBsubject(Calculus - single variable)
## DBchapter(Techniques of integration)
## DBsection(Approximation)
## Date(11/05/2013)
## Institution(Colby College)
## Author(Justin Sukiennik)
## Level(4)
## MO(1)
## TitleText1('Calculus')
## AuthorText1('Taalman')
## EditionText1('1')
## Section1('4.2')
## Problem1('1')
## TitleText2('')
## AuthorText2('Kohn')
## EditionText2('')
## Section2('.')
## Problem2('')
## KEYWORDS('calculus', 'integration', 'graph', 'area', 'estimating area', 'left endpoints', 'right endpoints', 'trapezoid')

#####################################################################
DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "parserPopUp.pl",
  "PGgraphmacros.pl",
  "PGcourse.pl"
);

#####################################################################

$showPartialCorrectAnswers = 1;

TEXT(beginproblem());

#####################################################################

Context("Numeric");

$w = 525;  # graph size
$h = 350;
$tw = 500; # graph size in TeX

$a = random(1,4,1);

$f1 = Formula("(1/35)*x^2+$a");

$b =Compute("(1/35)+$a");
$c =Compute("(1/35)*(9)^2+$a");

$an1 = Compute("2*((1/35)+(1/35)*9+(1/35)*25+(1/35)*49)+8*$a");
$an2 = Compute("2*((1/35)*9+(1/35)*25+(1/35)*49+(1/35)*81)+8*$a");
$an3 = Compute("($an1+$an2)/2");

$ans1 = Compute("$an1");
$ans2 = Compute("$an2");
$ans3 = Compute("$an3");

$popup1 = PopUp(['Choose one','Underestimate', 'Overestimate'],'Underestimate');
$popup2 = PopUp(['Choose one','Underestimate', 'Overestimate'],'Overestimate');
$popup3 = PopUp(['Choose one','Underestimate', 'Overestimate'],'Overestimate');

#####################################################################

$graph1 = init_graph(-1,-1,11,7,'axes'=>[0,0],'ticks'=>[12,8],'grid'=>[12,8],'size'=>[750,500]);

$graph1->new_color("lightblue", 214,230,244);

$p1 = FEQ("$f1 for x in [0,6> using color:blue weight:2");
$p2 = FEQ("$f1 for x in <6,11] using color:blue weight:2");

$graph1->moveTo(9,0);
$graph1->lineTo(9,$c,'blue',1);

$graph1->moveTo(1,0);
$graph1->lineTo(1,$b,'blue',1);

$graph1->moveTo(1,0);
$graph1->lineTo(9,0,'blue',1);

plot_functions($graph1,$p1,$p2);

$graph1->fillRegion([6,1,'lightblue']);

#####################################################################

Context()->texStrings;
BEGIN_TEXT
Use four rectangles to find an estimate of each type for the area under the given graph of \(f\) from \(x=1\) to \(x=9.\)
$PAR
$BCENTER
\{image(insertGraph($graph1),width=>$w,height=>$h,tex_size=>$tw)\}
$ECENTER $PAR
$HR
$BBOLD 1. $EBOLD Take the sample points from the left-endpoints.$BR
Answer: \(L_4 =\) \{ans_rule(30)\} $PAR
$BBOLD 2. $EBOLD Is your estimate \(L_4\) an underestimate or overestimate of the true area? \{$popup1->menu\} $PAR
$BBOLD 3. $EBOLD Take the sample points from the right-endpoints.$BR
Answer: \(R_4 =\) \{ans_rule(30)\} $PAR
$BBOLD 4. $EBOLD Is your estimate \(R_4\) an underestimate or overestimate of the true area? \{$popup2->menu\} $PAR
$BBOLD 5. $EBOLD Use the Trapezoid Rule with \( n = 4.\)$BR
Answer: \(T_4 =\) \{ans_rule(30)\}$PAR
$BBOLD 6. $EBOLD Is your estimate \(T_4\) an underestimate or overestimate of the true area? \{$popup2->menu\} $PAR
$HR
$BBOLD Note: $EBOLD $BITALIC You can click on the graph to enlarge the image.$EITALIC
$HR
END_TEXT

#####################################################################

ANS(($ans1)->cmp(tolType=>'absolute', tolerance=>0.8));
ANS($popup1->cmp);
ANS(($ans2)->cmp(tolType=>'absolute', tolerance=>0.8));
ANS($popup2->cmp);
ANS(($ans3)->cmp(tolType=>'absolute', tolerance=>1.1));
ANS($popup3->cmp);

$x0=1; $x1=3; $x2=5; $x3=7; $x4=9;
$g0=$a+1/35; $g1 = $a+9/35;  $g2=$a+25/35; $g3=$a+49/35; $g4=$a+81/35; 
# picture for left sum
$graph2 = init_graph(-1,-1,11,7,'axes'=>[0,0],'ticks'=>[12,8],'grid'=>[12,8],'size'=>[750,500]);
$graph2->new_color("lightblue", 214,230,244);
$p1 = FEQ("$f1 for x in [0,6> using color:blue weight:2");
$p2 = FEQ("$f1 for x in <6,11] using color:blue weight:2");
$graph2->moveTo(9,0);
$graph2->lineTo(9,$c,'blue',1);
$graph2->moveTo(1,0);
$graph2->lineTo(1,$b,'blue',1);
$graph2->moveTo(1,0);
$graph2->lineTo(9,0,'blue',1);
plot_functions($graph2,$p1,$p2);

# plot the left rectangles
$graph2->moveTo(1,$g0);
$graph2->lineTo($x1,$g0,'red',3);
$graph2->moveTo(1,$g0);
$graph2->lineTo(1,0,'red',3);

$graph2->moveTo($x1,$g1);
$graph2->lineTo($x2,$g1,'red',3);
$graph2->moveTo($x1,$g1);
$graph2->lineTo($x1,0,'red',3);

$graph2->moveTo($x2,$g2);
$graph2->lineTo($x3,$g2,'red',3);
$graph2->moveTo($x2,$g2);
$graph2->lineTo($x2,0,'red',3);

$graph2->moveTo($x3,$g3);
$graph2->lineTo($x4,$g3,'red',3);
$graph2->moveTo($x3,$g3);
$graph2->lineTo($x3,0,'red',3);
$graph2->moveTo($x4,$g3);
$graph2->lineTo($x4,0,'red',3);

plot_functions($graph2,$p1,$p2);


#picture for right sum
$graph3 =init_graph(-1,-1,11,7,'axes'=>[0,0],'ticks'=>[12,8],'grid'=>[12,8],'size'=>[750,500]);
$graph3->new_color("lightblue", 214,230,244);
$p1 = FEQ("$f1 for x in [0,6> using color:blue weight:2");
$p2 = FEQ("$f1 for x in <6,11] using color:blue weight:2");
$graph3->moveTo(9,0);
$graph3->lineTo(9,$c,'blue',1);
$graph3->moveTo(1,0);
$graph3->lineTo(1,$b,'blue',1);
$graph3->moveTo(1,0);
$graph3->lineTo(9,0,'blue',1);
plot_functions($graph3,$p1,$p2);
# plot the right rectangles
$graph3->moveTo(1,$g1);
$graph3->lineTo($x1,$g1,'red',3);
$graph3->moveTo(1,$g1);
$graph3->lineTo(1,0,'red',3);

$graph3->moveTo($x1,$g2);
$graph3->lineTo($x2,$g2,'red',3);
$graph3->moveTo($x1,$g2);
$graph3->lineTo($x1,0,'red',3);

$graph3->moveTo($x2,$g3);
$graph3->lineTo($x3,$g3,'red',3);
$graph3->moveTo($x2,$g3);
$graph3->lineTo($x2,0,'red',3);

$graph3->moveTo($x3,$g4);
$graph3->lineTo($x4,$g4,'red',3);
$graph3->moveTo($x3,$g4);
$graph3->lineTo($x3,0,'red',3);
$graph3->moveTo($x4,$g4);
$graph3->lineTo($x4,0,'red',3);


# picture trapezoid rule
$graph4 = init_graph(-1,-1,11,7,'axes'=>[0,0],'ticks'=>[12,8],'grid'=>[12,8],'size'=>[750,500]);
$graph4->new_color("lightblue", 214,230,244);
$p1 = FEQ("$f1 for x in [0,6> using color:blue weight:2");
$p2 = FEQ("$f1 for x in <6,11] using color:blue weight:2");
$graph4->moveTo(9,0);
$graph4->lineTo(9,$c,'blue',1);
$graph4->moveTo(1,0);
$graph4->lineTo(1,$b,'blue',1);
$graph4->moveTo(1,0);
$graph4->lineTo(9,0,'blue',1);
$graph4 = init_graph(-1,-1,13,9,'axes'=>[0,0],'ticks'=>[14,10],'grid'=>[14,10],'size'=>[560,400]);
$graph4->new_color("lightblue", 214,230,244);
$p1 = FEQ("$f1 for x in [0,6> using color:blue weight:2");
$p2 = FEQ("$f1 for x in <6,12] using color:blue weight:2");
$graph4->moveTo(12,0);
$graph4->lineTo(12,$a-4,'blue',1);
$graph4->moveTo(0,0);
$graph4->lineTo(0,$a,'blue',1);
$graph4->moveTo(0,0);
$graph4->lineTo(12,0,'blue',1);
plot_functions($graph4,$p1,$p2);
# plot the trapezoids 
$graph4->moveTo(1,$g0);
$graph4->lineTo($x1,$g1,'red',3);
$graph4->moveTo($x0,$g0);
$graph4->lineTo($x0,0,'red',3);

$graph4->moveTo($x1,$g1);
$graph4->lineTo($x2,$g2,'red',3);
$graph4->moveTo($x1,$g1);
$graph4->lineTo($x1,0,'red',3);

$graph4->moveTo($x2,$g2);
$graph4->lineTo($x3,$g3,'red',3);
$graph4->moveTo($x2,$g2);
$graph4->lineTo($x2,0,'red',3);

$graph4->moveTo($x3,$g3);
$graph4->lineTo($x4,$g4,'red',3);
$graph4->moveTo($x3,$g3);
$graph4->lineTo($x3,0,'red',3);
$graph4->moveTo($x4,$g4);
$graph4->lineTo($x4,0,'red',3);


Context()->{format}{number}="%.1f";
$g0=Compute($g0);
$g1=Compute($g1);
$g2=Compute($g2);
$g3=Compute($g3);
$g4=Compute($g4);
$Ans1=Compute(2*($g0+$g1+$g2+$g3));
$Ans3=Compute(2*($g1+$g2+$g3+$g4 ));
$Ans5=Compute($g0+2*$g1+2*$g2+2*$g3+$g4);
Context()->texStrings;
BEGIN_SOLUTION
$PAR SOLUTION $PAR
We have \(a=1,\;b=9\) and \(n=4\).  So \(\Delta x = \frac{b-a}{n} =  \frac{8}{4}=2\), and \(x_k = a + k\Delta x\) so 
$BR \(x_0 =  1\),  \(x_1 = 3\) , \(x_2 = 5\),  \(x_3 = 7\),  and  \(x_4  = 9\).
$BR
$BR
$BBOLD 1. $EBOLD  The function together with the rectangles for the Left Rule is plotted below. We use the picture to estimate the values of the function at the required values of \(x\). 
$BCENTER
\{image(insertGraph($graph2),width=>340,height=>230,tex_size=>350)\}
$ECENTER $PAR
The left  Rule with \(n=4\) is 
\[ \begin{array}{rl}
L_4 &= \Delta x\Big[f\left(x_0\right) + f\left(x_1\right) + f\left(x_2\right) + f\left(x_3\right)  \Big] \\
     &= 2 \Big[f(1) + f(3) + f(5) + f(7) \Big]   \\
  & \approx 2 \Big[$a + $g1 +$g2 +$g3 \Big] \\
  &\approx $Ans1 \\
\end{array}\]

$BR $BR
$BBOLD 2. $EBOLD Because the function is concave up, the Left Sum is an underestimate. (This is also apparent from the picture).
$BR 
$BR 
$BBOLD 3. $EBOLD
 The function together with the rectangles for the Right Rule is plotted below. We use the picture to estimate the values of the function at the required values of \(x\). 
$BCENTER
\{image(insertGraph($graph3),width=>340,height=>230,tex_size=>350)\}
$ECENTER $PAR
The Right  Sum with \(n=6\) is 
\[ \begin{array}{rl}
R_4 &= \Delta x\Big[f\left(x_1\right) + f\left(x_2\right) + f\left(x_3\right) + f\left(x_4\right)  \Big] \\
     &= 2 \Big[f(3) + f(5) + f(7) + f(9) \Big]   \\
  & \approx 2 \Big[ $g1 +$g2 +$g3 +$g4 \Big] \\
  &\approx $Ans3 \\
\end{array}\]

$BR $BR
$BBOLD 4. $EBOLD Because the function is concave up, the Right Sum is an overestimate. (This is also apparent from the picture).
$BR 
$BR 
$BBOLD 5. $EBOLD
 The function together with the trapezoids is plotted below. We use the picture to estimate the values of the function at the required values of \(x\). 
$BCENTER
\{image(insertGraph($graph4),width=>340,height=>230,tex_size=>350)\}
$ECENTER $PAR
The Trapezoid Rule with \(n=6\) is 
\[ \begin{array}{rl}
T_6 &= \frac{\Delta x}{2}\Big[f(x_1) + 2 f(x_2) + 2 f(x_3) + f(x_4)  \Big] \\
     &= \frac{2}{2} \Big[f(1) + 2\cdot f(3) + 2 \cdot f(5) + 2\cdot f(7) + f(9)\Big]   \\
  & \approx  \Big[ $g0 + 2 ( $g1) + 2 ($g2) + 2 ( $g3) +  $g4 \Big] \\
  &\approx $Ans5 \\
\end{array}\]
$BBOLD NOTE: $EBOLD The value of \( T_4\) can be obtained by averaging the values of \(L_4\) and \( R_4\):
\[ T_4 = \frac{L_4 + R_4}{2} = \frac{$Ans1 +$Ans3}{2} = $Ans5 \]


$BR
$BR
$BBOLD 6. $EBOLD Because the function is concave up, the Trapezoid Rule gives an  overestimate. 

END_SOLUTION
ENDDOCUMENT();        # This should be the last executable line in the problem.

## DBsubject(Calculus - single variable)
## DBchapter(Infinite sequences and series)
## DBsection(Limit of a sequence)
## Institution(Hope College)
## Author(Paul Pearson)
## Level(3)
## MO(1)
## TitleText1('APEX Calculus')
## AuthorText1('Hartman')
## EditionText1('3.0')
## Section1('8.1')
## Problem1('')

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "parserPopUp.pl",
  "parserWordCompletion.pl",
  "PGchoicemacros.pl",
  "scaffold.pl",
  "PGcourse.pl"
);
TEXT(beginproblem());

Context("Numeric")->variables->are('n'=>'Real');

$popup1 = PopUp(['choose','true','false'],'true');

$mc1 = new_checkbox_multiple_choice();
$mc1 -> qa (
"(Select all that apply.) The sequence \( \lbrace a_n \rbrace = \lbrace 2^n \rbrace \) is", 
"unbounded",
"bounded below",
);
$mc1 -> extra(
"bounded above",
"bounded",
);
#$mc1 -> makeLast("None of the above");


$mc2 = new_checkbox_multiple_choice();
$mc2 -> qa (
"(Select all that apply.) The sequence \( \lbrace a_n \rbrace = \lbrace \frac{1}{n} \rbrace \) is", 
"bounded below",
"bounded above",
"bounded",
);
$mc2 -> extra(
"unbounded",
);
#$mc2 -> makeLast("None of the above");


$mc3 = new_checkbox_multiple_choice();
$mc3 -> qa (
"(Select all that apply.) A sequence \( \lbrace a_n \rbrace \) is monotonically increasing if", 
"\( a_n \leq a_{n+1} \) for every natural number \( n \).",
"every term \( a_n \) in the sequence is greater than or equal to the previous term \( a_{n-1} \).",
);
$mc3 -> extra(
"\( a_n < a_{n+1} \) for every natural number \( n \).",
"\( a_n \geq a_{n+1} \) for every natural number \( n \).",
);
#$mc3 -> makeLast("None of the above");


$mc4 = new_checkbox_multiple_choice();
$mc4 -> qa (
"(Select all that apply.)  A sequence \( \lbrace a_n \rbrace \) is strictly decreasing if", 
"\( a_n > a_{n+1} \) for every natural number \( n \).",
"every term \( a_n \) in the sequence is less than the previous term \( a_{n-1} \).",
);
$mc4 -> extra(
"\( a_n < a_{n+1} \) for every natural number \( n \).",
"\( a_n \leq a_{n+1} \) for every natural number \( n \).",
);
#$mc4 -> makeLast("None of the above");


$wc1 = WordCompletion(['monotonic','monotonically increasing','monotonically decreasing','bounded','unbounded','bounded above','bounded below'],'monotonic');

BEGIN_PGML
## Reading questions for sequences
[@ $PAR @]*
END_PGML

Scaffold::Begin('can_open'=>'always','is_open' => 'first_incorrect');

Section::Begin("Part 1: Bounded and unbounded sequences");
BEGIN_PGML
a.  [@ $mc1 -> print_q() @]***
[@ ANS( checkbox_cmp( $mc1->correct_ans() ) ); $mc1 -> print_a() @]***  

b.  [@ $mc2 -> print_q() @]***
[@ ANS( checkbox_cmp( $mc2->correct_ans() ) ); $mc2 -> print_a() @]***  
END_PGML
Section::End();

Section::Begin("Part 2: Monotonic sequences");
BEGIN_PGML
a.  [@ $mc3 -> print_q() @]***
[@ ANS( checkbox_cmp( $mc3->correct_ans() ) ); $mc3 -> print_a() @]***  

b.  [@ $mc4 -> print_q() @]***
[@ ANS( checkbox_cmp( $mc4->correct_ans() ) ); $mc4 -> print_a() @]***  

c. A sequence is [________________]{$wc1} if it is either monotonically increasing or monotonically decreasing.
END_PGML
Section::End();



Scaffold::End();

ENDDOCUMENT();

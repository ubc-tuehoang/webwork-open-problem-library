## DESCRIPTION
## Transformation Principle and POV planes
## ENDDESCRIPTION

## DBsubject(Geometry)
## DBchapter(Shapes)
## DBsection(Properties of Shapes)
## Date(02/22/2018)
## Institution(Bentley University)
## Author(Nathan Carter)
## TitleText1('Introduction to the Mathematics of Computer Graphics')
## AuthorText1('Nathan Carter')
## EditionText1('1')
## Section1('7')
## Problem1('8')
## KEYWORDS('plane','equation','affine transformations')

DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PGcourse.pl",
);

Context("Matrix");
$showPartialCorrectAnswers = 1;
Context('Matrix')->variables->add(t => 'Real');
$N = random( 5, 15 );
$p1 = random( -10, 10 );
$p2 = random( -10, 10 );
$p3 = random( -10, 10 );
$pixx = $p1 + random( 10, 12 );
$pixy = $p2 + random( 1, 2 );
$pixz = $p3 + random( 1, 2 );
$v1 = $pixx - $p1;
$v2 = $pixy - $p2;
$v3 = $pixz - $p3;
$rx = 0;
$ry = 0;
$rz = 0;
$which = random( 1, 3 );
$angle = list_random( 30, 45, 60, -30, -45, -60 );
$cos = cos( $angle*3.14159265358/180 );
$sin = sin( $angle*3.14159265358/180 );
if ( $which == 1 ) {
    $rx = $angle;
    $Rmatrix = Matrix( [ [ 1, 0, 0, 0 ], [ 0, $cos, -$sin, 0 ], [ 0, $sin, $cos, 0 ], [ 0, 0, 0, 1 ] ] );
} elsif ( $which == 2 ) {
    $ry = $angle;
    $Rmatrix = Matrix( [ [ $cos, 0, $sin, 0 ], [ 0, 1, 0, 0 ], [ -$sin, 0, $cos, 0 ], [ 0, 0, 0, 1 ] ] );
} else {
    $rz = $angle;
    $Rmatrix = Matrix( [ [ $cos, -$sin, 0, 0 ], [ $sin, $cos, 0, 0 ], [ 0, 0, 1, 0 ], [ 0, 0, 0, 1 ] ] );
}
$Colvec = Matrix( [ [ Formula( "$p1+t*$v1" ) ],
                    [ Formula( "$p2+t*$v2" ) ],
                    [ Formula( "$p3+t*$v3" ) ],
                    [ 1 ] ] );
$Pcolvec = Matrix( [ [ $p1 ], [ $p2 ], [ $p3 ], [ 1 ] ] );
$Vcolvec = Matrix( [ [ $v1 ], [ $v2 ], [ $v3 ], [ 1 ] ] );
$XfmPcolvec = ( $Rmatrix->inverse ) * $Pcolvec;
$XfmVcolvec = ( $Rmatrix->inverse ) * $Vcolvec;
$P1 = $XfmPcolvec->element(1,1);
$P2 = $XfmPcolvec->element(2,1);
$P3 = $XfmPcolvec->element(3,1);
$V1 = $XfmVcolvec->element(1,1);
$V2 = $XfmVcolvec->element(2,1);
$V3 = $XfmVcolvec->element(3,1);
$XfmColvec = Matrix( [ [ Formula( "$P1+t*$V1" ) ],
                       [ Formula( "$P2+t*$V2" ) ],
                       [ Formula( "$P3+t*$V3" ) ],
                       [ 1 ] ] );
$t = ( $N - $P1 ) / $V1;

TEXT(beginproblem());
BEGIN_PGML
Suppose we wish to figure out when a line of sight intersects the
plane given by the following POV code.

[|sphere { |]

[`\hspace{1em}`][|  <1,0,0>, |][$N]

[`\hspace{1em}`][|  rotate <|][$sx][|,|][$sy][|,|][$sz][|>|]

[| }|]

This plane has normal vector [`\langle 1,0,0 \rangle`] and contains the point [`([$N],0,0)`] before it undergoes the transformation [`R_{[$rx]^\circ,[$ry]^\circ,[$rz]^\circ}`].

Create the matrix for the transformation [`R_{[$rx]^\circ,[$ry]^\circ,[$rz]^\circ}`].

Answer: [__]*{$Rmatrix}

Create the matrix for the transformation [`R^{-1}_{[$rx]^\circ,[$ry]^\circ,[$rz]^\circ}`].

Answer: [__]*{$Rmatrix->inverse}

Assume the camera is at position [`([$p1],[$p2],[$p3])`] and the line of sight we're interested in passes through the pixel at [`([$pixx],[$pixy],[$pixz])`].

Write the parametric equations for the line of sight as a column vector.

Answer: [__]*{$Colvec}

Apply the transformation [`R^{-1}_{[$rx]^\circ,[$ry]^\circ,[$rz]^\circ}`] to that column vector.

Answer: [__]*{$XfmColvec}

What is the equation of the (unaltered) plane?

Answer:
[_______________________________________]{"x-$N"}
=0

Solve for when the transformed line of sight intersects the unaltered plane.

[`t=`][________]{$t}

For what [`t`] value does the original line of sight intersect the transformed plane?

[`t=`][________]{$t}
END_PGML

BEGIN_PGML_SOLUTION
Using formulas from the text, the transformation [`R_{[$rx]^\circ,[$ry]^\circ,[$rz]^\circ}`] has the following matrix form.

[`[$Rmatrix]`]

Its inverse is the same as  [`R_{[$rx*-1]^\circ,[$ry*-1]^\circ,[$rz*-1]^\circ}`], which therefore has the following matrix form.

[`[$Rmatrix->inverse]`]

The column vector for the line of sight is based on the direction vector [`([$pixx],[$pixy],[$pixz])-([$p1],[$p2],[$p3])=\langle [$v1],[$v2],[$v3] \rangle`]:

[`[$Colvec]`]

We therefore multiply as follows.

[`[$Rmatrix->inverse][$Colvec]=[$XfmColvec]`]

Because of all the zeros in the normal vector and point in the plane, its equation simplifies down to [`x=[$N]`], or [`x-[$N]=0`].

We can substitute into it as follows:

[`[$P1]+[$V1]t-[$N]=0`]

[`t=\frac{[$N]-[$P1]}{[$V1]}=[$t]`]

That is the [`t`] value for the inverse-transformed line of sight intersecting the untransformed plane.  The Transformation Principle says that's the same [`t`] value for the original line of sight intersecting the transformed plane.
END_PGML_SOLUTION

ENDDOCUMENT();

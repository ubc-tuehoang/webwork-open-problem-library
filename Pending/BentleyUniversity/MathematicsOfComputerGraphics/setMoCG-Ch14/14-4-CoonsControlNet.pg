##DESCRIPTION
## Given the boundary of a cubic Bezier control net, compute the interior using Coons's formula
##ENDDESCRIPTION

## DBsubject('Calculus - multivariable')
## DBchapter('Concepts for multivariable functions')
## DBsection('Parameterized surfaces')
## Date('04/19/2018')
## Author('Nathan Carter')
## Institution('Bentley University')
## TitleText1('Introduction to the Mathematics of Computer Graphics')
## EditionText1('1')
## AuthorText1('Nathan Carter')
## Section1('14')
## Problem1('4')
##KEYWORDS('Bezier surfaces','parameterized surfaces','Coons patch')

########################################################################

DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PGcourse.pl",
);

Context("Numeric");
$showPartialCorrectAnswers = 1;

$C11x = random( -2, 2 ) * 9;
$C12x = random( -4, 3 ) * 3;
$C13x = random( -4, 3 ) * 3;
$C14x = random( -2, 2 ) * 9;
$C11y = random( -2, 2 ) * 9;
$C12y = random( -4, 3 ) * 3;
$C13y = random( -4, 3 ) * 3;
$C14y = random( -2, 2 ) * 9;
$C11z = random( -2, 2 ) * 9;
$C12z = random( -4, 3 ) * 3;
$C13z = random( -4, 3 ) * 3;
$C14z = random( -2, 2 ) * 9;

$C21x = random( -3, 4 ) * 3;
$C24x = random( -3, 4 ) * 3;
$C21y = random( -3, 4 ) * 3;
$C24y = random( -3, 4 ) * 3;
$C21z = random( -3, 4 ) * 3;
$C24z = random( -3, 4 ) * 3;

$C31x = random( -4, 3 ) * 3;
$C34x = random( -4, 3 ) * 3;
$C31y = random( -4, 3 ) * 3;
$C34y = random( -4, 3 ) * 3;
$C31z = random( -4, 3 ) * 3;
$C34z = random( -4, 3 ) * 3;

$C41x = random( -2, 2 ) * 9;
$C42x = random( -3, 4 ) * 3;
$C43x = random( -3, 4 ) * 3;
$C44x = random( -2, 2 ) * 9;
$C41y = random( -2, 2 ) * 9;
$C42y = random( -3, 4 ) * 3;
$C43y = random( -3, 4 ) * 3;
$C44y = random( -2, 2 ) * 9;
$C41z = random( -2, 2 ) * 9;
$C42z = random( -3, 4 ) * 3;
$C43z = random( -3, 4 ) * 3;
$C44z = random( -2, 2 ) * 9;

sub li { # linear interpolation
    my $a = shift( @_ );
    my $b = shift( @_ );
    my $t = shift( @_ );
    return (1-$t)*$a + $t*$b;
}
sub bi { # bilinear interpolation
    my $w = shift( @_ );
    my $x = shift( @_ );
    my $y = shift( @_ );
    my $z = shift( @_ );
    my $u = shift( @_ );
    my $v = shift( @_ );
    return li(li($w,$x,$v),li($y,$z,$v),$u);
}

$BI = bi($C11x,$C14x,$C41x,$C44x,1/3,1/3);
$C22x = $BI + (li($C21x,$C24x,1/3)-$BI) + (li($C12x,$C42x,1/3)-$BI);
$BI = bi($C11x,$C14x,$C41x,$C44x,2/3,1/3);
$C23x = $BI + (li($C21x,$C24x,2/3)-$BI) + (li($C13x,$C43x,1/3)-$BI);
$BI = bi($C11x,$C14x,$C41x,$C44x,1/3,2/3);
$C32x = $BI + (li($C31x,$C34x,1/3)-$BI) + (li($C12x,$C42x,2/3)-$BI);
$BI = bi($C11x,$C14x,$C41x,$C44x,2/3,2/3);
$C33x = $BI + (li($C31x,$C34x,2/3)-$BI) + (li($C13x,$C43x,2/3)-$BI);
$BI = bi($C11y,$C14y,$C41y,$C44y,1/3,1/3);
$C22y = $BI + (li($C21y,$C24y,1/3)-$BI) + (li($C12y,$C42y,1/3)-$BI);
$BI = bi($C11y,$C14y,$C41y,$C44y,2/3,1/3);
$C23y = $BI + (li($C21y,$C24y,2/3)-$BI) + (li($C13y,$C43y,1/3)-$BI);
$BI = bi($C11y,$C14y,$C41y,$C44y,1/3,2/3);
$C32y = $BI + (li($C31y,$C34y,1/3)-$BI) + (li($C12y,$C42y,2/3)-$BI);
$BI = bi($C11y,$C14y,$C41y,$C44y,2/3,2/3);
$C33y = $BI + (li($C31y,$C34y,2/3)-$BI) + (li($C13y,$C43y,2/3)-$BI);
$BI = bi($C11z,$C14z,$C41z,$C44z,1/3,1/3);
$C22z = $BI + (li($C21z,$C24z,1/3)-$BI) + (li($C12z,$C42z,1/3)-$BI);
$BI = bi($C11z,$C14z,$C41z,$C44z,2/3,1/3);
$C23z = $BI + (li($C21z,$C24z,2/3)-$BI) + (li($C13z,$C43z,1/3)-$BI);
$BI = bi($C11z,$C14z,$C41z,$C44z,1/3,2/3);
$C32z = $BI + (li($C31z,$C34z,1/3)-$BI) + (li($C12z,$C42z,2/3)-$BI);
$BI = bi($C11z,$C14z,$C41z,$C44z,2/3,2/3);
$C33z = $BI + (li($C31z,$C34z,2/3)-$BI) + (li($C13z,$C43z,2/3)-$BI);

$e = '&eacute;';

TEXT(beginproblem());
BEGIN_PGML
Consider a control net for a cubic B[$e]*zier surface whose outer edges are defined, but whose interior is not.

[`C_{1,1}=([$C11x],[$C11y],[$C11z])`],
[`C_{1,2}=([$C12x],[$C12y],[$C12z])`],
[`C_{1,3}=([$C13x],[$C13y],[$C13z])`],
[`C_{1,4}=([$C14x],[$C14y],[$C14z])`],

[`C_{2,1}=([$C21x],[$C21y],[$C21z])`],
[`C_{2,2}=(?,?,?)`],
[`C_{2,3}=(?,?,?)`],
[`C_{2,4}=([$C24x],[$C24y],[$C24z])`],

[`C_{3,1}=([$C31x],[$C31y],[$C31z])`],
[`C_{3,2}=(?,?,?)`],
[`C_{3,3}=(?,?,?)`],
[`C_{3,4}=([$C34x],[$C34y],[$C34z])`],

[`C_{4,1}=([$C41x],[$C41y],[$C41z])`],
[`C_{4,2}=([$C42x],[$C42y],[$C42z])`],
[`C_{4,3}=([$C43x],[$C43y],[$C43z])`],
[`C_{4,4}=([$C44x],[$C44y],[$C44z])`]

Use Coons's formula (equation 14.8 in the text) to compute the interior of the control net.

[`C_{2,2}=`]([_____]{$C22x},[_____]{$C22y},[_____]{$C22z}),
[`C_{2,3}=`]([_____]{$C23x},[_____]{$C23y},[_____]{$C23z}),

[`C_{3,2}=`]([_____]{$C32x},[_____]{$C32y},[_____]{$C32z}),
[`C_{3,3}=`]([_____]{$C33x},[_____]{$C33y},[_____]{$C33z})
END_PGML

$z = 0;

BEGIN_PGML_SOLUTION
For [`C_{2,2}`], we need first to find [`B_{1/3,1/3}`], which is a bilinear interpolation among the four corner points:

>> [`\frac23\left(
    \frac23([$C11x],[$C11y],[$C11z])+\frac13([$C14x],[$C14y],[$C14z])
  \right)+\frac13\left(
    \frac23([$C41x],[$C41y],[$C41z])+\frac13([$C44x],[$C44y],[$C44z])
  \right)=
  ([$z+bi($C11x,$C14x,$C41x,$C44x,1/3,1/3)],
   [$z+bi($C11y,$C14y,$C41y,$C44y,1/3,1/3)],
   [$z+bi($C11z,$C14z,$C41z,$C44z,1/3,1/3)])`] <<

We also need to compute [`\vec\Delta_1`], which in this case involves a linear interpolation between [`C_{2,1}`] and [`C_{2,4}`] at [`\frac13`].

>> [`(\frac23C_{2,1}+\frac13C_{2,4})-B_{1/3,1/3}=(
    [$z+li($C21x,$C24x,1/3)],
    [$z+li($C21y,$C24y,1/3)],
    [$z+li($C21z,$C24z,1/3)])-B_{1/3,1/3}=(
    [$z+li($C21x,$C24x,1/3)-bi($C11x,$C14x,$C41x,$C44x,1/3,1/3)],
    [$z+li($C21y,$C24y,1/3)-bi($C11y,$C14y,$C41y,$C44y,1/3,1/3)],
    [$z+li($C21z,$C24z,1/3)-bi($C11z,$C14z,$C41z,$C44z,1/3,1/3)])`] <<

We also need to compute [`\vec\Delta'_1`], which in this case involves a linear interpolation between [`C_{1,2}`] and [`C_{4,2}`] at [`\frac13`].

>> [`(\frac23C_{1,2}+\frac13C_{4,2})-B_{1/3,1/3}=(
    [$z+li($C12x,$C42x,1/3)],
    [$z+li($C12y,$C42y,1/3)],
    [$z+li($C12z,$C42z,1/3)])-B_{1/3,1/3}=(
    [$z+li($C12x,$C42x,1/3)-bi($C11x,$C14x,$C41x,$C44x,1/3,1/3)],
    [$z+li($C12y,$C42y,1/3)-bi($C11y,$C14y,$C41y,$C44y,1/3,1/3)],
    [$z+li($C12z,$C42z,1/3)-bi($C11z,$C14z,$C41z,$C44z,1/3,1/3)])`] <<

The sum of these is [`C_{2,2}`].

>> [`C_{2,2}=([$z+bi($C11x,$C14x,$C41x,$C44x,1/3,1/3)],
   [$z+bi($C11y,$C14y,$C41y,$C44y,1/3,1/3)],
   [$z+bi($C11z,$C14z,$C41z,$C44z,1/3,1/3)]) +
   ([$z+li($C21x,$C24x,1/3)-bi($C11x,$C14x,$C41x,$C44x,1/3,1/3)],
    [$z+li($C21y,$C24y,1/3)-bi($C11y,$C14y,$C41y,$C44y,1/3,1/3)],
    [$z+li($C21z,$C24z,1/3)-bi($C11z,$C14z,$C41z,$C44z,1/3,1/3)]) +
   ([$z+li($C12x,$C42x,1/3)-bi($C11x,$C14x,$C41x,$C44x,1/3,1/3)],
    [$z+li($C12y,$C42y,1/3)-bi($C11y,$C14y,$C41y,$C44y,1/3,1/3)],
    [$z+li($C12z,$C42z,1/3)-bi($C11z,$C14z,$C41z,$C44z,1/3,1/3)])
   =([$C22x],[$C22y],[$C22z])`] <<

A similar procedure contructs the other control points, with these results.

>> [`C_{2,3}=([$C23x],[$C23y],[$C23z])`] <<

>> [`C_{3,2}=([$C32x],[$C32y],[$C32z])`] <<

>> [`C_{3,3}=([$C33x],[$C33y],[$C33z])`] <<
END_PGML_SOLUTION

ENDDOCUMENT();

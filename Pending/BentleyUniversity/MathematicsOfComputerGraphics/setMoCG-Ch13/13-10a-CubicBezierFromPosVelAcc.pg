##DESCRIPTION
## Compute a cubic Bezier curve from position, velocity, and acceleration data
##ENDDESCRIPTION

## DBsubject('Calculus - multivariable')
## DBchapter('Calculus of vector valued functions')
## DBsection('Integrals')
## Date('04/05/2018')
## Author('Nathan Carter')
## Institution('Bentley University')
## TitleText1('Introduction to the Mathematics of Computer Graphics')
## EditionText1('1')
## AuthorText1('Nathan Carter')
## Section1('13')
## Problem1('9')
##KEYWORDS('Bezier curves','integrals','cubic','position','velocity','acceleration')

########################################################################

DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PGcourse.pl",
  "parserPopUp.pl",
);

Context("Numeric");
Context()->variables->add(t=>'Real');
Context()->variables->add(P=>'Real');
Context()->variables->add(Q=>'Real');
Context()->variables->add(V=>'Real');
Context()->variables->add(A=>'Real');
$showPartialCorrectAnswers = 1;

$e = '&eacute;';

TEXT(beginproblem());
BEGIN_PGML
What are the control point of the cubic B[$e]*zier curve with initial position [`P`], final position [`Q`], initial velocity [`V`], and initial acceleration [`A`]?

Answer:

[`C_1`]=[_______________]{"P"}
[`C_2`]=[_______________]{"P+V/3"}
[`C_3`]=[_______________]{"A/6+P+2V/3"}
[`C_4`]=[_______________]{"Q"}
END_PGML

BEGIN_PGML_SOLUTION
To guarantee the desired initial and final positions, we set [`C_1=P`] and [`C_4=Q`].  To guarantee the desired initial velocity, we set [`C_2=P+\frac13V`].  To guarantee the desired acceleration, we would like to substitute [`t=0`] into the acceleration formula for cubic B[$e]*zier curves.

Recall that the cubic B[$e]*zier formula looks like this:

>> [`\vec f(t)=(1-t)^3C_1+3t(1-t)^2C_2+3t^2(1-t)C_3+t^3C_4,`] <<

which we can rearrange into a more easily differentiable form (as the textbook does),

>> [`\vec f(t)=C_1+(3C_2-3C_1)t+(3C_3-6C_2+3C_1)t^2
              +(C_4-3C_3+3C_2-C_1)t^3.`] <<

This lets us compute a velocity function

>> [`\vec f'(t)=(3C_2-3C_1)+2(3C_3-6C_2+3C_1)t+3(C_4-3C_3+3C_2-C_1)t^2`] <<

and an acceleration function

>> [`\vec f''(t)=2(3C_3-6C_2+3C_1)+6(C_4-3C_3+3C_2-C_1)t.`] <<

Now we can use [`t=0`] in that function.

>> [`\vec f''(0)=2(3C_3-6C_2+3C_1)=6C_3-12\left(P+\frac13V\right)+6P
    =6C_3-6P-4V`] <<

Setting [`\vec f''(0)=A`] gives [`C_3=\frac16A+P+\frac23V`].

Thus our final answers are these:

>> [`C_1=P ~ ~ ~ ~ ~ C_2=P+\frac13V ~ ~ ~ ~ ~
     C_3=\frac16A+P+\frac23V ~ ~ ~ ~ ~ C_4=Q`] <<
END_PGML_SOLUTION

ENDDOCUMENT();

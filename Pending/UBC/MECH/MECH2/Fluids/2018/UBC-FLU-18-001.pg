##DESCRIPTION
## 
## Created by the UBC Faculty of Applied Science.  
## Project led by Agnes d'Entremont, Jonathan Verrett, and Negar M. Harandi. 
##
## Contact: agnes.dentremont@mech.ubc.ca
##
## This work is licensed under the Creative Commons
## Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
## <https://creativecommons.org/licenses/by-sa/4.0/>
##
## We gratefully acknowledge the financial support for this 
## project provided by UBC Vancouver students via the Teaching
## and Learning Enhancement Fund. We also gratefully acknowledge
## additional funding support from BCcampus, the UBC Department of
## Mechanical Engineering, and the UBC Applied Science Deanâ€™s Office.  
##
## This work was completed on the traditional, ancestral, and unceded
## territory of the Musqueam people. 
##
##ENDDESCRIPTION

## DBsubject(Fluid mechanics)
## DBchapter(Definitions)
## DBsection(Unit systems, conversion of units, dimensional homogeneity)
## Institution('University of British Columbia')
## Author(UBC Engineering)
## Date()
## Level()
## KEYWORDS('Dimensional homogeneity', 'unit conversion')
## RESOURCES()
## TitleText('TBD')
## EditionText('TBD')
## AuthorText('TBD')
## Section('TBD')
## Problem('TBD')
## Beginner


DOCUMENT();

loadMacros(   
	"PGstandard.pl",     # Standard macros for PG language
	"MathObjects.pl",
	"PGML.pl",
	"parserPopUp.pl",
	"parserMultiAnswer.pl",
	"parserRadioButtons.pl",
	"PGauxiliaryFunctions.pl",
	#"source.pl",        # allows code to be displayed on certain sites.
	#"PGcourse.pl", 	 # Customization file for the course
   	);

TEXT(beginproblem());

##############################################################
#
#  Setup
#
#

Context("Numeric");
#given
$r = random(0,20,1);
$WindSpeedTmp = 30+$r; #random(30,50,1); #[km/h]
$RotorRadTmp = 200+$r; #random(200,220,1); #[ft]
$PowerOutputTmp = 2 +$r*.2; #random(2,6,0.2); #[MW]

#computation
$WindSpeed = $WindSpeedTmp*1000/3600;
$RotorRad = $RotorRadTmp*12*0.0254;
$PowerOutput = $PowerOutputTmp*(10**6);
$RotorArea = pi*($RotorRad**2);
$Ans = 2*$PowerOutput/(1.2*$RotorArea*($WindSpeed**3));

#set tolerance
Context()->flags->set(
tolerance=>.05,
tolType=>'absolute');

##############################################################
#
#  PGML 
#
#

BEGIN_PGML

An engineer uses the following formulas to calculate the power output of a wind turbine and the thrust force acting on its rotor under steady operation:

>>[``P=\frac{1}{2} C_p \rho AU^2``]<<

>>[``F_t=\frac{1}{2} C_t \rho AU^2``]<<

[`P`] is the power output of the turbine, [`F_t`] is the thrust force acting on the rotor, [`C_p`] is the power coefficient of the rotor (and also considers drivetrain and generator losses), [`\rho`] is the density of air, [`A`] is the rotor swept area, and [`U`] is the mean free stream wind speed.

For a mean free stream wind speed of [`[$WindSpeedTmp]`] [`km/h`] at a temperature of [`20^{\circ}C`] and a rotor radius of [`[$RotorRadTmp]`] [`ft`], the engineer correctly calculates the thrust force; however, their power calculation did not match the measured power output of [`[$PowerOutputTmp]`] [`MW`].

Check for dimensional homogeneity to identify the source of the error, then determine the power coefficient of the wind turbine.

[`C_p = `] [______]{"$Ans"}

END_PGML

##############################################################

ENDDOCUMENT();
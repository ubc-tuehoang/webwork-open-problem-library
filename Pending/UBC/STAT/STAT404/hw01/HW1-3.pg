#########################################################
##KEYWORDS('Inference'; 'confidence intervals for proportion', 'confidence
##intervals for population size'; 'find a 95% confidence interval for a
##population proportion', 'find approximate confidence interval for a population
##size given the count within the population with the characteristic of interest.) 
# DESCRIPTION
## DBsubject('Statistics')
## DBchapter('Experimental design')
## DBsection('Concepts')
## Date('2016/08/31')
## Author('Bo Chang')
## Institution('University of British Columbia')
## level('5')

#########################################################
DOCUMENT();
## Initializations: (Required)
loadMacros(
  "PGstandard.pl",
  "PGchoicemacros.pl",
  "parserRadioButtons.pl",
  "MathObjects.pl",
  "parserMultiAnswer.pl",
  "RserveClient.pl",
  "answerHints.pl",
  "PGML.pl",
  "PGcourse.pl"
);

#########################################################
## Setup: this is where we use Perl and PG objects (Required)


###Random number generator seed based on student's login. No need to change.
Context("Numeric");
# warn("Student name: $studentName, login: $studentLogin, id: $studentID");
my $hash = crypt($studentLogin, 'a1');
# warn("crypt: $hash");
@nums = (0..9,'a'..'z','A'..'Z');
my %nums = map { $nums[$_] => $_ } 0..$#nums;
my $seed = 0;
$seed = $seed * 62 + $nums{$_} foreach split(//, substr($hash, -5, 5));
##warn("seed: " . $seed);

####Call R server
rserve_eval("set.seed($seed)"); ## can not combine with the rest

@yVec=rserve_eval('
y <- round(c(67, 79, 61, 75, 59, 90, 52, 87) + rnorm(8), 2)
');

@beta1 = rserve_eval('
x1 <- c(rep(-1, 4), rep(1, 4))
x2 <- c(-1, -1, 1, 1, -1, -1, 1, 1)
x3 <- rep(c(-1, 1), 4)
round(lm(y~x1+x2+x3)$coefficients[2], 2)
');


$array = qq(
\begin{array}{rrrc}
\hline
Conc & Grind & Time & \% U recovery \\
(x_1) & (x_2) & (x_3) & (y) \\
\hline
-1 &   -1 &     -1 &    @yVec[0]\\
-1 &   -1 &      1 &    @yVec[1] \\
-1 &    1 &     -1 &    @yVec[2] \\
-1 &    1 &      1 &    @yVec[3] \\
 1 &   -1 &     -1 &    @yVec[4] \\
 1 &   -1 &      1 &    @yVec[5] \\
 1 &    1 &     -1 &    @yVec[6] \\
 1 &    1 &      1 &    @yVec[7] \\
\hline
\end{array}
);


$q1ans =-1;
$q2ans =1;
$q3ans =8;
$q4ans =@beta1[0];

#########################################################
## Main Text: where all text goes (Required)
Context()->texStrings;
BEGIN_TEXT


This question continues the context and data of Question 1.

END_TEXT
BEGIN_PGML
[$array]
END_PGML
BEGIN_TEXT

Calculate by hand all numerical answers in this and the following questions.
(You can check your work using R, 
but at this stage it aids learning to work out solutions by hand.)

Suppose we write the model
in the form \(\newcommand{\X}{{\bf X}}
\newcommand{\YVec}{{\bf Y}}
\newcommand{\bVec}{\boldsymbol \beta}
\newcommand{\eps}{\boldsymbol \epsilon}

\YVec = \X \bVec + \eps\),
where \(\YVec\), \(\X\), and \(\eps\) each have eight rows.

$BR
$BR

$BBOLD [A] $EBOLD 
What is the element in row 7, column 4 of \(\X\)?
\{  ans_rule(4) \}

$BR

$BBOLD [B] $EBOLD 
What is the element in row 2, column 1 of \(\X\)?
\{  ans_rule(4) \}

$BR

$BBOLD [C] $EBOLD 
What is the element in row 1, column 1 of \(\X^T \X\)?
\{  ans_rule(4) \}

$BR

$BBOLD [D] $EBOLD 
Compute the least squares estimate of \(\hat{\beta}_1\).
Give your answer to 2 decimal places.
\{  ans_rule(4) \}




END_TEXT
#########################################################
## Answers evaluation (Required)

ANS( num_cmp($q1ans, tol=> 0.1) );
ANS( num_cmp($q2ans, tol=> 0.1) );
ANS( num_cmp($q3ans, tol=> 0.1) );
ANS( num_cmp($q4ans, tol=> 0.1) );


#########################################################
## Solution (Optional but recommended)
Context()->texStrings;
BEGIN_SOLUTION


END_SOLUTION
ENDDOCUMENT();

# DESCRIPTION
# Problem from 'Mathematics: The Language of Electrical and Computer Engineering', Viniotis and Trussell, 3rd ed.
# WeBWorK problem written by Joel Trussell, <hjt@ncsu.edu>
# ENDDESCRIPTION

## DBsubject(Electrical Engineering)
## DBchapter(Vectors and Matrices)
## DBsection(Problems)
## Institution(North Carolina State University)
## Author(H. J. Trussell)
## TitleText1('Mathematics: The Language of Electrical and Computer Engineering')
## AuthorText1('Viniotis and Trussell')
## EditionText1('3')
## Problem1('5.20', '5.23')
## Keywords('linear algebra','matrices')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "PGchoicemacros.pl",
  "PGgraphmacros.pl",
  "PGmatrixmacros.pl",
  "PGnumericalmacros.pl",
  "PGcourse.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

foreach $i (0..3) {
$a[$i]=0;
$b[$i]=0;
$c[$i]=0;
$d[$i]=0;
}

$zeroth = random(1,3,1);
$a[$zeroth] = 1;

$first = random(2,3,1);
if ($zeroth == $first) {$first = 5 - $first;}
$b[$first] = 1;

$second = random(0,3,1);
if (($zeroth == $second) or ($first == $second)) { $second = 0;}
$c[$second] = 1;

$third = 6 - $zeroth - $first - $second; 
$d[$third] = 1;

BEGIN_TEXT
This problem is related to Problems 5.20 and 5.23 in the text.
$PAR
This is a practice problem. You are not required to work it.

$PAR
A square matrix is called a permutation matrix if it contains the entry 1 exactly once in each row and in
each column, with all other entries being 0. All permutation matrices are invertible. 
Find the inverse of the following permutation matrix 
$BR
\{ mbox([ '\(A=\)', display_matrix([[$a[0], $b[0], $c[0], $d[0]], 
				      [$a[1], $b[1], $c[1], $d[1]],
				      [$a[2], $b[2], $c[2], $d[2]],
				      [$a[3], $b[3], $c[3], $d[3]]]) ]) \} 
$BR
\{ mbox([ '\(A^{-1}=\)', answer_matrix(4,4,5) ]) \}

END_TEXT

ANS(num_cmp($a[0]));
ANS(num_cmp($a[1]));
ANS(num_cmp($a[2]));
ANS(num_cmp($a[3]));
ANS(num_cmp($b[0]));
ANS(num_cmp($b[1]));
ANS(num_cmp($b[2]));
ANS(num_cmp($b[3]));
ANS(num_cmp($c[0]));
ANS(num_cmp($c[1]));
ANS(num_cmp($c[2]));
ANS(num_cmp($c[3]));
ANS(num_cmp($d[0]));
ANS(num_cmp($d[1]));
ANS(num_cmp($d[2]));
ANS(num_cmp($d[3]));


ENDDOCUMENT();       # This should be the last executable line in the problem.

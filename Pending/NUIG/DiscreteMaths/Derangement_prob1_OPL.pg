#DESCRIPTION
##  Discrete Mathematics: Advanced Counting using PIE
##ENDDESCRIPTION

## DBsubject(Discrete Mathematics)
## DBchapter(Counting)
## DBsection(Advanced Counting using PIE)
## Date(04/01/2017)
## Institution(NUI Galway)
## Author(Niall Madden)
## Level(3)
## MO(1)
## KEYWORDS('combinatorics', 'derangements')

#####################################################################
DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PGcourse.pl"
);

#####################################################################

$showPartialCorrectAnswers = 1;
TEXT(beginproblem());

Context("Numeric");

$n = random(4,7,1); # Number of people/bags

# Q1: How many ways can they have their bags returned?
$ans1 = Compute("$n!");

# Q2: Number of degranements of the bags/people:
$ans2 = Compute("$n!");
for ($i = 1; $i <= $n; $i++)
{
     $ans2 = $ans2 + Compute("((-1)**$i)*($n!)/($i!)");
}

# Q3: Degranements of all but one of the bags/people:
$ans3 = Compute("($n-1)!");
for ($i = 1; $i <= $n-1; $i++)
{
     $ans3 = $ans3 + Compute("((-1)**$i)*(($n-1)!)/($i!)");
}
$ans3 = Compute("$n*($ans3)");

#####################################################################

Context()->texStrings;
BEGIN_PGML
On Friday morning, before their Discrete Mathematics lecture, [$n] students each leave one bag each in the Cloakroom.

How many ways can their bags be returned to them?
END_PGML
BEGIN_TEXT
$PAR
Answer: \{ans_rule(20)\}
$PAR
END_TEXT
#####################################################################

ANS(($ans1)->cmp());

#####################################################################

Context()->texStrings;
BEGIN_PGML
How many ways can their bags be returned to them so that none of then get their own bags back?
END_PGML
BEGIN_TEXT
$PAR
Answer: \{ans_rule(20)\}
$PAR
END_TEXT
#####################################################################

ANS(($ans2)->cmp());


#####################################################################

Context()->texStrings;
BEGIN_PGML
How many ways can their bags be returned to them so that *exactly one of them* gets their own bag back?
END_PGML
BEGIN_TEXT
$PAR
Answer: \{ans_rule(20)\}
$PAR
END_TEXT
#####################################################################

ANS(($ans3)->cmp());

ENDDOCUMENT();        # This should be the last executable line in the problem.
